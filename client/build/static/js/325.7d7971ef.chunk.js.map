{"version":3,"file":"static/js/325.7d7971ef.chunk.js","mappings":"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","sources":["Routes/Login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst user = AuthService.getCurrentUser();\r\n\r\nexport default function SignIn() {\r\n  useEffect(() => {\r\n    if (!!user) {\r\n      AuthService.logout();\r\n      window.location.reload();\r\n    }\r\n  }, []);\r\n\r\n  const navigate = useNavigate();\r\n  const [Loading, setLoading] = useState(false);\r\n  const [data, setData] = useState({\r\n    phone: \"\",\r\n    password: \"hello\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setData((prev) => {\r\n      return {\r\n        ...prev,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    if ( data.phone) {\r\n      setLoading(true);\r\n      AuthService.login(data.phone, data.password).then(\r\n        (res) => {\r\n          if (res.role === \"farmer\") {\r\n            toast.success(\"Login successful!\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n            setTimeout(() => {\r\n              navigate(\"/farmers\");\r\n              window.location.reload();\r\n            }, 1000);\r\n          }\r\n          if (res.role === \"admin\") {\r\n            toast.success(\"Login successful!\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n            setTimeout(() => {\r\n              navigate(\"/admin\");\r\n              window.location.reload();\r\n            }, 1000);\r\n          }\r\n          if (res.role === \"customer\") {\r\n            toast.success(\"Login successful!\", {\r\n              position: \"top-center\",\r\n              autoClose: 3000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: \"light\",\r\n            });\r\n            setTimeout(() => {\r\n              navigate(\"/customers\");\r\n              window.location.reload();\r\n            }, 1000);\r\n          }\r\n          setLoading(false);\r\n        },\r\n        (error) => {\r\n          console.log(error)\r\n          toast.warn(\"Login failed\", {\r\n            position: \"top-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setData({\r\n            phone: \"\",\r\n            password: \"\",\r\n          });\r\n          setLoading(false);\r\n        }\r\n      );\r\n    } else {\r\n      toast.warn(\"data invalid\", {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n      />\r\n      {/* Same as */}\r\n      <ToastContainer />\r\n      {!Loading ? (\r\n        <div className=\"authbox\">\r\n          <img\r\n            className=\"login_image\"\r\n            src=\"./images/2.png\"\r\n            alt=\"logo\"\r\n          />\r\n          <form onSubmit={handleLogin} className=\"login_details\">\r\n            {/* <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n              </Avatar> */}\r\n            <img className=\"form-logo\" src=\"./logo.png\" alt=\"form-logo\" />\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Welcome to Wingrowagritech\r\n            </Typography>\r\n            <Typography mt={2} component=\"h1\" variant=\"h5\">\r\n              Login here.\r\n            </Typography>\r\n            <TextField\r\n              inputlabelprops={{\r\n                style: { fontSize: 16, fontFamily: \"monospace\" },\r\n              }}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"phone\"\r\n              label=\"Mobile Number\"\r\n              name=\"phone\"\r\n              value={data.phone}\r\n              autoComplete=\"phone\"\r\n              autoFocus\r\n              color=\"success\"\r\n              className=\"textfield\"\r\n              onChange={handleChange}\r\n            />\r\n            {/* <TextField\r\n              inputlabelprops={{\r\n                style: { fontSize: 16, fontFamily: \"monospace\" },\r\n              }}\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              value={data.password}\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              color=\"success\"\r\n              className=\"textfield\"\r\n              onChange={handleChange}\r\n            /> */}\r\n            <Link className=\"form-link\" to={\"/Forgot\"} variant=\"body2\">\r\n              Forgot your password?\r\n            </Link>\r\n            <Button\r\n              className=\"form-btn\"\r\n              type=\"submit\"\r\n              color=\"success\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Login\r\n            </Button>\r\n            <Typography className=\"form-link\" mt={2}>\r\n              New to Wingrow? \r\n               <Link to=\"/Register\" variant=\"body2\" className=\"form-link signupWithUs\">\r\n                 Signup with us\r\n              </Link>\r\n            </Typography>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["user","AuthService","SignIn","useEffect","window","location","reload","navigate","useNavigate","useState","Loading","setLoading","phone","password","data","setData","className","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","src","alt","onSubmit","e","preventDefault","then","res","role","toast","progress","undefined","setTimeout","error","console","log","component","variant","mt","inputlabelprops","style","fontSize","fontFamily","margin","required","fullWidth","id","label","name","value","autoComplete","autoFocus","color","onChange","target","prev","to","type","size","sx","mb"],"sourceRoot":""}