{"version":3,"file":"static/js/997.aba9ab1a.chunk.js","mappings":"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","sources":["../node_modules/@firebase/util/src/crypt.ts","../node_modules/@firebase/util/src/deepCopy.ts","../node_modules/@firebase/util/src/environment.ts","../node_modules/@firebase/util/src/defaults.ts","../node_modules/@firebase/util/src/deferred.ts","../node_modules/@firebase/util/src/errors.ts","../node_modules/@firebase/util/src/obj.ts","../node_modules/@firebase/util/src/query.ts","../node_modules/@firebase/util/src/subscribe.ts","../node_modules/@firebase/util/src/compat.ts","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@firebase/app-compat/src/firebaseApp.ts","../node_modules/@firebase/app-compat/src/errors.ts","../node_modules/@firebase/app-compat/src/firebaseNamespace.ts","../node_modules/@firebase/app-compat/src/firebaseNamespaceCore.ts","../node_modules/@firebase/app-compat/src/logger.ts","../node_modules/@firebase/app-compat/src/index.ts","../node_modules/@firebase/app-compat/src/registerCoreComponents.ts","../node_modules/@firebase/app/node_modules/idb/build/wrap-idb-value.js","../node_modules/@firebase/app/node_modules/idb/build/index.js","../node_modules/@firebase/app/src/platformLoggerService.ts","../node_modules/@firebase/app/src/logger.ts","../node_modules/@firebase/app/src/constants.ts","../node_modules/@firebase/app/src/internal.ts","../node_modules/@firebase/app/src/errors.ts","../node_modules/@firebase/app/src/firebaseApp.ts","../node_modules/@firebase/app/src/api.ts","../node_modules/@firebase/app/src/indexeddb.ts","../node_modules/@firebase/app/src/heartbeatService.ts","../node_modules/@firebase/app/src/registerCoreComponents.ts","../node_modules/@firebase/app/src/index.ts","../node_modules/@firebase/component/src/component.ts","../node_modules/@firebase/component/src/constants.ts","../node_modules/@firebase/component/src/provider.ts","../node_modules/@firebase/component/src/component_container.ts","../node_modules/@firebase/logger/src/logger.ts","../node_modules/firebase/compat/app/index.ts","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/tslib/tslib.es6.js","../node_modules/@firebase/auth/src/model/enum_maps.ts","../node_modules/@firebase/auth/src/core/errors.ts","../node_modules/@firebase/auth/src/core/util/log.ts","../node_modules/@firebase/auth/src/core/util/assert.ts","../node_modules/@firebase/auth/src/core/util/instantiator.ts","../node_modules/@firebase/auth/src/core/util/location.ts","../node_modules/@firebase/auth/src/core/util/delay.ts","../node_modules/@firebase/auth/src/core/util/navigator.ts","../node_modules/@firebase/auth/src/core/util/emulator.ts","../node_modules/@firebase/auth/src/core/util/fetch_provider.ts","../node_modules/@firebase/auth/src/api/errors.ts","../node_modules/@firebase/auth/src/api/index.ts","../node_modules/@firebase/auth/src/api/account_management/account.ts","../node_modules/@firebase/auth/src/core/util/time.ts","../node_modules/@firebase/auth/src/core/user/id_token_result.ts","../node_modules/@firebase/auth/src/core/user/invalidation.ts","../node_modules/@firebase/auth/src/core/user/proactive_refresh.ts","../node_modules/@firebase/auth/src/core/user/user_metadata.ts","../node_modules/@firebase/auth/src/core/user/reload.ts","../node_modules/@firebase/auth/src/api/authentication/token.ts","../node_modules/@firebase/auth/src/core/user/token_manager.ts","../node_modules/@firebase/auth/src/core/user/user_impl.ts","../node_modules/@firebase/auth/src/core/persistence/in_memory.ts","../node_modules/@firebase/auth/src/core/persistence/persistence_user_manager.ts","../node_modules/@firebase/auth/src/core/util/browser.ts","../node_modules/@firebase/auth/src/core/util/version.ts","../node_modules/@firebase/auth/src/core/auth/middleware.ts","../node_modules/@firebase/auth/src/core/auth/auth_impl.ts","../node_modules/@firebase/auth/src/core/auth/emulator.ts","../node_modules/@firebase/auth/src/core/credentials/auth_credential.ts","../node_modules/@firebase/auth/src/api/account_management/email_and_password.ts","../node_modules/@firebase/auth/src/api/authentication/email_and_password.ts","../node_modules/@firebase/auth/src/api/authentication/email_link.ts","../node_modules/@firebase/auth/src/core/credentials/email.ts","../node_modules/@firebase/auth/src/api/authentication/idp.ts","../node_modules/@firebase/auth/src/core/credentials/oauth.ts","../node_modules/@firebase/auth/src/api/authentication/sms.ts","../node_modules/@firebase/auth/src/core/credentials/phone.ts","../node_modules/@firebase/auth/src/core/action_code_url.ts","../node_modules/@firebase/auth/src/core/providers/email.ts","../node_modules/@firebase/auth/src/core/providers/federated.ts","../node_modules/@firebase/auth/src/core/providers/oauth.ts","../node_modules/@firebase/auth/src/core/providers/facebook.ts","../node_modules/@firebase/auth/src/core/providers/google.ts","../node_modules/@firebase/auth/src/core/providers/github.ts","../node_modules/@firebase/auth/src/core/credentials/saml.ts","../node_modules/@firebase/auth/src/core/providers/saml.ts","../node_modules/@firebase/auth/src/core/providers/twitter.ts","../node_modules/@firebase/auth/src/api/authentication/sign_up.ts","../node_modules/@firebase/auth/src/core/user/user_credential_impl.ts","../node_modules/@firebase/auth/src/mfa/mfa_error.ts","../node_modules/@firebase/auth/src/core/strategies/anonymous.ts","../node_modules/@firebase/auth/src/core/util/providers.ts","../node_modules/@firebase/auth/src/core/user/link_unlink.ts","../node_modules/@firebase/auth/src/core/user/reauthenticate.ts","../node_modules/@firebase/auth/src/core/strategies/credential.ts","../node_modules/@firebase/auth/src/api/authentication/custom_token.ts","../node_modules/@firebase/auth/src/core/strategies/custom_token.ts","../node_modules/@firebase/auth/src/mfa/mfa_info.ts","../node_modules/@firebase/auth/src/core/strategies/action_code_settings.ts","../node_modules/@firebase/auth/src/core/strategies/email_and_password.ts","../node_modules/@firebase/auth/src/core/strategies/email_link.ts","../node_modules/@firebase/auth/src/api/authentication/create_auth_uri.ts","../node_modules/@firebase/auth/src/core/strategies/email.ts","../node_modules/@firebase/auth/src/api/account_management/profile.ts","../node_modules/@firebase/auth/src/core/user/account_info.ts","../node_modules/@firebase/auth/src/core/user/additional_user_info.ts","../node_modules/@firebase/auth/src/core/index.ts","../node_modules/@firebase/auth/src/mfa/mfa_session.ts","../node_modules/@firebase/auth/src/mfa/mfa_resolver.ts","../node_modules/@firebase/auth/src/api/account_management/mfa.ts","../node_modules/@firebase/auth/src/mfa/mfa_user.ts","../node_modules/@firebase/auth/src/core/persistence/index.ts","../node_modules/@firebase/auth/src/platform_browser/persistence/browser.ts","../node_modules/@firebase/auth/src/platform_browser/persistence/local_storage.ts","../node_modules/@firebase/auth/src/platform_browser/persistence/session_storage.ts","../node_modules/@firebase/auth/src/platform_browser/messagechannel/promise.ts","../node_modules/@firebase/auth/src/platform_browser/messagechannel/receiver.ts","../node_modules/@firebase/auth/src/core/util/event_id.ts","../node_modules/@firebase/auth/src/platform_browser/messagechannel/sender.ts","../node_modules/@firebase/auth/src/platform_browser/auth_window.ts","../node_modules/@firebase/auth/src/platform_browser/util/worker.ts","../node_modules/@firebase/auth/src/platform_browser/persistence/indexed_db.ts","../node_modules/@firebase/auth/src/api/authentication/mfa.ts","../node_modules/@firebase/auth/src/api/authentication/recaptcha.ts","../node_modules/@firebase/auth/src/platform_browser/load_js.ts","../node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha_mock.ts","../node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha_loader.ts","../node_modules/@firebase/auth/src/platform_browser/recaptcha/recaptcha_verifier.ts","../node_modules/@firebase/auth/src/platform_browser/strategies/phone.ts","../node_modules/@firebase/auth/src/platform_browser/providers/phone.ts","../node_modules/@firebase/auth/src/core/util/resolver.ts","../node_modules/@firebase/auth/src/core/strategies/idp.ts","../node_modules/@firebase/auth/src/core/strategies/abstract_popup_redirect_operation.ts","../node_modules/@firebase/auth/src/platform_browser/strategies/popup.ts","../node_modules/@firebase/auth/src/core/strategies/redirect.ts","../node_modules/@firebase/auth/src/platform_browser/strategies/redirect.ts","../node_modules/@firebase/auth/src/core/auth/auth_event_manager.ts","../node_modules/@firebase/auth/src/api/project_config/get_project_config.ts","../node_modules/@firebase/auth/src/core/util/validate_origin.ts","../node_modules/@firebase/auth/src/platform_browser/iframe/gapi.ts","../node_modules/@firebase/auth/src/platform_browser/iframe/iframe.ts","../node_modules/@firebase/auth/src/platform_browser/util/popup.ts","../node_modules/@firebase/auth/src/core/util/handler.ts","../node_modules/@firebase/auth/src/platform_browser/popup_redirect.ts","../node_modules/@firebase/auth/src/platform_browser/mfa/assertions/phone.ts","../node_modules/@firebase/auth/src/mfa/mfa_assertion.ts","../node_modules/@firebase/auth/src/core/auth/firebase_internal.ts","../node_modules/@firebase/auth/src/platform_browser/index.ts","../node_modules/@firebase/auth/src/core/auth/register.ts","../node_modules/@firebase/auth/src/platform_cordova/plugins.ts","../node_modules/@firebase/auth/src/core/auth/initialize.ts","../node_modules/@firebase/auth/src/platform_cordova/popup_redirect/utils.ts","../node_modules/@firebase/auth/src/platform_cordova/popup_redirect/events.ts","../node_modules/@firebase/auth/src/platform_cordova/popup_redirect/popup_redirect.ts","../node_modules/@firebase/auth-compat/src/platform.ts","../node_modules/@firebase/auth-compat/src/persistence.ts","../node_modules/@firebase/auth-compat/src/popup_redirect.ts","../node_modules/@firebase/auth-compat/src/wrap.ts","../node_modules/@firebase/auth-compat/src/user_credential.ts","../node_modules/@firebase/auth-compat/src/user.ts","../node_modules/@firebase/auth-compat/src/auth.ts","../node_modules/@firebase/auth/internal/index.ts","../node_modules/@firebase/auth-compat/src/phone_auth_provider.ts","../node_modules/@firebase/auth-compat/src/recaptcha_verifier.ts","../node_modules/@firebase/auth-compat/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './environment';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process.env.__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process.env.__FIREBASE_DEFAULTS_PATH__\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n */\nconst getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n      return ContinueSentinel;\n    }\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) {\n              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            }\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseOptions } from './public-types';\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstantiationMode,\n  Name\n} from '@firebase/component';\nimport {\n  deleteApp,\n  _addComponent,\n  _addOrOverwriteComponent,\n  _DEFAULT_ENTRY_NAME,\n  _FirebaseAppInternal as _FirebaseAppExp\n} from '@firebase/app';\nimport { _FirebaseService, _FirebaseNamespace } from './types';\nimport { Compat } from '@firebase/util';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface _FirebaseApp {\n  /**\n   * The (read-only) name (identifier) for this App. '[DEFAULT]' is the default\n   * App.\n   */\n  name: string;\n\n  /**\n   * The (read-only) configuration options from the app initialization.\n   */\n  options: FirebaseOptions;\n\n  /**\n   * The settable config flag for GDPR opt-in/opt-out\n   */\n  automaticDataCollectionEnabled: boolean;\n\n  /**\n   * Make the given App unusable and free resources.\n   */\n  delete(): Promise<void>;\n}\n/**\n * Global context object for a collection of services using\n * a shared authentication state.\n *\n * marked as internal because it references internal types exported from @firebase/app\n * @internal\n */\nexport class FirebaseAppImpl implements Compat<_FirebaseAppExp>, _FirebaseApp {\n  private container: ComponentContainer;\n\n  constructor(\n    readonly _delegate: _FirebaseAppExp,\n    private readonly firebase: _FirebaseNamespace\n  ) {\n    // add itself to container\n    _addComponent(\n      _delegate,\n      new Component('app-compat', () => this, ComponentType.PUBLIC)\n    );\n\n    this.container = _delegate.container;\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    return this._delegate.automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val) {\n    this._delegate.automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    return this._delegate.name;\n  }\n\n  get options(): FirebaseOptions {\n    return this._delegate.options;\n  }\n\n  delete(): Promise<void> {\n    return new Promise<void>(resolve => {\n      this._delegate.checkDestroyed();\n      resolve();\n    }).then(() => {\n      this.firebase.INTERNAL.removeApp(this.name);\n      return deleteApp(this._delegate);\n    });\n  }\n\n  /**\n   * Return a service instance associated with this app (creating it\n   * on demand), identified by the passed instanceIdentifier.\n   *\n   * NOTE: Currently storage and functions are the only ones that are leveraging this\n   * functionality. They invoke it by calling:\n   *\n   * ```javascript\n   * firebase.app().storage('STORAGE BUCKET ID')\n   * ```\n   *\n   * The service name is passed to this already\n   * @internal\n   */\n  _getService(\n    name: string,\n    instanceIdentifier: string = _DEFAULT_ENTRY_NAME\n  ): _FirebaseService {\n    this._delegate.checkDestroyed();\n\n    // Initialize instance if InstatiationMode is `EXPLICIT`.\n    const provider = this._delegate.container.getProvider(name as Name);\n    if (\n      !provider.isInitialized() &&\n      provider.getComponent()?.instantiationMode === InstantiationMode.EXPLICIT\n    ) {\n      provider.initialize();\n    }\n\n    // getImmediate will always succeed because _getService is only called for registered components.\n    return provider.getImmediate({\n      identifier: instanceIdentifier\n    }) as unknown as _FirebaseService;\n  }\n\n  /**\n   * Remove a service instance from the cache, so we will create a new instance for this service\n   * when people try to get it again.\n   *\n   * NOTE: currently only firestore uses this functionality to support firestore shutdown.\n   *\n   * @param name The service name\n   * @param instanceIdentifier instance identifier in case multiple instances are allowed\n   * @internal\n   */\n  _removeServiceInstance(\n    name: string,\n    instanceIdentifier: string = _DEFAULT_ENTRY_NAME\n  ): void {\n    this._delegate.container\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      .getProvider(name as any)\n      .clearInstance(instanceIdentifier);\n  }\n\n  /**\n   * @param component the component being added to this app's container\n   * @internal\n   */\n  _addComponent(component: Component): void {\n    _addComponent(this._delegate, component);\n  }\n\n  _addOrOverwriteComponent(component: Component): void {\n    _addOrOverwriteComponent(this._delegate, component);\n  }\n\n  toJSON(): object {\n    return {\n      name: this.name,\n      automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,\n      options: this.options\n    };\n  }\n}\n\n// TODO: investigate why the following needs to be commented out\n// Prevent dead-code elimination of these methods w/o invalid property\n// copying.\n// (FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\n//   FirebaseAppImpl.prototype.delete ||\n//   console.log('dc');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.'\n};\n\ntype ErrorParams = { [key in AppError]: { appName: string } };\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app-compat',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from './public-types';\nimport { createSubscribe, deepExtend, ErrorFactory } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { createFirebaseNamespaceCore } from './firebaseNamespaceCore';\n\n/**\n * Return a firebase namespace object.\n *\n * In production, this will be called exactly once and the result\n * assigned to the 'firebase' global.  It may be called multiple times\n * in unit tests.\n */\nexport function createFirebaseNamespace(): FirebaseNamespace {\n  const namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\n  namespace.INTERNAL = {\n    ...namespace.INTERNAL,\n    createFirebaseNamespace,\n    extendNamespace,\n    createSubscribe,\n    ErrorFactory,\n    deepExtend\n  };\n\n  /**\n   * Patch the top-level firebase namespace with additional properties.\n   *\n   * firebase.INTERNAL.extendNamespace()\n   */\n  function extendNamespace(props: { [prop: string]: unknown }): void {\n    deepExtend(namespace, props);\n  }\n\n  return namespace;\n}\n\nexport const firebase = createFirebaseNamespace();\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from './public-types';\nimport {\n  _FirebaseNamespace,\n  _FirebaseService,\n  FirebaseServiceNamespace\n} from './types';\nimport * as modularAPIs from '@firebase/app';\nimport { _FirebaseAppInternal as _FirebaseAppExp } from '@firebase/app';\nimport { Component, ComponentType, Name } from '@firebase/component';\n\nimport { deepExtend, contains } from '@firebase/util';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport { FirebaseAppLiteImpl } from './lite/firebaseAppLite';\n\n/**\n * Because auth can't share code with other components, we attach the utility functions\n * in an internal namespace to share code.\n * This function return a firebase namespace object without\n * any utility functions, so it can be shared between the regular firebaseNamespace and\n * the lite version.\n */\nexport function createFirebaseNamespaceCore(\n  firebaseAppImpl: typeof FirebaseAppImpl | typeof FirebaseAppLiteImpl\n): _FirebaseNamespace {\n  const apps: { [name: string]: FirebaseApp } = {};\n  // // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // const components = new Map<string, Component<any>>();\n\n  // A namespace is a plain JavaScript Object.\n  const namespace: _FirebaseNamespace = {\n    // Hack to prevent Babel from modifying the object returned\n    // as the firebase namespace.\n    // @ts-ignore\n    __esModule: true,\n    initializeApp: initializeAppCompat,\n    // @ts-ignore\n    app,\n    registerVersion: modularAPIs.registerVersion,\n    setLogLevel: modularAPIs.setLogLevel,\n    onLog: modularAPIs.onLog,\n    // @ts-ignore\n    apps: null,\n    SDK_VERSION: modularAPIs.SDK_VERSION,\n    INTERNAL: {\n      registerComponent: registerComponentCompat,\n      removeApp,\n      useAsService,\n      modularAPIs\n    }\n  };\n\n  // Inject a circular default export to allow Babel users who were previously\n  // using:\n  //\n  //   import firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase').default;\n  //\n  // instead of\n  //\n  //   import * as firebase from 'firebase';\n  //   which becomes: var firebase = require('firebase');\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (namespace as any)['default'] = namespace;\n\n  // firebase.apps is a read-only getter.\n  Object.defineProperty(namespace, 'apps', {\n    get: getApps\n  });\n\n  /**\n   * Called by App.delete() - but before any services associated with the App\n   * are deleted.\n   */\n  function removeApp(name: string): void {\n    delete apps[name];\n  }\n\n  /**\n   * Get the App object for a given name (or DEFAULT).\n   */\n  function app(name?: string): FirebaseApp {\n    name = name || modularAPIs._DEFAULT_ENTRY_NAME;\n    if (!contains(apps, name)) {\n      throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n    }\n    return apps[name];\n  }\n\n  // @ts-ignore\n  app['App'] = firebaseAppImpl;\n\n  /**\n   * Create a new App instance (name must be unique).\n   *\n   * This function is idempotent. It can be called more than once and return the same instance using the same options and config.\n   */\n  function initializeAppCompat(\n    options: FirebaseOptions,\n    rawConfig = {}\n  ): FirebaseApp {\n    const app = modularAPIs.initializeApp(\n      options,\n      rawConfig\n    ) as _FirebaseAppExp;\n\n    if (contains(apps, app.name)) {\n      return apps[app.name];\n    }\n\n    const appCompat = new firebaseAppImpl(app, namespace);\n    apps[app.name] = appCompat;\n    return appCompat;\n  }\n\n  /*\n   * Return an array of all the non-deleted FirebaseApps.\n   */\n  function getApps(): FirebaseApp[] {\n    // Make a copy so caller cannot mutate the apps list.\n    return Object.keys(apps).map(name => apps[name]);\n  }\n\n  function registerComponentCompat<T extends Name>(\n    component: Component<T>\n  ): FirebaseServiceNamespace<_FirebaseService> | null {\n    const componentName = component.name;\n    const componentNameWithoutCompat = componentName.replace('-compat', '');\n    if (\n      modularAPIs._registerComponent(component) &&\n      component.type === ComponentType.PUBLIC\n    ) {\n      // create service namespace for public components\n      // The Service namespace is an accessor function ...\n      const serviceNamespace = (\n        appArg: FirebaseApp = app()\n      ): _FirebaseService => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (typeof (appArg as any)[componentNameWithoutCompat] !== 'function') {\n          // Invalid argument.\n          // This happens in the following case: firebase.storage('gs:/')\n          throw ERROR_FACTORY.create(AppError.INVALID_APP_ARGUMENT, {\n            appName: componentName\n          });\n        }\n\n        // Forward service instance lookup to the FirebaseApp.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return (appArg as any)[componentNameWithoutCompat]();\n      };\n\n      // ... and a container for service-level properties.\n      if (component.serviceProps !== undefined) {\n        deepExtend(serviceNamespace, component.serviceProps);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (namespace as any)[componentNameWithoutCompat] = serviceNamespace;\n\n      // Patch the FirebaseAppImpl prototype\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (firebaseAppImpl.prototype as any)[componentNameWithoutCompat] =\n        // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\n        // option added to the no-explicit-any rule when ESlint releases it.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        function (...args: any) {\n          const serviceFxn = this._getService.bind(this, componentName);\n          return serviceFxn.apply(\n            this,\n            component.multipleInstances ? args : []\n          );\n        };\n    }\n\n    return component.type === ComponentType.PUBLIC\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (namespace as any)[componentNameWithoutCompat]\n      : null;\n  }\n\n  // Map the requested service to a registered service name\n  // (used to map auth to serverAuth service when needed).\n  function useAsService(app: FirebaseApp, name: string): string | null {\n    if (name === 'serverAuth') {\n      return null;\n    }\n\n    const useService = name;\n\n    return useService;\n  }\n\n  return namespace;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app-compat');\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseNamespace } from './public-types';\nimport { isBrowser } from '@firebase/util';\nimport { firebase as firebaseNamespace } from './firebaseNamespace';\nimport { logger } from './logger';\nimport { registerCoreComponents } from './registerCoreComponents';\n\n// Firebase Lite detection\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nif (isBrowser() && (self as any).firebase !== undefined) {\n  logger.warn(`\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  `);\n\n  // eslint-disable-next-line\n  const sdkVersion = ((self as any).firebase as FirebaseNamespace).SDK_VERSION;\n  if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\n    logger.warn(`\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    `);\n  }\n}\n\nconst firebase = firebaseNamespace;\n\nregisterCoreComponents();\n\n// eslint-disable-next-line import/no-default-export\nexport default firebase;\n\nexport { _FirebaseNamespace, _FirebaseService } from './types';\nexport { FirebaseApp, FirebaseNamespace } from './public-types';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerVersion } from '@firebase/app';\n\nimport { name, version } from '../package.json';\n\nexport function registerCoreComponents(variant?: string): void {\n  // Register `app` package.\n  registerVersion(name, version, variant);\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app-compat';\nimport { name, version } from '../../package.json';\n\nfirebase.registerVersion(name, version, 'app-compat');\n\nexport default firebase;\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An enum of factors that may be used for multifactor authentication.\n *\n * @public\n */\nexport const FactorId = {\n  /** Phone as second factor */\n  PHONE: 'phone'\n} as const;\n\n/**\n * Enumeration of supported providers.\n *\n * @public\n */\nexport const ProviderId = {\n  /** Facebook provider ID */\n  FACEBOOK: 'facebook.com',\n  /** GitHub provider ID */\n  GITHUB: 'github.com',\n  /** Google provider ID */\n  GOOGLE: 'google.com',\n  /** Password provider */\n  PASSWORD: 'password',\n  /** Phone provider */\n  PHONE: 'phone',\n  /** Twitter provider ID */\n  TWITTER: 'twitter.com'\n} as const;\n\n/**\n * Enumeration of supported sign-in methods.\n *\n * @public\n */\nexport const SignInMethod = {\n  /** Email link sign in method */\n  EMAIL_LINK: 'emailLink',\n  /** Email/password sign in method */\n  EMAIL_PASSWORD: 'password',\n  /** Facebook sign in method */\n  FACEBOOK: 'facebook.com',\n  /** GitHub sign in method */\n  GITHUB: 'github.com',\n  /** Google sign in method */\n  GOOGLE: 'google.com',\n  /** Phone sign in method */\n  PHONE: 'phone',\n  /** Twitter sign in method */\n  TWITTER: 'twitter.com'\n} as const;\n\n/**\n * Enumeration of supported operation types.\n *\n * @public\n */\nexport const OperationType = {\n  /** Operation involving linking an additional provider to an already signed-in user. */\n  LINK: 'link',\n  /** Operation involving using a provider to reauthenticate an already signed-in user. */\n  REAUTHENTICATE: 'reauthenticate',\n  /** Operation involving signing in a user. */\n  SIGN_IN: 'signIn'\n} as const;\n\n/**\n * An enumeration of the possible email action types.\n *\n * @public\n */\nexport const ActionCodeOperation = {\n  /** The email link sign-in action. */\n  EMAIL_SIGNIN: 'EMAIL_SIGNIN',\n  /** The password reset action. */\n  PASSWORD_RESET: 'PASSWORD_RESET',\n  /** The email revocation action. */\n  RECOVER_EMAIL: 'RECOVER_EMAIL',\n  /** The revert second factor addition email action. */\n  REVERT_SECOND_FACTOR_ADDITION: 'REVERT_SECOND_FACTOR_ADDITION',\n  /** The revert second factor addition email action. */\n  VERIFY_AND_CHANGE_EMAIL: 'VERIFY_AND_CHANGE_EMAIL',\n  /** The email verification action. */\n  VERIFY_EMAIL: 'VERIFY_EMAIL'\n} as const;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorMap, User } from '../model/public_types';\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nimport { IdTokenMfaResponse } from '../api/authentication/mfa';\nimport { AppName } from '../model/auth';\nimport { AuthCredential } from './credentials';\n\n/**\n * Enumeration of Firebase Auth error codes.\n *\n * @internal\n */\nexport const enum AuthErrorCode {\n  ADMIN_ONLY_OPERATION = 'admin-restricted-operation',\n  ARGUMENT_ERROR = 'argument-error',\n  APP_NOT_AUTHORIZED = 'app-not-authorized',\n  APP_NOT_INSTALLED = 'app-not-installed',\n  CAPTCHA_CHECK_FAILED = 'captcha-check-failed',\n  CODE_EXPIRED = 'code-expired',\n  CORDOVA_NOT_READY = 'cordova-not-ready',\n  CORS_UNSUPPORTED = 'cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE = 'credential-already-in-use',\n  CREDENTIAL_MISMATCH = 'custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN = 'requires-recent-login',\n  DEPENDENT_SDK_INIT_BEFORE_AUTH = 'dependent-sdk-initialized-before-auth',\n  DYNAMIC_LINK_NOT_ACTIVATED = 'dynamic-link-not-activated',\n  EMAIL_CHANGE_NEEDS_VERIFICATION = 'email-change-needs-verification',\n  EMAIL_EXISTS = 'email-already-in-use',\n  EMULATOR_CONFIG_FAILED = 'emulator-config-failed',\n  EXPIRED_OOB_CODE = 'expired-action-code',\n  EXPIRED_POPUP_REQUEST = 'cancelled-popup-request',\n  INTERNAL_ERROR = 'internal-error',\n  INVALID_API_KEY = 'invalid-api-key',\n  INVALID_APP_CREDENTIAL = 'invalid-app-credential',\n  INVALID_APP_ID = 'invalid-app-id',\n  INVALID_AUTH = 'invalid-user-token',\n  INVALID_AUTH_EVENT = 'invalid-auth-event',\n  INVALID_CERT_HASH = 'invalid-cert-hash',\n  INVALID_CODE = 'invalid-verification-code',\n  INVALID_CONTINUE_URI = 'invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION = 'invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN = 'invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN = 'invalid-dynamic-link-domain',\n  INVALID_EMAIL = 'invalid-email',\n  INVALID_EMULATOR_SCHEME = 'invalid-emulator-scheme',\n  INVALID_IDP_RESPONSE = 'invalid-credential',\n  INVALID_MESSAGE_PAYLOAD = 'invalid-message-payload',\n  INVALID_MFA_SESSION = 'invalid-multi-factor-session',\n  INVALID_OAUTH_CLIENT_ID = 'invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER = 'invalid-oauth-provider',\n  INVALID_OOB_CODE = 'invalid-action-code',\n  INVALID_ORIGIN = 'unauthorized-domain',\n  INVALID_PASSWORD = 'wrong-password',\n  INVALID_PERSISTENCE = 'invalid-persistence-type',\n  INVALID_PHONE_NUMBER = 'invalid-phone-number',\n  INVALID_PROVIDER_ID = 'invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL = 'invalid-recipient-email',\n  INVALID_SENDER = 'invalid-sender',\n  INVALID_SESSION_INFO = 'invalid-verification-id',\n  INVALID_TENANT_ID = 'invalid-tenant-id',\n  LOGIN_BLOCKED = 'login-blocked',\n  MFA_INFO_NOT_FOUND = 'multi-factor-info-not-found',\n  MFA_REQUIRED = 'multi-factor-auth-required',\n  MISSING_ANDROID_PACKAGE_NAME = 'missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL = 'missing-app-credential',\n  MISSING_AUTH_DOMAIN = 'auth-domain-config-required',\n  MISSING_CODE = 'missing-verification-code',\n  MISSING_CONTINUE_URI = 'missing-continue-uri',\n  MISSING_IFRAME_START = 'missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID = 'missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE = 'missing-or-invalid-nonce',\n  MISSING_MFA_INFO = 'missing-multi-factor-info',\n  MISSING_MFA_SESSION = 'missing-multi-factor-session',\n  MISSING_PHONE_NUMBER = 'missing-phone-number',\n  MISSING_SESSION_INFO = 'missing-verification-id',\n  MODULE_DESTROYED = 'app-deleted',\n  NEED_CONFIRMATION = 'account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED = 'network-request-failed',\n  NULL_USER = 'null-user',\n  NO_AUTH_EVENT = 'no-auth-event',\n  NO_SUCH_PROVIDER = 'no-such-provider',\n  OPERATION_NOT_ALLOWED = 'operation-not-allowed',\n  OPERATION_NOT_SUPPORTED = 'operation-not-supported-in-this-environment',\n  POPUP_BLOCKED = 'popup-blocked',\n  POPUP_CLOSED_BY_USER = 'popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED = 'provider-already-linked',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER = 'redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING = 'redirect-operation-pending',\n  REJECTED_CREDENTIAL = 'rejected-credential',\n  SECOND_FACTOR_ALREADY_ENROLLED = 'second-factor-already-in-use',\n  SECOND_FACTOR_LIMIT_EXCEEDED = 'maximum-second-factor-count-exceeded',\n  TENANT_ID_MISMATCH = 'tenant-id-mismatch',\n  TIMEOUT = 'timeout',\n  TOKEN_EXPIRED = 'user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'too-many-requests',\n  UNAUTHORIZED_DOMAIN = 'unauthorized-continue-uri',\n  UNSUPPORTED_FIRST_FACTOR = 'unsupported-first-factor',\n  UNSUPPORTED_PERSISTENCE = 'unsupported-persistence-type',\n  UNSUPPORTED_TENANT_OPERATION = 'unsupported-tenant-operation',\n  UNVERIFIED_EMAIL = 'unverified-email',\n  USER_CANCELLED = 'user-cancelled',\n  USER_DELETED = 'user-not-found',\n  USER_DISABLED = 'user-disabled',\n  USER_MISMATCH = 'user-mismatch',\n  USER_SIGNED_OUT = 'user-signed-out',\n  WEAK_PASSWORD = 'weak-password',\n  WEB_STORAGE_UNSUPPORTED = 'web-storage-unsupported',\n  ALREADY_INITIALIZED = 'already-initialized'\n}\n\nfunction _debugErrorMap(): ErrorMap<AuthErrorCode> {\n  return {\n    [AuthErrorCode.ADMIN_ONLY_OPERATION]:\n      'This operation is restricted to administrators only.',\n    [AuthErrorCode.ARGUMENT_ERROR]: '',\n    [AuthErrorCode.APP_NOT_AUTHORIZED]:\n      \"This app, identified by the domain where it's hosted, is not \" +\n      'authorized to use Firebase Authentication with the provided API key. ' +\n      'Review your key configuration in the Google API console.',\n    [AuthErrorCode.APP_NOT_INSTALLED]:\n      'The requested mobile application corresponding to the identifier (' +\n      'Android package name or iOS bundle ID) provided is not installed on ' +\n      'this device.',\n    [AuthErrorCode.CAPTCHA_CHECK_FAILED]:\n      'The reCAPTCHA response token provided is either invalid, expired, ' +\n      'already used or the domain associated with it does not match the list ' +\n      'of whitelisted domains.',\n    [AuthErrorCode.CODE_EXPIRED]:\n      'The SMS code has expired. Please re-send the verification code to try ' +\n      'again.',\n    [AuthErrorCode.CORDOVA_NOT_READY]: 'Cordova framework is not ready.',\n    [AuthErrorCode.CORS_UNSUPPORTED]: 'This browser is not supported.',\n    [AuthErrorCode.CREDENTIAL_ALREADY_IN_USE]:\n      'This credential is already associated with a different user account.',\n    [AuthErrorCode.CREDENTIAL_MISMATCH]:\n      'The custom token corresponds to a different audience.',\n    [AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN]:\n      'This operation is sensitive and requires recent authentication. Log in ' +\n      'again before retrying this request.',\n    [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]:\n      'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\n      'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\n      'starting any other Firebase SDK.',\n    [AuthErrorCode.DYNAMIC_LINK_NOT_ACTIVATED]:\n      'Please activate Dynamic Links in the Firebase Console and agree to the terms and ' +\n      'conditions.',\n    [AuthErrorCode.EMAIL_CHANGE_NEEDS_VERIFICATION]:\n      'Multi-factor users must always have a verified email.',\n    [AuthErrorCode.EMAIL_EXISTS]:\n      'The email address is already in use by another account.',\n    [AuthErrorCode.EMULATOR_CONFIG_FAILED]:\n      'Auth instance has already been used to make a network call. Auth can ' +\n      'no longer be configured to use the emulator. Try calling ' +\n      '\"connectAuthEmulator()\" sooner.',\n    [AuthErrorCode.EXPIRED_OOB_CODE]: 'The action code has expired.',\n    [AuthErrorCode.EXPIRED_POPUP_REQUEST]:\n      'This operation has been cancelled due to another conflicting popup being opened.',\n    [AuthErrorCode.INTERNAL_ERROR]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.INVALID_APP_CREDENTIAL]:\n      'The phone verification request contains an invalid application verifier.' +\n      ' The reCAPTCHA token response is either invalid or expired.',\n    [AuthErrorCode.INVALID_APP_ID]:\n      'The mobile app identifier is not registed for the current project.',\n    [AuthErrorCode.INVALID_AUTH]:\n      \"This user's credential isn't valid for this project. This can happen \" +\n      \"if the user's token has been tampered with, or if the user isn't for \" +\n      'the project associated with this API key.',\n    [AuthErrorCode.INVALID_AUTH_EVENT]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.INVALID_CODE]:\n      'The SMS verification code used to create the phone auth credential is ' +\n      'invalid. Please resend the verification code sms and be sure to use the ' +\n      'verification code provided by the user.',\n    [AuthErrorCode.INVALID_CONTINUE_URI]:\n      'The continue URL provided in the request is invalid.',\n    [AuthErrorCode.INVALID_CORDOVA_CONFIGURATION]:\n      'The following Cordova plugins must be installed to enable OAuth sign-in: ' +\n      'cordova-plugin-buildinfo, cordova-universal-links-plugin, ' +\n      'cordova-plugin-browsertab, cordova-plugin-inappbrowser and ' +\n      'cordova-plugin-customurlscheme.',\n    [AuthErrorCode.INVALID_CUSTOM_TOKEN]:\n      'The custom token format is incorrect. Please check the documentation.',\n    [AuthErrorCode.INVALID_DYNAMIC_LINK_DOMAIN]:\n      'The provided dynamic link domain is not configured or authorized for the current project.',\n    [AuthErrorCode.INVALID_EMAIL]: 'The email address is badly formatted.',\n    [AuthErrorCode.INVALID_EMULATOR_SCHEME]:\n      'Emulator URL must start with a valid scheme (http:// or https://).',\n    [AuthErrorCode.INVALID_API_KEY]:\n      'Your API key is invalid, please check you have copied it correctly.',\n    [AuthErrorCode.INVALID_CERT_HASH]:\n      'The SHA-1 certificate hash provided is invalid.',\n    [AuthErrorCode.INVALID_IDP_RESPONSE]:\n      'The supplied auth credential is malformed or has expired.',\n    [AuthErrorCode.INVALID_MESSAGE_PAYLOAD]:\n      'The email template corresponding to this action contains invalid characters in its message. ' +\n      'Please fix by going to the Auth email templates section in the Firebase Console.',\n    [AuthErrorCode.INVALID_MFA_SESSION]:\n      'The request does not contain a valid proof of first factor successful sign-in.',\n    [AuthErrorCode.INVALID_OAUTH_PROVIDER]:\n      'EmailAuthProvider is not supported for this operation. This operation ' +\n      'only supports OAuth providers.',\n    [AuthErrorCode.INVALID_OAUTH_CLIENT_ID]:\n      'The OAuth client ID provided is either invalid or does not match the ' +\n      'specified API key.',\n    [AuthErrorCode.INVALID_ORIGIN]:\n      'This domain is not authorized for OAuth operations for your Firebase ' +\n      'project. Edit the list of authorized domains from the Firebase console.',\n    [AuthErrorCode.INVALID_OOB_CODE]:\n      'The action code is invalid. This can happen if the code is malformed, ' +\n      'expired, or has already been used.',\n    [AuthErrorCode.INVALID_PASSWORD]:\n      'The password is invalid or the user does not have a password.',\n    [AuthErrorCode.INVALID_PERSISTENCE]:\n      'The specified persistence type is invalid. It can only be local, session or none.',\n    [AuthErrorCode.INVALID_PHONE_NUMBER]:\n      'The format of the phone number provided is incorrect. Please enter the ' +\n      'phone number in a format that can be parsed into E.164 format. E.164 ' +\n      'phone numbers are written in the format [+][country code][subscriber ' +\n      'number including area code].',\n    [AuthErrorCode.INVALID_PROVIDER_ID]:\n      'The specified provider ID is invalid.',\n    [AuthErrorCode.INVALID_RECIPIENT_EMAIL]:\n      'The email corresponding to this action failed to send as the provided ' +\n      'recipient email address is invalid.',\n    [AuthErrorCode.INVALID_SENDER]:\n      'The email template corresponding to this action contains an invalid sender email or name. ' +\n      'Please fix by going to the Auth email templates section in the Firebase Console.',\n    [AuthErrorCode.INVALID_SESSION_INFO]:\n      'The verification ID used to create the phone auth credential is invalid.',\n    [AuthErrorCode.INVALID_TENANT_ID]:\n      \"The Auth instance's tenant ID is invalid.\",\n    [AuthErrorCode.LOGIN_BLOCKED]:\n      'Login blocked by user-provided method: {$originalMessage}',\n    [AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME]:\n      'An Android Package Name must be provided if the Android App is required to be installed.',\n    [AuthErrorCode.MISSING_AUTH_DOMAIN]:\n      'Be sure to include authDomain when calling firebase.initializeApp(), ' +\n      'by following the instructions in the Firebase console.',\n    [AuthErrorCode.MISSING_APP_CREDENTIAL]:\n      'The phone verification request is missing an application verifier ' +\n      'assertion. A reCAPTCHA response token needs to be provided.',\n    [AuthErrorCode.MISSING_CODE]:\n      'The phone auth credential was created with an empty SMS verification code.',\n    [AuthErrorCode.MISSING_CONTINUE_URI]:\n      'A continue URL must be provided in the request.',\n    [AuthErrorCode.MISSING_IFRAME_START]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.MISSING_IOS_BUNDLE_ID]:\n      'An iOS Bundle ID must be provided if an App Store ID is provided.',\n    [AuthErrorCode.MISSING_OR_INVALID_NONCE]:\n      'The request does not contain a valid nonce. This can occur if the ' +\n      'SHA-256 hash of the provided raw nonce does not match the hashed nonce ' +\n      'in the ID token payload.',\n    [AuthErrorCode.MISSING_MFA_INFO]:\n      'No second factor identifier is provided.',\n    [AuthErrorCode.MISSING_MFA_SESSION]:\n      'The request is missing proof of first factor successful sign-in.',\n    [AuthErrorCode.MISSING_PHONE_NUMBER]:\n      'To send verification codes, provide a phone number for the recipient.',\n    [AuthErrorCode.MISSING_SESSION_INFO]:\n      'The phone auth credential was created with an empty verification ID.',\n    [AuthErrorCode.MODULE_DESTROYED]:\n      'This instance of FirebaseApp has been deleted.',\n    [AuthErrorCode.MFA_INFO_NOT_FOUND]:\n      'The user does not have a second factor matching the identifier provided.',\n    [AuthErrorCode.MFA_REQUIRED]:\n      'Proof of ownership of a second factor is required to complete sign-in.',\n    [AuthErrorCode.NEED_CONFIRMATION]:\n      'An account already exists with the same email address but different ' +\n      'sign-in credentials. Sign in using a provider associated with this ' +\n      'email address.',\n    [AuthErrorCode.NETWORK_REQUEST_FAILED]:\n      'A network AuthError (such as timeout, interrupted connection or unreachable host) has occurred.',\n    [AuthErrorCode.NO_AUTH_EVENT]: 'An internal AuthError has occurred.',\n    [AuthErrorCode.NO_SUCH_PROVIDER]:\n      'User was not linked to an account with the given provider.',\n    [AuthErrorCode.NULL_USER]:\n      'A null user object was provided as the argument for an operation which ' +\n      'requires a non-null user object.',\n    [AuthErrorCode.OPERATION_NOT_ALLOWED]:\n      'The given sign-in provider is disabled for this Firebase project. ' +\n      'Enable it in the Firebase console, under the sign-in method tab of the ' +\n      'Auth section.',\n    [AuthErrorCode.OPERATION_NOT_SUPPORTED]:\n      'This operation is not supported in the environment this application is ' +\n      'running on. \"location.protocol\" must be http, https or chrome-extension' +\n      ' and web storage must be enabled.',\n    [AuthErrorCode.POPUP_BLOCKED]:\n      'Unable to establish a connection with the popup. It may have been blocked by the browser.',\n    [AuthErrorCode.POPUP_CLOSED_BY_USER]:\n      'The popup has been closed by the user before finalizing the operation.',\n    [AuthErrorCode.PROVIDER_ALREADY_LINKED]:\n      'User can only be linked to one identity for the given provider.',\n    [AuthErrorCode.QUOTA_EXCEEDED]:\n      \"The project's quota for this operation has been exceeded.\",\n    [AuthErrorCode.REDIRECT_CANCELLED_BY_USER]:\n      'The redirect operation has been cancelled by the user before finalizing.',\n    [AuthErrorCode.REDIRECT_OPERATION_PENDING]:\n      'A redirect sign-in operation is already pending.',\n    [AuthErrorCode.REJECTED_CREDENTIAL]:\n      'The request contains malformed or mismatching credentials.',\n    [AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED]:\n      'The second factor is already enrolled on this account.',\n    [AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED]:\n      'The maximum allowed number of second factors on a user has been exceeded.',\n    [AuthErrorCode.TENANT_ID_MISMATCH]:\n      \"The provided tenant ID does not match the Auth instance's tenant ID\",\n    [AuthErrorCode.TIMEOUT]: 'The operation has timed out.',\n    [AuthErrorCode.TOKEN_EXPIRED]:\n      \"The user's credential is no longer valid. The user must sign in again.\",\n    [AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER]:\n      'We have blocked all requests from this device due to unusual activity. ' +\n      'Try again later.',\n    [AuthErrorCode.UNAUTHORIZED_DOMAIN]:\n      'The domain of the continue URL is not whitelisted.  Please whitelist ' +\n      'the domain in the Firebase console.',\n    [AuthErrorCode.UNSUPPORTED_FIRST_FACTOR]:\n      'Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.',\n    [AuthErrorCode.UNSUPPORTED_PERSISTENCE]:\n      'The current environment does not support the specified persistence type.',\n    [AuthErrorCode.UNSUPPORTED_TENANT_OPERATION]:\n      'This operation is not supported in a multi-tenant context.',\n    [AuthErrorCode.UNVERIFIED_EMAIL]:\n      'The operation requires a verified email.',\n    [AuthErrorCode.USER_CANCELLED]:\n      'The user did not grant your application the permissions it requested.',\n    [AuthErrorCode.USER_DELETED]:\n      'There is no user record corresponding to this identifier. The user may ' +\n      'have been deleted.',\n    [AuthErrorCode.USER_DISABLED]:\n      'The user account has been disabled by an administrator.',\n    [AuthErrorCode.USER_MISMATCH]:\n      'The supplied credentials do not correspond to the previously signed in user.',\n    [AuthErrorCode.USER_SIGNED_OUT]: '',\n    [AuthErrorCode.WEAK_PASSWORD]:\n      'The password must be 6 characters long or more.',\n    [AuthErrorCode.WEB_STORAGE_UNSUPPORTED]:\n      'This browser is not supported or 3rd party cookies and data may be disabled.',\n    [AuthErrorCode.ALREADY_INITIALIZED]:\n      'initializeAuth() has already been called with ' +\n      'different options. To avoid this error, call initializeAuth() with the ' +\n      'same options as when it was originally called, or call getAuth() to return the' +\n      ' already initialized instance.'\n  };\n}\n\nexport interface ErrorMapRetriever extends AuthErrorMap {\n  (): ErrorMap<AuthErrorCode>;\n}\n\nfunction _prodErrorMap(): ErrorMap<AuthErrorCode> {\n  // We will include this one message in the prod error map since by the very\n  // nature of this error, developers will never be able to see the message\n  // using the debugErrorMap (which is installed during auth initialization).\n  return {\n    [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]:\n      'Another Firebase SDK was initialized and is trying to use Auth before Auth is ' +\n      'initialized. Please be sure to call `initializeAuth` or `getAuth` before ' +\n      'starting any other Firebase SDK.'\n  } as ErrorMap<AuthErrorCode>;\n}\n\n/**\n * A verbose error map with detailed descriptions for most error codes.\n *\n * See discussion at {@link AuthErrorMap}\n *\n * @public\n */\nexport const debugErrorMap: AuthErrorMap = _debugErrorMap;\n\n/**\n * A minimal error map with all verbose error messages stripped.\n *\n * See discussion at {@link AuthErrorMap}\n *\n * @public\n */\nexport const prodErrorMap: AuthErrorMap = _prodErrorMap;\n\nexport interface NamedErrorParams {\n  appName: AppName;\n  credential?: AuthCredential;\n  email?: string;\n  phoneNumber?: string;\n  tenantId?: string;\n  user?: User;\n  _serverResponse?: object;\n}\n\n/**\n * @internal\n */\ntype GenericAuthErrorParams = {\n  [key in Exclude<\n    AuthErrorCode,\n    | AuthErrorCode.ARGUMENT_ERROR\n    | AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH\n    | AuthErrorCode.INTERNAL_ERROR\n    | AuthErrorCode.MFA_REQUIRED\n    | AuthErrorCode.NO_AUTH_EVENT\n    | AuthErrorCode.OPERATION_NOT_SUPPORTED\n  >]: {\n    appName?: AppName;\n    email?: string;\n    phoneNumber?: string;\n    message?: string;\n  };\n};\n\n/**\n * @internal\n */\nexport interface AuthErrorParams extends GenericAuthErrorParams {\n  [AuthErrorCode.ARGUMENT_ERROR]: { appName?: AppName };\n  [AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH]: { appName?: AppName };\n  [AuthErrorCode.INTERNAL_ERROR]: { appName?: AppName };\n  [AuthErrorCode.LOGIN_BLOCKED]: {\n    appName?: AppName;\n    originalMessage?: string;\n  };\n  [AuthErrorCode.OPERATION_NOT_SUPPORTED]: { appName?: AppName };\n  [AuthErrorCode.NO_AUTH_EVENT]: { appName?: AppName };\n  [AuthErrorCode.MFA_REQUIRED]: {\n    appName: AppName;\n    _serverResponse: IdTokenMfaResponse;\n  };\n  [AuthErrorCode.INVALID_CORDOVA_CONFIGURATION]: {\n    appName: AppName;\n    missingPlugin?: string;\n  };\n}\n\nexport const _DEFAULT_AUTH_ERROR_FACTORY = new ErrorFactory<\n  AuthErrorCode,\n  AuthErrorParams\n>('auth', 'Firebase', _prodErrorMap());\n\n/**\n * A map of potential `Auth` error codes, for easier comparison with errors\n * thrown by the SDK.\n *\n * @remarks\n * Note that you can't tree-shake individual keys\n * in the map, so by using the map you might substantially increase your\n * bundle size.\n *\n * @public\n */\nexport const AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY = {\n  ADMIN_ONLY_OPERATION: 'auth/admin-restricted-operation',\n  ARGUMENT_ERROR: 'auth/argument-error',\n  APP_NOT_AUTHORIZED: 'auth/app-not-authorized',\n  APP_NOT_INSTALLED: 'auth/app-not-installed',\n  CAPTCHA_CHECK_FAILED: 'auth/captcha-check-failed',\n  CODE_EXPIRED: 'auth/code-expired',\n  CORDOVA_NOT_READY: 'auth/cordova-not-ready',\n  CORS_UNSUPPORTED: 'auth/cors-unsupported',\n  CREDENTIAL_ALREADY_IN_USE: 'auth/credential-already-in-use',\n  CREDENTIAL_MISMATCH: 'auth/custom-token-mismatch',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN: 'auth/requires-recent-login',\n  DEPENDENT_SDK_INIT_BEFORE_AUTH: 'auth/dependent-sdk-initialized-before-auth',\n  DYNAMIC_LINK_NOT_ACTIVATED: 'auth/dynamic-link-not-activated',\n  EMAIL_CHANGE_NEEDS_VERIFICATION: 'auth/email-change-needs-verification',\n  EMAIL_EXISTS: 'auth/email-already-in-use',\n  EMULATOR_CONFIG_FAILED: 'auth/emulator-config-failed',\n  EXPIRED_OOB_CODE: 'auth/expired-action-code',\n  EXPIRED_POPUP_REQUEST: 'auth/cancelled-popup-request',\n  INTERNAL_ERROR: 'auth/internal-error',\n  INVALID_API_KEY: 'auth/invalid-api-key',\n  INVALID_APP_CREDENTIAL: 'auth/invalid-app-credential',\n  INVALID_APP_ID: 'auth/invalid-app-id',\n  INVALID_AUTH: 'auth/invalid-user-token',\n  INVALID_AUTH_EVENT: 'auth/invalid-auth-event',\n  INVALID_CERT_HASH: 'auth/invalid-cert-hash',\n  INVALID_CODE: 'auth/invalid-verification-code',\n  INVALID_CONTINUE_URI: 'auth/invalid-continue-uri',\n  INVALID_CORDOVA_CONFIGURATION: 'auth/invalid-cordova-configuration',\n  INVALID_CUSTOM_TOKEN: 'auth/invalid-custom-token',\n  INVALID_DYNAMIC_LINK_DOMAIN: 'auth/invalid-dynamic-link-domain',\n  INVALID_EMAIL: 'auth/invalid-email',\n  INVALID_EMULATOR_SCHEME: 'auth/invalid-emulator-scheme',\n  INVALID_IDP_RESPONSE: 'auth/invalid-credential',\n  INVALID_MESSAGE_PAYLOAD: 'auth/invalid-message-payload',\n  INVALID_MFA_SESSION: 'auth/invalid-multi-factor-session',\n  INVALID_OAUTH_CLIENT_ID: 'auth/invalid-oauth-client-id',\n  INVALID_OAUTH_PROVIDER: 'auth/invalid-oauth-provider',\n  INVALID_OOB_CODE: 'auth/invalid-action-code',\n  INVALID_ORIGIN: 'auth/unauthorized-domain',\n  INVALID_PASSWORD: 'auth/wrong-password',\n  INVALID_PERSISTENCE: 'auth/invalid-persistence-type',\n  INVALID_PHONE_NUMBER: 'auth/invalid-phone-number',\n  INVALID_PROVIDER_ID: 'auth/invalid-provider-id',\n  INVALID_RECIPIENT_EMAIL: 'auth/invalid-recipient-email',\n  INVALID_SENDER: 'auth/invalid-sender',\n  INVALID_SESSION_INFO: 'auth/invalid-verification-id',\n  INVALID_TENANT_ID: 'auth/invalid-tenant-id',\n  MFA_INFO_NOT_FOUND: 'auth/multi-factor-info-not-found',\n  MFA_REQUIRED: 'auth/multi-factor-auth-required',\n  MISSING_ANDROID_PACKAGE_NAME: 'auth/missing-android-pkg-name',\n  MISSING_APP_CREDENTIAL: 'auth/missing-app-credential',\n  MISSING_AUTH_DOMAIN: 'auth/auth-domain-config-required',\n  MISSING_CODE: 'auth/missing-verification-code',\n  MISSING_CONTINUE_URI: 'auth/missing-continue-uri',\n  MISSING_IFRAME_START: 'auth/missing-iframe-start',\n  MISSING_IOS_BUNDLE_ID: 'auth/missing-ios-bundle-id',\n  MISSING_OR_INVALID_NONCE: 'auth/missing-or-invalid-nonce',\n  MISSING_MFA_INFO: 'auth/missing-multi-factor-info',\n  MISSING_MFA_SESSION: 'auth/missing-multi-factor-session',\n  MISSING_PHONE_NUMBER: 'auth/missing-phone-number',\n  MISSING_SESSION_INFO: 'auth/missing-verification-id',\n  MODULE_DESTROYED: 'auth/app-deleted',\n  NEED_CONFIRMATION: 'auth/account-exists-with-different-credential',\n  NETWORK_REQUEST_FAILED: 'auth/network-request-failed',\n  NULL_USER: 'auth/null-user',\n  NO_AUTH_EVENT: 'auth/no-auth-event',\n  NO_SUCH_PROVIDER: 'auth/no-such-provider',\n  OPERATION_NOT_ALLOWED: 'auth/operation-not-allowed',\n  OPERATION_NOT_SUPPORTED: 'auth/operation-not-supported-in-this-environment',\n  POPUP_BLOCKED: 'auth/popup-blocked',\n  POPUP_CLOSED_BY_USER: 'auth/popup-closed-by-user',\n  PROVIDER_ALREADY_LINKED: 'auth/provider-already-linked',\n  QUOTA_EXCEEDED: 'auth/quota-exceeded',\n  REDIRECT_CANCELLED_BY_USER: 'auth/redirect-cancelled-by-user',\n  REDIRECT_OPERATION_PENDING: 'auth/redirect-operation-pending',\n  REJECTED_CREDENTIAL: 'auth/rejected-credential',\n  SECOND_FACTOR_ALREADY_ENROLLED: 'auth/second-factor-already-in-use',\n  SECOND_FACTOR_LIMIT_EXCEEDED: 'auth/maximum-second-factor-count-exceeded',\n  TENANT_ID_MISMATCH: 'auth/tenant-id-mismatch',\n  TIMEOUT: 'auth/timeout',\n  TOKEN_EXPIRED: 'auth/user-token-expired',\n  TOO_MANY_ATTEMPTS_TRY_LATER: 'auth/too-many-requests',\n  UNAUTHORIZED_DOMAIN: 'auth/unauthorized-continue-uri',\n  UNSUPPORTED_FIRST_FACTOR: 'auth/unsupported-first-factor',\n  UNSUPPORTED_PERSISTENCE: 'auth/unsupported-persistence-type',\n  UNSUPPORTED_TENANT_OPERATION: 'auth/unsupported-tenant-operation',\n  UNVERIFIED_EMAIL: 'auth/unverified-email',\n  USER_CANCELLED: 'auth/user-cancelled',\n  USER_DELETED: 'auth/user-not-found',\n  USER_DISABLED: 'auth/user-disabled',\n  USER_MISMATCH: 'auth/user-mismatch',\n  USER_SIGNED_OUT: 'auth/user-signed-out',\n  WEAK_PASSWORD: 'auth/weak-password',\n  WEB_STORAGE_UNSUPPORTED: 'auth/web-storage-unsupported',\n  ALREADY_INITIALIZED: 'auth/already-initialized'\n} as const;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { SDK_VERSION } from '@firebase/app';\n\nexport { LogLevel };\n\nconst logClient = new Logger('@firebase/auth');\n\n// Helper methods are needed because variables can't be exported as read/write\nexport function _getLogLevel(): LogLevel {\n  return logClient.logLevel;\n}\n\nexport function _setLogLevel(newLevel: LogLevel): void {\n  logClient.logLevel = newLevel;\n}\n\nexport function _logDebug(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.DEBUG) {\n    logClient.debug(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\nexport function _logError(msg: string, ...args: string[]): void {\n  if (logClient.logLevel <= LogLevel.ERROR) {\n    logClient.error(`Auth (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth } from '../../model/public_types';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  _DEFAULT_AUTH_ERROR_FACTORY,\n  AuthErrorCode,\n  AuthErrorParams,\n  prodErrorMap,\n  ErrorMapRetriever\n} from '../errors';\nimport { _logError } from './log';\n\ntype AuthErrorListParams<K> = K extends keyof AuthErrorParams\n  ? [AuthErrorParams[K]]\n  : [];\ntype LessAppName<K extends AuthErrorCode> = Omit<AuthErrorParams[K], 'appName'>;\n\n/**\n * Unconditionally fails, throwing a developer facing INTERNAL_ERROR\n *\n * @example\n * ```javascript\n * fail(auth, AuthErrorCode.MFA_REQUIRED);  // Error: the MFA_REQUIRED error needs more params than appName\n * fail(auth, AuthErrorCode.MFA_REQUIRED, {serverResponse});  // Compiles\n * fail(AuthErrorCode.INTERNAL_ERROR);  // Compiles; internal error does not need appName\n * fail(AuthErrorCode.USER_DELETED);  // Error: USER_DELETED requires app name\n * fail(auth, AuthErrorCode.USER_DELETED);  // Compiles; USER_DELETED _only_ needs app name\n * ```\n *\n * @param appName App name for tagging the error\n * @throws FirebaseError\n */\nexport function _fail<K extends AuthErrorCode>(\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): never;\nexport function _fail<K extends AuthErrorCode>(\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): never;\nexport function _fail<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): never {\n  throw createErrorInternal(authOrCode, ...rest);\n}\n\nexport function _createError<K extends AuthErrorCode>(\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): FirebaseError;\nexport function _createError<K extends AuthErrorCode>(\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): FirebaseError;\nexport function _createError<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): FirebaseError {\n  return createErrorInternal(authOrCode, ...rest);\n}\n\nexport function _errorWithCustomMessage(\n  auth: Auth,\n  code: AuthErrorCode,\n  message: string\n): FirebaseError {\n  const errorMap = {\n    ...(prodErrorMap as ErrorMapRetriever)(),\n    [code]: message\n  };\n  const factory = new ErrorFactory<AuthErrorCode, AuthErrorParams>(\n    'auth',\n    'Firebase',\n    errorMap\n  );\n  return factory.create(code, {\n    appName: auth.name\n  });\n}\n\nexport function _assertInstanceOf(\n  auth: Auth,\n  object: object,\n  instance: unknown\n): void {\n  const constructorInstance = instance as { new (...args: unknown[]): unknown };\n  if (!(object instanceof constructorInstance)) {\n    if (constructorInstance.name !== object.constructor.name) {\n      _fail(auth, AuthErrorCode.ARGUMENT_ERROR);\n    }\n\n    throw _errorWithCustomMessage(\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR,\n      `Type of ${object.constructor.name} does not match expected instance.` +\n        `Did you pass a reference from a different Auth SDK?`\n    );\n  }\n}\n\nfunction createErrorInternal<K extends AuthErrorCode>(\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): FirebaseError {\n  if (typeof authOrCode !== 'string') {\n    const code = rest[0] as K;\n    const fullParams = [...rest.slice(1)] as AuthErrorListParams<K>;\n    if (fullParams[0]) {\n      fullParams[0].appName = authOrCode.name;\n    }\n\n    return (authOrCode as AuthInternal)._errorFactory.create(\n      code,\n      ...fullParams\n    );\n  }\n\n  return _DEFAULT_AUTH_ERROR_FACTORY.create(\n    authOrCode,\n    ...(rest as AuthErrorListParams<K>)\n  );\n}\n\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  code: K,\n  ...data: {} extends AuthErrorParams[K]\n    ? [AuthErrorParams[K]?]\n    : [AuthErrorParams[K]]\n): asserts assertion;\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  auth: Auth,\n  code: K,\n  ...data: {} extends LessAppName<K> ? [LessAppName<K>?] : [LessAppName<K>]\n): asserts assertion;\nexport function _assert<K extends AuthErrorCode>(\n  assertion: unknown,\n  authOrCode: Auth | K,\n  ...rest: unknown[]\n): asserts assertion {\n  if (!assertion) {\n    throw createErrorInternal(authOrCode, ...rest);\n  }\n}\n\n// We really do want to accept literally any function type here\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype TypeExpectation = Function | string | MapType;\n\ninterface MapType extends Record<string, TypeExpectation | Optional> {}\n\nclass Optional {\n  constructor(readonly type: TypeExpectation) {}\n}\n\nexport function opt(type: TypeExpectation): Optional {\n  return new Optional(type);\n}\n\n/**\n * Asserts the runtime types of arguments. The 'expected' field can be one of\n * a class, a string (representing a \"typeof\" call), or a record map of name\n * to type. Furthermore, the opt() function can be used to mark a field as\n * optional. For example:\n *\n * function foo(auth: Auth, profile: {displayName?: string}, update = false) {\n *   assertTypes(arguments, [AuthImpl, {displayName: opt('string')}, opt('boolean')]);\n * }\n *\n * opt() can be used for any type:\n * function foo(auth?: Auth) {\n *   assertTypes(arguments, [opt(AuthImpl)]);\n * }\n *\n * The string types can be or'd together, and you can use \"null\" as well (note\n * that typeof null === 'object'; this is an edge case). For example:\n *\n * function foo(profile: {displayName?: string | null}) {\n *   assertTypes(arguments, [{displayName: opt('string|null')}]);\n * }\n *\n * @param args\n * @param expected\n */\nexport function assertTypes(\n  args: Omit<IArguments, 'callee'>,\n  ...expected: Array<TypeExpectation | Optional>\n): void {\n  if (args.length > expected.length) {\n    _fail(AuthErrorCode.ARGUMENT_ERROR, {});\n  }\n\n  for (let i = 0; i < expected.length; i++) {\n    let expect = expected[i];\n    const arg = args[i];\n\n    if (expect instanceof Optional) {\n      // If the arg is undefined, then it matches \"optional\" and we can move to\n      // the next arg\n      if (typeof arg === 'undefined') {\n        continue;\n      }\n      expect = expect.type;\n    }\n\n    if (typeof expect === 'string') {\n      // Handle the edge case for null because typeof null === 'object'\n      if (expect.includes('null') && arg === null) {\n        continue;\n      }\n\n      const required = expect.split('|');\n      _assert(required.includes(typeof arg), AuthErrorCode.ARGUMENT_ERROR, {});\n    } else if (typeof expect === 'object') {\n      // Recursively check record arguments\n      const record = arg as Record<string, unknown>;\n      const map = expect as MapType;\n      const keys = Object.keys(expect);\n\n      assertTypes(\n        keys.map(k => record[k]),\n        ...keys.map(k => map[k])\n      );\n    } else {\n      _assert(arg instanceof expect, AuthErrorCode.ARGUMENT_ERROR, {});\n    }\n  }\n}\n\n/**\n * Unconditionally fails, throwing an internal error with the given message.\n *\n * @param failure type of failure encountered\n * @throws Error\n */\nexport function debugFail(failure: string): never {\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  const message = `INTERNAL ASSERTION FAILED: ` + failure;\n  _logError(message);\n\n  // NOTE: We don't use FirebaseError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n  throw new Error(message);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * @param assertion\n * @param message\n */\nexport function debugAssert(\n  assertion: unknown,\n  message: string\n): asserts assertion {\n  if (!assertion) {\n    debugFail(message);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert } from './assert';\n\n/**\n * Our API has a lot of one-off constants that are used to do things.\n * Unfortunately we can't export these as classes instantiated directly since\n * the constructor may side effect and therefore can't be proven to be safely\n * culled. Instead, we export these classes themselves as a lowerCamelCase\n * constant, and instantiate them under the hood.\n */\nexport interface SingletonInstantiator<T> {\n  new (): T;\n}\n\nconst instanceCache: Map<unknown, unknown> = new Map();\n\nexport function _getInstance<T>(cls: unknown): T {\n  debugAssert(cls instanceof Function, 'Expected a class definition');\n  let instance = instanceCache.get(cls) as T | undefined;\n\n  if (instance) {\n    debugAssert(\n      instance instanceof cls,\n      'Instance stored in cache mismatched with class'\n    );\n    return instance;\n  }\n\n  instance = new (cls as SingletonInstantiator<T>)();\n  instanceCache.set(cls, instance);\n  return instance;\n}\n\nexport function _clearInstanceMap(): void {\n  instanceCache.clear();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function _getCurrentUrl(): string {\n  return (typeof self !== 'undefined' && self.location?.href) || '';\n}\n\nexport function _isHttpOrHttps(): boolean {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n\nexport function _getCurrentScheme(): string | null {\n  return (typeof self !== 'undefined' && self.location?.protocol) || null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isMobileCordova, isReactNative } from '@firebase/util';\nimport { _isOnline } from './navigator';\nimport { debugAssert } from './assert';\n\nexport const enum DelayMin {\n  OFFLINE = 5000\n}\n\n/**\n * A structure to help pick between a range of long and short delay durations\n * depending on the current environment. In general, the long delay is used for\n * mobile environments whereas short delays are used for desktop environments.\n */\nexport class Delay {\n  // The default value for the offline delay timeout in ms.\n\n  private readonly isMobile: boolean;\n  constructor(\n    private readonly shortDelay: number,\n    private readonly longDelay: number\n  ) {\n    // Internal error when improperly initialized.\n    debugAssert(\n      longDelay > shortDelay,\n      'Short delay should be less than long delay!'\n    );\n    this.isMobile = isMobileCordova() || isReactNative();\n  }\n\n  get(): number {\n    if (!_isOnline()) {\n      // Pick the shorter timeout.\n      return Math.min(DelayMin.OFFLINE, this.shortDelay);\n    }\n    // If running in a mobile environment, return the long delay, otherwise\n    // return the short delay.\n    // This could be improved in the future to dynamically change based on other\n    // variables instead of just reading the current environment.\n    return this.isMobile ? this.longDelay : this.shortDelay;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isBrowserExtension } from '@firebase/util';\nimport { _isHttpOrHttps } from './location';\n\n/**\n * Determine whether the browser is working online\n */\nexport function _isOnline(): boolean {\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator &&\n    'onLine' in navigator &&\n    typeof navigator.onLine === 'boolean' &&\n    // Apply only for traditional web apps and Chrome extensions.\n    // This is especially true for Cordova apps which have unreliable\n    // navigator.onLine behavior unless cordova-plugin-network-information is\n    // installed which overwrites the native navigator.onLine value and\n    // defines navigator.connection.\n    (_isHttpOrHttps() || isBrowserExtension() || 'connection' in navigator)\n  ) {\n    return navigator.onLine;\n  }\n  // If we can't determine the state, assume it is online.\n  return true;\n}\n\nexport function _getUserLanguage(): string | null {\n  if (typeof navigator === 'undefined') {\n    return null;\n  }\n  const navigatorLanguage: NavigatorLanguage = navigator;\n  return (\n    // Most reliable, but only supported in Chrome/Firefox.\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\n    // Supported in most browsers, but returns the language of the browser\n    // UI, not the language set in browser settings.\n    navigatorLanguage.language ||\n    // Couldn't determine language.\n    null\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConfigInternal } from '../../model/auth';\nimport { debugAssert } from './assert';\n\nexport function _emulatorUrl(config: ConfigInternal, path?: string): string {\n  debugAssert(config.emulator, 'Emulator should always be set here');\n  const { url } = config.emulator;\n\n  if (!path) {\n    return url;\n  }\n\n  return `${url}${path.startsWith('/') ? path.slice(1) : path}`;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugFail } from './assert';\n\nexport class FetchProvider {\n  private static fetchImpl: typeof fetch | null;\n  private static headersImpl: typeof Headers | null;\n  private static responseImpl: typeof Response | null;\n\n  static initialize(\n    fetchImpl: typeof fetch,\n    headersImpl?: typeof Headers,\n    responseImpl?: typeof Response\n  ): void {\n    this.fetchImpl = fetchImpl;\n    if (headersImpl) {\n      this.headersImpl = headersImpl;\n    }\n    if (responseImpl) {\n      this.responseImpl = responseImpl;\n    }\n  }\n\n  static fetch(): typeof fetch {\n    if (this.fetchImpl) {\n      return this.fetchImpl;\n    }\n    if (typeof self !== 'undefined' && 'fetch' in self) {\n      return self.fetch;\n    }\n    debugFail(\n      'Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n\n  static headers(): typeof Headers {\n    if (this.headersImpl) {\n      return this.headersImpl;\n    }\n    if (typeof self !== 'undefined' && 'Headers' in self) {\n      return self.Headers;\n    }\n    debugFail(\n      'Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n\n  static response(): typeof Response {\n    if (this.responseImpl) {\n      return this.responseImpl;\n    }\n    if (typeof self !== 'undefined' && 'Response' in self) {\n      return self.Response;\n    }\n    debugFail(\n      'Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../core/errors';\n\n/**\n * Errors that can be returned by the backend\n */\nexport const enum ServerError {\n  ADMIN_ONLY_OPERATION = 'ADMIN_ONLY_OPERATION',\n  BLOCKING_FUNCTION_ERROR_RESPONSE = 'BLOCKING_FUNCTION_ERROR_RESPONSE',\n  CAPTCHA_CHECK_FAILED = 'CAPTCHA_CHECK_FAILED',\n  CORS_UNSUPPORTED = 'CORS_UNSUPPORTED',\n  CREDENTIAL_MISMATCH = 'CREDENTIAL_MISMATCH',\n  CREDENTIAL_TOO_OLD_LOGIN_AGAIN = 'CREDENTIAL_TOO_OLD_LOGIN_AGAIN',\n  DYNAMIC_LINK_NOT_ACTIVATED = 'DYNAMIC_LINK_NOT_ACTIVATED',\n  EMAIL_CHANGE_NEEDS_VERIFICATION = 'EMAIL_CHANGE_NEEDS_VERIFICATION',\n  EMAIL_EXISTS = 'EMAIL_EXISTS',\n  EMAIL_NOT_FOUND = 'EMAIL_NOT_FOUND',\n  EXPIRED_OOB_CODE = 'EXPIRED_OOB_CODE',\n  FEDERATED_USER_ID_ALREADY_LINKED = 'FEDERATED_USER_ID_ALREADY_LINKED',\n  INVALID_APP_CREDENTIAL = 'INVALID_APP_CREDENTIAL',\n  INVALID_APP_ID = 'INVALID_APP_ID',\n  INVALID_CERT_HASH = 'INVALID_CERT_HASH',\n  INVALID_CODE = 'INVALID_CODE',\n  INVALID_CONTINUE_URI = 'INVALID_CONTINUE_URI',\n  INVALID_CUSTOM_TOKEN = 'INVALID_CUSTOM_TOKEN',\n  INVALID_DYNAMIC_LINK_DOMAIN = 'INVALID_DYNAMIC_LINK_DOMAIN',\n  INVALID_EMAIL = 'INVALID_EMAIL',\n  INVALID_ID_TOKEN = 'INVALID_ID_TOKEN',\n  INVALID_IDP_RESPONSE = 'INVALID_IDP_RESPONSE',\n  INVALID_IDENTIFIER = 'INVALID_IDENTIFIER',\n  INVALID_MESSAGE_PAYLOAD = 'INVALID_MESSAGE_PAYLOAD',\n  INVALID_MFA_PENDING_CREDENTIAL = 'INVALID_MFA_PENDING_CREDENTIAL',\n  INVALID_OAUTH_CLIENT_ID = 'INVALID_OAUTH_CLIENT_ID',\n  INVALID_OOB_CODE = 'INVALID_OOB_CODE',\n  INVALID_PASSWORD = 'INVALID_PASSWORD',\n  INVALID_PENDING_TOKEN = 'INVALID_PENDING_TOKEN',\n  INVALID_PHONE_NUMBER = 'INVALID_PHONE_NUMBER',\n  INVALID_PROVIDER_ID = 'INVALID_PROVIDER_ID',\n  INVALID_RECIPIENT_EMAIL = 'INVALID_RECIPIENT_EMAIL',\n  INVALID_SENDER = 'INVALID_SENDER',\n  INVALID_SESSION_INFO = 'INVALID_SESSION_INFO',\n  INVALID_TEMPORARY_PROOF = 'INVALID_TEMPORARY_PROOF',\n  INVALID_TENANT_ID = 'INVALID_TENANT_ID',\n  MFA_ENROLLMENT_NOT_FOUND = 'MFA_ENROLLMENT_NOT_FOUND',\n  MISSING_ANDROID_PACKAGE_NAME = 'MISSING_ANDROID_PACKAGE_NAME',\n  MISSING_APP_CREDENTIAL = 'MISSING_APP_CREDENTIAL',\n  MISSING_CODE = 'MISSING_CODE',\n  MISSING_CONTINUE_URI = 'MISSING_CONTINUE_URI',\n  MISSING_CUSTOM_TOKEN = 'MISSING_CUSTOM_TOKEN',\n  MISSING_IOS_BUNDLE_ID = 'MISSING_IOS_BUNDLE_ID',\n  MISSING_MFA_ENROLLMENT_ID = 'MISSING_MFA_ENROLLMENT_ID',\n  MISSING_MFA_PENDING_CREDENTIAL = 'MISSING_MFA_PENDING_CREDENTIAL',\n  MISSING_OOB_CODE = 'MISSING_OOB_CODE',\n  MISSING_OR_INVALID_NONCE = 'MISSING_OR_INVALID_NONCE',\n  MISSING_PASSWORD = 'MISSING_PASSWORD',\n  MISSING_REQ_TYPE = 'MISSING_REQ_TYPE',\n  MISSING_PHONE_NUMBER = 'MISSING_PHONE_NUMBER',\n  MISSING_SESSION_INFO = 'MISSING_SESSION_INFO',\n  OPERATION_NOT_ALLOWED = 'OPERATION_NOT_ALLOWED',\n  PASSWORD_LOGIN_DISABLED = 'PASSWORD_LOGIN_DISABLED',\n  QUOTA_EXCEEDED = 'QUOTA_EXCEEDED',\n  RESET_PASSWORD_EXCEED_LIMIT = 'RESET_PASSWORD_EXCEED_LIMIT',\n  REJECTED_CREDENTIAL = 'REJECTED_CREDENTIAL',\n  SECOND_FACTOR_EXISTS = 'SECOND_FACTOR_EXISTS',\n  SECOND_FACTOR_LIMIT_EXCEEDED = 'SECOND_FACTOR_LIMIT_EXCEEDED',\n  SESSION_EXPIRED = 'SESSION_EXPIRED',\n  TENANT_ID_MISMATCH = 'TENANT_ID_MISMATCH',\n  TOKEN_EXPIRED = 'TOKEN_EXPIRED',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'TOO_MANY_ATTEMPTS_TRY_LATER',\n  UNSUPPORTED_FIRST_FACTOR = 'UNSUPPORTED_FIRST_FACTOR',\n  UNSUPPORTED_TENANT_OPERATION = 'UNSUPPORTED_TENANT_OPERATION',\n  UNAUTHORIZED_DOMAIN = 'UNAUTHORIZED_DOMAIN',\n  UNVERIFIED_EMAIL = 'UNVERIFIED_EMAIL',\n  USER_CANCELLED = 'USER_CANCELLED',\n  USER_DISABLED = 'USER_DISABLED',\n  USER_NOT_FOUND = 'USER_NOT_FOUND',\n  WEAK_PASSWORD = 'WEAK_PASSWORD'\n}\n\n/**\n * API Response in the event of an error\n */\nexport interface JsonError {\n  error: {\n    code: number;\n    message: string;\n    errors?: [\n      {\n        message: ServerError;\n        domain: string;\n        reason: string;\n      }\n    ];\n  };\n}\n\n/**\n * Type definition for a map from server errors to developer visible errors\n */\nexport declare type ServerErrorMap<ApiError extends string> = {\n  readonly [K in ApiError]: AuthErrorCode;\n};\n\n/**\n * Map from errors returned by the server to errors to developer visible errors\n */\nexport const SERVER_ERROR_MAP: Partial<ServerErrorMap<ServerError>> = {\n  // Custom token errors.\n  [ServerError.CREDENTIAL_MISMATCH]: AuthErrorCode.CREDENTIAL_MISMATCH,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_CUSTOM_TOKEN]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Create Auth URI errors.\n  [ServerError.INVALID_IDENTIFIER]: AuthErrorCode.INVALID_EMAIL,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_CONTINUE_URI]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Sign in with email and password errors (some apply to sign up too).\n  [ServerError.INVALID_PASSWORD]: AuthErrorCode.INVALID_PASSWORD,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_PASSWORD]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Sign up with email and password errors.\n  [ServerError.EMAIL_EXISTS]: AuthErrorCode.EMAIL_EXISTS,\n  [ServerError.PASSWORD_LOGIN_DISABLED]: AuthErrorCode.OPERATION_NOT_ALLOWED,\n\n  // Verify assertion for sign in with credential errors:\n  [ServerError.INVALID_IDP_RESPONSE]: AuthErrorCode.INVALID_IDP_RESPONSE,\n  [ServerError.INVALID_PENDING_TOKEN]: AuthErrorCode.INVALID_IDP_RESPONSE,\n  [ServerError.FEDERATED_USER_ID_ALREADY_LINKED]:\n    AuthErrorCode.CREDENTIAL_ALREADY_IN_USE,\n\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_REQ_TYPE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Send Password reset email errors:\n  [ServerError.EMAIL_NOT_FOUND]: AuthErrorCode.USER_DELETED,\n  [ServerError.RESET_PASSWORD_EXCEED_LIMIT]:\n    AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER,\n\n  [ServerError.EXPIRED_OOB_CODE]: AuthErrorCode.EXPIRED_OOB_CODE,\n  [ServerError.INVALID_OOB_CODE]: AuthErrorCode.INVALID_OOB_CODE,\n  // This can only happen if the SDK sends a bad request.\n  [ServerError.MISSING_OOB_CODE]: AuthErrorCode.INTERNAL_ERROR,\n\n  // Operations that require ID token in request:\n  [ServerError.CREDENTIAL_TOO_OLD_LOGIN_AGAIN]:\n    AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN,\n  [ServerError.INVALID_ID_TOKEN]: AuthErrorCode.INVALID_AUTH,\n  [ServerError.TOKEN_EXPIRED]: AuthErrorCode.TOKEN_EXPIRED,\n  [ServerError.USER_NOT_FOUND]: AuthErrorCode.TOKEN_EXPIRED,\n\n  // Other errors.\n  [ServerError.TOO_MANY_ATTEMPTS_TRY_LATER]:\n    AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER,\n\n  // Phone Auth related errors.\n  [ServerError.INVALID_CODE]: AuthErrorCode.INVALID_CODE,\n  [ServerError.INVALID_SESSION_INFO]: AuthErrorCode.INVALID_SESSION_INFO,\n  [ServerError.INVALID_TEMPORARY_PROOF]: AuthErrorCode.INVALID_IDP_RESPONSE,\n  [ServerError.MISSING_SESSION_INFO]: AuthErrorCode.MISSING_SESSION_INFO,\n  [ServerError.SESSION_EXPIRED]: AuthErrorCode.CODE_EXPIRED,\n\n  // Other action code errors when additional settings passed.\n  // MISSING_CONTINUE_URI is getting mapped to INTERNAL_ERROR above.\n  // This is OK as this error will be caught by client side validation.\n  [ServerError.MISSING_ANDROID_PACKAGE_NAME]:\n    AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME,\n  [ServerError.UNAUTHORIZED_DOMAIN]: AuthErrorCode.UNAUTHORIZED_DOMAIN,\n\n  // getProjectConfig errors when clientId is passed.\n  [ServerError.INVALID_OAUTH_CLIENT_ID]: AuthErrorCode.INVALID_OAUTH_CLIENT_ID,\n\n  // User actions (sign-up or deletion) disabled errors.\n  [ServerError.ADMIN_ONLY_OPERATION]: AuthErrorCode.ADMIN_ONLY_OPERATION,\n\n  // Multi factor related errors.\n  [ServerError.INVALID_MFA_PENDING_CREDENTIAL]:\n    AuthErrorCode.INVALID_MFA_SESSION,\n  [ServerError.MFA_ENROLLMENT_NOT_FOUND]: AuthErrorCode.MFA_INFO_NOT_FOUND,\n  [ServerError.MISSING_MFA_ENROLLMENT_ID]: AuthErrorCode.MISSING_MFA_INFO,\n  [ServerError.MISSING_MFA_PENDING_CREDENTIAL]:\n    AuthErrorCode.MISSING_MFA_SESSION,\n  [ServerError.SECOND_FACTOR_EXISTS]:\n    AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED,\n  [ServerError.SECOND_FACTOR_LIMIT_EXCEEDED]:\n    AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED,\n\n  // Blocking functions related errors.\n  [ServerError.BLOCKING_FUNCTION_ERROR_RESPONSE]: AuthErrorCode.INTERNAL_ERROR\n};\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError, querystring } from '@firebase/util';\n\nimport { AuthErrorCode, NamedErrorParams } from '../core/errors';\nimport {\n  _createError,\n  _errorWithCustomMessage,\n  _fail\n} from '../core/util/assert';\nimport { Delay } from '../core/util/delay';\nimport { _emulatorUrl } from '../core/util/emulator';\nimport { FetchProvider } from '../core/util/fetch_provider';\nimport { Auth } from '../model/public_types';\nimport { AuthInternal, ConfigInternal } from '../model/auth';\nimport { IdTokenResponse, TaggedWithTokenResponse } from '../model/id_token';\nimport { IdTokenMfaResponse } from './authentication/mfa';\nimport { SERVER_ERROR_MAP, ServerError, ServerErrorMap } from './errors';\n\nexport const enum HttpMethod {\n  POST = 'POST',\n  GET = 'GET'\n}\n\nexport const enum HttpHeader {\n  CONTENT_TYPE = 'Content-Type',\n  X_FIREBASE_LOCALE = 'X-Firebase-Locale',\n  X_CLIENT_VERSION = 'X-Client-Version',\n  X_FIREBASE_GMPID = 'X-Firebase-gmpid',\n  X_FIREBASE_CLIENT = 'X-Firebase-Client'\n}\n\nexport const enum Endpoint {\n  CREATE_AUTH_URI = '/v1/accounts:createAuthUri',\n  DELETE_ACCOUNT = '/v1/accounts:delete',\n  RESET_PASSWORD = '/v1/accounts:resetPassword',\n  SIGN_UP = '/v1/accounts:signUp',\n  SIGN_IN_WITH_CUSTOM_TOKEN = '/v1/accounts:signInWithCustomToken',\n  SIGN_IN_WITH_EMAIL_LINK = '/v1/accounts:signInWithEmailLink',\n  SIGN_IN_WITH_IDP = '/v1/accounts:signInWithIdp',\n  SIGN_IN_WITH_PASSWORD = '/v1/accounts:signInWithPassword',\n  SIGN_IN_WITH_PHONE_NUMBER = '/v1/accounts:signInWithPhoneNumber',\n  SEND_VERIFICATION_CODE = '/v1/accounts:sendVerificationCode',\n  SEND_OOB_CODE = '/v1/accounts:sendOobCode',\n  SET_ACCOUNT_INFO = '/v1/accounts:update',\n  GET_ACCOUNT_INFO = '/v1/accounts:lookup',\n  GET_RECAPTCHA_PARAM = '/v1/recaptchaParams',\n  START_MFA_ENROLLMENT = '/v2/accounts/mfaEnrollment:start',\n  FINALIZE_MFA_ENROLLMENT = '/v2/accounts/mfaEnrollment:finalize',\n  START_MFA_SIGN_IN = '/v2/accounts/mfaSignIn:start',\n  FINALIZE_MFA_SIGN_IN = '/v2/accounts/mfaSignIn:finalize',\n  WITHDRAW_MFA = '/v2/accounts/mfaEnrollment:withdraw',\n  GET_PROJECT_CONFIG = '/v1/projects'\n}\n\nexport const DEFAULT_API_TIMEOUT_MS = new Delay(30_000, 60_000);\n\nexport function _addTidIfNecessary<T extends { tenantId?: string }>(\n  auth: Auth,\n  request: T\n): T {\n  if (auth.tenantId && !request.tenantId) {\n    return {\n      ...request,\n      tenantId: auth.tenantId\n    };\n  }\n  return request;\n}\n\nexport async function _performApiRequest<T, V>(\n  auth: Auth,\n  method: HttpMethod,\n  path: Endpoint,\n  request?: T,\n  customErrorMap: Partial<ServerErrorMap<ServerError>> = {}\n): Promise<V> {\n  return _performFetchWithErrorHandling(auth, customErrorMap, async () => {\n    let body = {};\n    let params = {};\n    if (request) {\n      if (method === HttpMethod.GET) {\n        params = request;\n      } else {\n        body = {\n          body: JSON.stringify(request)\n        };\n      }\n    }\n\n    const query = querystring({\n      key: auth.config.apiKey,\n      ...params\n    }).slice(1);\n\n    const headers = await (auth as AuthInternal)._getAdditionalHeaders();\n    headers[HttpHeader.CONTENT_TYPE] = 'application/json';\n\n    if (auth.languageCode) {\n      headers[HttpHeader.X_FIREBASE_LOCALE] = auth.languageCode;\n    }\n\n    return FetchProvider.fetch()(\n      _getFinalTarget(auth, auth.config.apiHost, path, query),\n      {\n        method,\n        headers,\n        referrerPolicy: 'no-referrer',\n        ...body\n      }\n    );\n  });\n}\n\nexport async function _performFetchWithErrorHandling<V>(\n  auth: Auth,\n  customErrorMap: Partial<ServerErrorMap<ServerError>>,\n  fetchFn: () => Promise<Response>\n): Promise<V> {\n  (auth as AuthInternal)._canInitEmulator = false;\n  const errorMap = { ...SERVER_ERROR_MAP, ...customErrorMap };\n  try {\n    const networkTimeout = new NetworkTimeout<Response>(auth);\n    const response: Response = await Promise.race<Promise<Response>>([\n      fetchFn(),\n      networkTimeout.promise\n    ]);\n\n    // If we've reached this point, the fetch succeeded and the networkTimeout\n    // didn't throw; clear the network timeout delay so that Node won't hang\n    networkTimeout.clearNetworkTimeout();\n\n    const json = await response.json();\n    if ('needConfirmation' in json) {\n      throw _makeTaggedError(auth, AuthErrorCode.NEED_CONFIRMATION, json);\n    }\n\n    if (response.ok && !('errorMessage' in json)) {\n      return json;\n    } else {\n      const errorMessage = response.ok ? json.errorMessage : json.error.message;\n      const [serverErrorCode, serverErrorMessage] = errorMessage.split(' : ');\n      if (serverErrorCode === ServerError.FEDERATED_USER_ID_ALREADY_LINKED) {\n        throw _makeTaggedError(\n          auth,\n          AuthErrorCode.CREDENTIAL_ALREADY_IN_USE,\n          json\n        );\n      } else if (serverErrorCode === ServerError.EMAIL_EXISTS) {\n        throw _makeTaggedError(auth, AuthErrorCode.EMAIL_EXISTS, json);\n      } else if (serverErrorCode === ServerError.USER_DISABLED) {\n        throw _makeTaggedError(auth, AuthErrorCode.USER_DISABLED, json);\n      }\n      const authError =\n        errorMap[serverErrorCode as ServerError] ||\n        (serverErrorCode\n          .toLowerCase()\n          .replace(/[_\\s]+/g, '-') as unknown as AuthErrorCode);\n      if (serverErrorMessage) {\n        throw _errorWithCustomMessage(auth, authError, serverErrorMessage);\n      } else {\n        _fail(auth, authError);\n      }\n    }\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      throw e;\n    }\n    _fail(auth, AuthErrorCode.NETWORK_REQUEST_FAILED);\n  }\n}\n\nexport async function _performSignInRequest<T, V extends IdTokenResponse>(\n  auth: Auth,\n  method: HttpMethod,\n  path: Endpoint,\n  request?: T,\n  customErrorMap: Partial<ServerErrorMap<ServerError>> = {}\n): Promise<V> {\n  const serverResponse = (await _performApiRequest<T, V | IdTokenMfaResponse>(\n    auth,\n    method,\n    path,\n    request,\n    customErrorMap\n  )) as V;\n  if ('mfaPendingCredential' in serverResponse) {\n    _fail(auth, AuthErrorCode.MFA_REQUIRED, {\n      _serverResponse: serverResponse\n    });\n  }\n\n  return serverResponse;\n}\n\nexport function _getFinalTarget(\n  auth: Auth,\n  host: string,\n  path: string,\n  query: string\n): string {\n  const base = `${host}${path}?${query}`;\n\n  if (!(auth as AuthInternal).config.emulator) {\n    return `${auth.config.apiScheme}://${base}`;\n  }\n\n  return _emulatorUrl(auth.config as ConfigInternal, base);\n}\n\nclass NetworkTimeout<T> {\n  // Node timers and browser timers are fundamentally incompatible, but we\n  // don't care about the value here\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private timer: any | null = null;\n  readonly promise = new Promise<T>((_, reject) => {\n    this.timer = setTimeout(() => {\n      return reject(\n        _createError(this.auth, AuthErrorCode.NETWORK_REQUEST_FAILED)\n      );\n    }, DEFAULT_API_TIMEOUT_MS.get());\n  });\n\n  clearNetworkTimeout(): void {\n    clearTimeout(this.timer);\n  }\n\n  constructor(private readonly auth: Auth) {}\n}\n\ninterface PotentialResponse extends IdTokenResponse {\n  email?: string;\n  phoneNumber?: string;\n}\n\nexport function _makeTaggedError(\n  auth: Auth,\n  code: AuthErrorCode,\n  response: PotentialResponse\n): FirebaseError {\n  const errorParams: NamedErrorParams = {\n    appName: auth.name\n  };\n\n  if (response.email) {\n    errorParams.email = response.email;\n  }\n  if (response.phoneNumber) {\n    errorParams.phoneNumber = response.phoneNumber;\n  }\n\n  const error = _createError(auth, code, errorParams);\n\n  // We know customData is defined on error because errorParams is defined\n  (error.customData! as TaggedWithTokenResponse)._tokenResponse = response;\n  return error;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Endpoint, HttpMethod, _performApiRequest } from '../index';\nimport { MfaEnrollment } from './mfa';\nimport { Auth } from '../../model/public_types';\n\nexport interface DeleteAccountRequest {\n  idToken: string;\n}\n\nexport async function deleteAccount(\n  auth: Auth,\n  request: DeleteAccountRequest\n): Promise<void> {\n  return _performApiRequest<DeleteAccountRequest, void>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.DELETE_ACCOUNT,\n    request\n  );\n}\n\nexport interface ProviderUserInfo {\n  providerId: string;\n  rawId?: string;\n  email?: string;\n  displayName?: string;\n  photoUrl?: string;\n  phoneNumber?: string;\n}\n\nexport interface DeleteLinkedAccountsRequest {\n  idToken: string;\n  deleteProvider: string[];\n}\n\nexport interface DeleteLinkedAccountsResponse {\n  providerUserInfo: ProviderUserInfo[];\n}\n\nexport async function deleteLinkedAccounts(\n  auth: Auth,\n  request: DeleteLinkedAccountsRequest\n): Promise<DeleteLinkedAccountsResponse> {\n  return _performApiRequest<\n    DeleteLinkedAccountsRequest,\n    DeleteLinkedAccountsResponse\n  >(auth, HttpMethod.POST, Endpoint.SET_ACCOUNT_INFO, request);\n}\n\nexport interface APIUserInfo {\n  localId?: string;\n  displayName?: string;\n  photoUrl?: string;\n  email?: string;\n  emailVerified?: boolean;\n  phoneNumber?: string;\n  lastLoginAt?: number;\n  createdAt?: number;\n  tenantId?: string;\n  passwordHash?: string;\n  providerUserInfo?: ProviderUserInfo[];\n  mfaInfo?: MfaEnrollment[];\n}\n\nexport interface GetAccountInfoRequest {\n  idToken: string;\n}\n\nexport interface GetAccountInfoResponse {\n  users: APIUserInfo[];\n}\n\nexport async function getAccountInfo(\n  auth: Auth,\n  request: GetAccountInfoRequest\n): Promise<GetAccountInfoResponse> {\n  return _performApiRequest<GetAccountInfoRequest, GetAccountInfoResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.GET_ACCOUNT_INFO,\n    request\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function utcTimestampToDateString(\n  utcTimestamp?: string | number\n): string | undefined {\n  if (!utcTimestamp) {\n    return undefined;\n  }\n  try {\n    // Convert to date object.\n    const date = new Date(Number(utcTimestamp));\n    // Test date is valid.\n    if (!isNaN(date.getTime())) {\n      // Convert to UTC date string.\n      return date.toUTCString();\n    }\n  } catch (e) {\n    // Do nothing. undefined will be returned.\n  }\n  return undefined;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdTokenResult, ParsedToken, User } from '../../model/public_types';\nimport { base64Decode, getModularInstance } from '@firebase/util';\n\nimport { UserInternal } from '../../model/user';\nimport { _assert } from '../util/assert';\nimport { _logError } from '../util/log';\nimport { utcTimestampToDateString } from '../util/time';\nimport { AuthErrorCode } from '../errors';\n\n/**\n * Returns a JSON Web Token (JWT) used to identify the user to a Firebase service.\n *\n * @remarks\n * Returns the current token if it has not expired or if it will not expire in the next five\n * minutes. Otherwise, this will refresh the token and return a new one.\n *\n * @param user - The user.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport function getIdToken(user: User, forceRefresh = false): Promise<string> {\n  return getModularInstance(user).getIdToken(forceRefresh);\n}\n\n/**\n * Returns a deserialized JSON Web Token (JWT) used to identitfy the user to a Firebase service.\n *\n * @remarks\n * Returns the current token if it has not expired or if it will not expire in the next five\n * minutes. Otherwise, this will refresh the token and return a new one.\n *\n * @param user - The user.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getIdTokenResult(\n  user: User,\n  forceRefresh = false\n): Promise<IdTokenResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const token = await userInternal.getIdToken(forceRefresh);\n  const claims = _parseToken(token);\n\n  _assert(\n    claims && claims.exp && claims.auth_time && claims.iat,\n    userInternal.auth,\n    AuthErrorCode.INTERNAL_ERROR\n  );\n  const firebase =\n    typeof claims.firebase === 'object' ? claims.firebase : undefined;\n\n  const signInProvider: string | undefined = firebase?.['sign_in_provider'];\n\n  return {\n    claims,\n    token,\n    authTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.auth_time)\n    )!,\n    issuedAtTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.iat)\n    )!,\n    expirationTime: utcTimestampToDateString(\n      secondsStringToMilliseconds(claims.exp)\n    )!,\n    signInProvider: signInProvider || null,\n    signInSecondFactor: firebase?.['sign_in_second_factor'] || null\n  };\n}\n\nfunction secondsStringToMilliseconds(seconds: string): number {\n  return Number(seconds) * 1000;\n}\n\nexport function _parseToken(token: string): ParsedToken | null {\n  const [algorithm, payload, signature] = token.split('.');\n  if (\n    algorithm === undefined ||\n    payload === undefined ||\n    signature === undefined\n  ) {\n    _logError('JWT malformed, contained fewer than 3 sections');\n    return null;\n  }\n\n  try {\n    const decoded = base64Decode(payload);\n    if (!decoded) {\n      _logError('Failed to decode base64 JWT payload');\n      return null;\n    }\n    return JSON.parse(decoded);\n  } catch (e) {\n    _logError(\n      'Caught error parsing JWT payload as JSON',\n      (e as Error)?.toString()\n    );\n    return null;\n  }\n}\n\n/**\n * Extract expiresIn TTL from a token by subtracting the expiration from the issuance.\n */\nexport function _tokenExpiresIn(token: string): number {\n  const parsedToken = _parseToken(token);\n  _assert(parsedToken, AuthErrorCode.INTERNAL_ERROR);\n  _assert(typeof parsedToken.exp !== 'undefined', AuthErrorCode.INTERNAL_ERROR);\n  _assert(typeof parsedToken.iat !== 'undefined', AuthErrorCode.INTERNAL_ERROR);\n  return Number(parsedToken.exp) - Number(parsedToken.iat);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\n\nexport async function _logoutIfInvalidated<T>(\n  user: UserInternal,\n  promise: Promise<T>,\n  bypassAuthState = false\n): Promise<T> {\n  if (bypassAuthState) {\n    return promise;\n  }\n  try {\n    return await promise;\n  } catch (e) {\n    if (e instanceof FirebaseError && isUserInvalidated(e)) {\n      if (user.auth.currentUser === user) {\n        await user.auth.signOut();\n      }\n    }\n\n    throw e;\n  }\n}\n\nfunction isUserInvalidated({ code }: FirebaseError): boolean {\n  return (\n    code === `auth/${AuthErrorCode.USER_DISABLED}` ||\n    code === `auth/${AuthErrorCode.TOKEN_EXPIRED}`\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\n\n// Refresh the token five minutes before expiration\nexport const enum Duration {\n  OFFSET = 5 * 1000 * 60,\n  RETRY_BACKOFF_MIN = 30 * 1000,\n  RETRY_BACKOFF_MAX = 16 * 60 * 1000\n}\n\nexport class ProactiveRefresh {\n  private isRunning = false;\n\n  // Node timers and browser timers return fundamentally different types.\n  // We don't actually care what the value is but TS won't accept unknown and\n  // we can't cast properly in both environments.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private timerId: any | null = null;\n  private errorBackoff = Duration.RETRY_BACKOFF_MIN;\n\n  constructor(private readonly user: UserInternal) {}\n\n  _start(): void {\n    if (this.isRunning) {\n      return;\n    }\n\n    this.isRunning = true;\n    this.schedule();\n  }\n\n  _stop(): void {\n    if (!this.isRunning) {\n      return;\n    }\n\n    this.isRunning = false;\n    if (this.timerId !== null) {\n      clearTimeout(this.timerId);\n    }\n  }\n\n  private getInterval(wasError: boolean): number {\n    if (wasError) {\n      const interval = this.errorBackoff;\n      this.errorBackoff = Math.min(\n        this.errorBackoff * 2,\n        Duration.RETRY_BACKOFF_MAX\n      );\n      return interval;\n    } else {\n      // Reset the error backoff\n      this.errorBackoff = Duration.RETRY_BACKOFF_MIN;\n      const expTime = this.user.stsTokenManager.expirationTime ?? 0;\n      const interval = expTime - Date.now() - Duration.OFFSET;\n\n      return Math.max(0, interval);\n    }\n  }\n\n  private schedule(wasError = false): void {\n    if (!this.isRunning) {\n      // Just in case...\n      return;\n    }\n\n    const interval = this.getInterval(wasError);\n    this.timerId = setTimeout(async () => {\n      await this.iteration();\n    }, interval);\n  }\n\n  private async iteration(): Promise<void> {\n    try {\n      await this.user.getIdToken(true);\n    } catch (e) {\n      // Only retry on network errors\n      if (\n        (e as FirebaseError)?.code ===\n        `auth/${AuthErrorCode.NETWORK_REQUEST_FAILED}`\n      ) {\n        this.schedule(/* wasError */ true);\n      }\n\n      return;\n    }\n    this.schedule();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserMetadata as UserMetadataType } from '../../model/public_types';\n\nimport { utcTimestampToDateString } from '../util/time';\n\nexport class UserMetadata implements UserMetadataType {\n  creationTime?: string;\n  lastSignInTime?: string;\n\n  constructor(\n    private createdAt?: string | number,\n    private lastLoginAt?: string | number\n  ) {\n    this._initializeTime();\n  }\n\n  private _initializeTime(): void {\n    this.lastSignInTime = utcTimestampToDateString(this.lastLoginAt);\n    this.creationTime = utcTimestampToDateString(this.createdAt);\n  }\n\n  _copy(metadata: UserMetadata): void {\n    this.createdAt = metadata.createdAt;\n    this.lastLoginAt = metadata.lastLoginAt;\n    this._initializeTime();\n  }\n\n  toJSON(): object {\n    return {\n      createdAt: this.createdAt,\n      lastLoginAt: this.lastLoginAt\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User, UserInfo } from '../../model/public_types';\n\nimport {\n  getAccountInfo,\n  ProviderUserInfo\n} from '../../api/account_management/account';\nimport { UserInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { UserMetadata } from './user_metadata';\nimport { getModularInstance } from '@firebase/util';\n\nexport async function _reloadWithoutSaving(user: UserInternal): Promise<void> {\n  const auth = user.auth;\n  const idToken = await user.getIdToken();\n  const response = await _logoutIfInvalidated(\n    user,\n    getAccountInfo(auth, { idToken })\n  );\n\n  _assert(response?.users.length, auth, AuthErrorCode.INTERNAL_ERROR);\n\n  const coreAccount = response.users[0];\n\n  user._notifyReloadListener(coreAccount);\n\n  const newProviderData = coreAccount.providerUserInfo?.length\n    ? extractProviderData(coreAccount.providerUserInfo)\n    : [];\n\n  const providerData = mergeProviderData(user.providerData, newProviderData);\n\n  // Preserves the non-nonymous status of the stored user, even if no more\n  // credentials (federated or email/password) are linked to the user. If\n  // the user was previously anonymous, then use provider data to update.\n  // On the other hand, if it was not anonymous before, it should never be\n  // considered anonymous now.\n  const oldIsAnonymous = user.isAnonymous;\n  const newIsAnonymous =\n    !(user.email && coreAccount.passwordHash) && !providerData?.length;\n  const isAnonymous = !oldIsAnonymous ? false : newIsAnonymous;\n\n  const updates: Partial<UserInternal> = {\n    uid: coreAccount.localId,\n    displayName: coreAccount.displayName || null,\n    photoURL: coreAccount.photoUrl || null,\n    email: coreAccount.email || null,\n    emailVerified: coreAccount.emailVerified || false,\n    phoneNumber: coreAccount.phoneNumber || null,\n    tenantId: coreAccount.tenantId || null,\n    providerData,\n    metadata: new UserMetadata(coreAccount.createdAt, coreAccount.lastLoginAt),\n    isAnonymous\n  };\n\n  Object.assign(user, updates);\n}\n\n/**\n * Reloads user account data, if signed in.\n *\n * @param user - The user.\n *\n * @public\n */\nexport async function reload(user: User): Promise<void> {\n  const userInternal: UserInternal = getModularInstance(user) as UserInternal;\n  await _reloadWithoutSaving(userInternal);\n\n  // Even though the current user hasn't changed, update\n  // current user will trigger a persistence update w/ the\n  // new info.\n  await userInternal.auth._persistUserIfCurrent(userInternal);\n  userInternal.auth._notifyListenersIfCurrent(userInternal);\n}\n\nfunction mergeProviderData(\n  original: UserInfo[],\n  newData: UserInfo[]\n): UserInfo[] {\n  const deduped = original.filter(\n    o => !newData.some(n => n.providerId === o.providerId)\n  );\n  return [...deduped, ...newData];\n}\n\nfunction extractProviderData(providers: ProviderUserInfo[]): UserInfo[] {\n  return providers.map(({ providerId, ...provider }) => {\n    return {\n      providerId,\n      uid: provider.rawId || '',\n      displayName: provider.displayName || null,\n      email: provider.email || null,\n      phoneNumber: provider.phoneNumber || null,\n      photoURL: provider.photoUrl || null\n    };\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable camelcase */\n\nimport { querystring } from '@firebase/util';\n\nimport {\n  _getFinalTarget,\n  _performFetchWithErrorHandling,\n  HttpMethod,\n  HttpHeader\n} from '../index';\nimport { FetchProvider } from '../../core/util/fetch_provider';\nimport { Auth } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\n\nexport const enum Endpoint {\n  TOKEN = '/v1/token'\n}\n\n/** The server responses with snake_case; we convert to camelCase */\ninterface RequestStsTokenServerResponse {\n  access_token: string;\n  expires_in: string;\n  refresh_token: string;\n}\n\nexport interface RequestStsTokenResponse {\n  accessToken: string;\n  expiresIn: string;\n  refreshToken: string;\n}\n\nexport async function requestStsToken(\n  auth: Auth,\n  refreshToken: string\n): Promise<RequestStsTokenResponse> {\n  const response =\n    await _performFetchWithErrorHandling<RequestStsTokenServerResponse>(\n      auth,\n      {},\n      async () => {\n        const body = querystring({\n          'grant_type': 'refresh_token',\n          'refresh_token': refreshToken\n        }).slice(1);\n        const { tokenApiHost, apiKey } = auth.config;\n        const url = _getFinalTarget(\n          auth,\n          tokenApiHost,\n          Endpoint.TOKEN,\n          `key=${apiKey}`\n        );\n\n        const headers = await (auth as AuthInternal)._getAdditionalHeaders();\n        headers[HttpHeader.CONTENT_TYPE] = 'application/x-www-form-urlencoded';\n\n        return FetchProvider.fetch()(url, {\n          method: HttpMethod.POST,\n          headers,\n          body\n        });\n      }\n    );\n\n  // The response comes back in snake_case. Convert to camel:\n  return {\n    accessToken: response.access_token,\n    expiresIn: response.expires_in,\n    refreshToken: response.refresh_token\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FinalizeMfaResponse } from '../../api/authentication/mfa';\nimport { requestStsToken } from '../../api/authentication/token';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { PersistedBlob } from '../persistence';\nimport { _assert, debugFail } from '../util/assert';\nimport { _tokenExpiresIn } from './id_token_result';\n\n/**\n * The number of milliseconds before the official expiration time of a token\n * to refresh that token, to provide a buffer for RPCs to complete.\n */\nexport const enum Buffer {\n  TOKEN_REFRESH = 30_000\n}\n\n/**\n * We need to mark this class as internal explicitly to exclude it in the public typings, because\n * it references AuthInternal which has a circular dependency with UserInternal.\n *\n * @internal\n */\nexport class StsTokenManager {\n  refreshToken: string | null = null;\n  accessToken: string | null = null;\n  expirationTime: number | null = null;\n\n  get isExpired(): boolean {\n    return (\n      !this.expirationTime ||\n      Date.now() > this.expirationTime - Buffer.TOKEN_REFRESH\n    );\n  }\n\n  updateFromServerResponse(\n    response: IdTokenResponse | FinalizeMfaResponse\n  ): void {\n    _assert(response.idToken, AuthErrorCode.INTERNAL_ERROR);\n    _assert(\n      typeof response.idToken !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    _assert(\n      typeof response.refreshToken !== 'undefined',\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    const expiresIn =\n      'expiresIn' in response && typeof response.expiresIn !== 'undefined'\n        ? Number(response.expiresIn)\n        : _tokenExpiresIn(response.idToken);\n    this.updateTokensAndExpiration(\n      response.idToken,\n      response.refreshToken,\n      expiresIn\n    );\n  }\n\n  async getToken(\n    auth: AuthInternal,\n    forceRefresh = false\n  ): Promise<string | null> {\n    _assert(\n      !this.accessToken || this.refreshToken,\n      auth,\n      AuthErrorCode.TOKEN_EXPIRED\n    );\n\n    if (!forceRefresh && this.accessToken && !this.isExpired) {\n      return this.accessToken;\n    }\n\n    if (this.refreshToken) {\n      await this.refresh(auth, this.refreshToken!);\n      return this.accessToken;\n    }\n\n    return null;\n  }\n\n  clearRefreshToken(): void {\n    this.refreshToken = null;\n  }\n\n  private async refresh(auth: AuthInternal, oldToken: string): Promise<void> {\n    const { accessToken, refreshToken, expiresIn } = await requestStsToken(\n      auth,\n      oldToken\n    );\n    this.updateTokensAndExpiration(\n      accessToken,\n      refreshToken,\n      Number(expiresIn)\n    );\n  }\n\n  private updateTokensAndExpiration(\n    accessToken: string,\n    refreshToken: string,\n    expiresInSec: number\n  ): void {\n    this.refreshToken = refreshToken || null;\n    this.accessToken = accessToken || null;\n    this.expirationTime = Date.now() + expiresInSec * 1000;\n  }\n\n  static fromJSON(appName: string, object: PersistedBlob): StsTokenManager {\n    const { refreshToken, accessToken, expirationTime } = object;\n\n    const manager = new StsTokenManager();\n    if (refreshToken) {\n      _assert(typeof refreshToken === 'string', AuthErrorCode.INTERNAL_ERROR, {\n        appName\n      });\n      manager.refreshToken = refreshToken;\n    }\n    if (accessToken) {\n      _assert(typeof accessToken === 'string', AuthErrorCode.INTERNAL_ERROR, {\n        appName\n      });\n      manager.accessToken = accessToken;\n    }\n    if (expirationTime) {\n      _assert(\n        typeof expirationTime === 'number',\n        AuthErrorCode.INTERNAL_ERROR,\n        {\n          appName\n        }\n      );\n      manager.expirationTime = expirationTime;\n    }\n    return manager;\n  }\n\n  toJSON(): object {\n    return {\n      refreshToken: this.refreshToken,\n      accessToken: this.accessToken,\n      expirationTime: this.expirationTime\n    };\n  }\n\n  _assign(stsTokenManager: StsTokenManager): void {\n    this.accessToken = stsTokenManager.accessToken;\n    this.refreshToken = stsTokenManager.refreshToken;\n    this.expirationTime = stsTokenManager.expirationTime;\n  }\n\n  _clone(): StsTokenManager {\n    return Object.assign(new StsTokenManager(), this.toJSON());\n  }\n\n  _performRefresh(): never {\n    return debugFail('not implemented');\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdTokenResult } from '../../model/public_types';\nimport { NextFn } from '@firebase/util';\n\nimport {\n  APIUserInfo,\n  deleteAccount\n} from '../../api/account_management/account';\nimport { FinalizeMfaResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport {\n  MutableUserInfo,\n  UserInternal,\n  UserParameters\n} from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { PersistedBlob } from '../persistence';\nimport { _assert } from '../util/assert';\nimport { getIdTokenResult } from './id_token_result';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { ProactiveRefresh } from './proactive_refresh';\nimport { _reloadWithoutSaving, reload } from './reload';\nimport { StsTokenManager } from './token_manager';\nimport { UserMetadata } from './user_metadata';\nimport { ProviderId } from '../../model/enums';\n\nfunction assertStringOrUndefined(\n  assertion: unknown,\n  appName: string\n): asserts assertion is string | undefined {\n  _assert(\n    typeof assertion === 'string' || typeof assertion === 'undefined',\n    AuthErrorCode.INTERNAL_ERROR,\n    { appName }\n  );\n}\n\nexport class UserImpl implements UserInternal {\n  // For the user object, provider is always Firebase.\n  readonly providerId = ProviderId.FIREBASE;\n  stsTokenManager: StsTokenManager;\n  // Last known accessToken so we know when it changes\n  private accessToken: string | null;\n\n  uid: string;\n  auth: AuthInternal;\n  emailVerified: boolean;\n  isAnonymous: boolean;\n  tenantId: string | null;\n  readonly metadata: UserMetadata;\n  providerData: MutableUserInfo[];\n\n  // Optional fields from UserInfo\n  displayName: string | null;\n  email: string | null;\n  phoneNumber: string | null;\n  photoURL: string | null;\n\n  _redirectEventId?: string;\n  private readonly proactiveRefresh = new ProactiveRefresh(this);\n\n  constructor({ uid, auth, stsTokenManager, ...opt }: UserParameters) {\n    this.uid = uid;\n    this.auth = auth;\n    this.stsTokenManager = stsTokenManager;\n    this.accessToken = stsTokenManager.accessToken;\n    this.displayName = opt.displayName || null;\n    this.email = opt.email || null;\n    this.emailVerified = opt.emailVerified || false;\n    this.phoneNumber = opt.phoneNumber || null;\n    this.photoURL = opt.photoURL || null;\n    this.isAnonymous = opt.isAnonymous || false;\n    this.tenantId = opt.tenantId || null;\n    this.providerData = opt.providerData ? [...opt.providerData] : [];\n    this.metadata = new UserMetadata(\n      opt.createdAt || undefined,\n      opt.lastLoginAt || undefined\n    );\n  }\n\n  async getIdToken(forceRefresh?: boolean): Promise<string> {\n    const accessToken = await _logoutIfInvalidated(\n      this,\n      this.stsTokenManager.getToken(this.auth, forceRefresh)\n    );\n    _assert(accessToken, this.auth, AuthErrorCode.INTERNAL_ERROR);\n\n    if (this.accessToken !== accessToken) {\n      this.accessToken = accessToken;\n      await this.auth._persistUserIfCurrent(this);\n      this.auth._notifyListenersIfCurrent(this);\n    }\n\n    return accessToken;\n  }\n\n  getIdTokenResult(forceRefresh?: boolean): Promise<IdTokenResult> {\n    return getIdTokenResult(this, forceRefresh);\n  }\n\n  reload(): Promise<void> {\n    return reload(this);\n  }\n\n  private reloadUserInfo: APIUserInfo | null = null;\n  private reloadListener: NextFn<APIUserInfo> | null = null;\n\n  _assign(user: UserInternal): void {\n    if (this === user) {\n      return;\n    }\n    _assert(this.uid === user.uid, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.displayName = user.displayName;\n    this.photoURL = user.photoURL;\n    this.email = user.email;\n    this.emailVerified = user.emailVerified;\n    this.phoneNumber = user.phoneNumber;\n    this.isAnonymous = user.isAnonymous;\n    this.tenantId = user.tenantId;\n    this.providerData = user.providerData.map(userInfo => ({ ...userInfo }));\n    this.metadata._copy(user.metadata);\n    this.stsTokenManager._assign(user.stsTokenManager);\n  }\n\n  _clone(auth: AuthInternal): UserInternal {\n    return new UserImpl({\n      ...this,\n      auth,\n      stsTokenManager: this.stsTokenManager._clone()\n    });\n  }\n\n  _onReload(callback: NextFn<APIUserInfo>): void {\n    // There should only ever be one listener, and that is a single instance of MultiFactorUser\n    _assert(!this.reloadListener, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.reloadListener = callback;\n    if (this.reloadUserInfo) {\n      this._notifyReloadListener(this.reloadUserInfo);\n      this.reloadUserInfo = null;\n    }\n  }\n\n  _notifyReloadListener(userInfo: APIUserInfo): void {\n    if (this.reloadListener) {\n      this.reloadListener(userInfo);\n    } else {\n      // If no listener is subscribed yet, save the result so it's available when they do subscribe\n      this.reloadUserInfo = userInfo;\n    }\n  }\n\n  _startProactiveRefresh(): void {\n    this.proactiveRefresh._start();\n  }\n\n  _stopProactiveRefresh(): void {\n    this.proactiveRefresh._stop();\n  }\n\n  async _updateTokensIfNecessary(\n    response: IdTokenResponse | FinalizeMfaResponse,\n    reload = false\n  ): Promise<void> {\n    let tokensRefreshed = false;\n    if (\n      response.idToken &&\n      response.idToken !== this.stsTokenManager.accessToken\n    ) {\n      this.stsTokenManager.updateFromServerResponse(response);\n      tokensRefreshed = true;\n    }\n\n    if (reload) {\n      await _reloadWithoutSaving(this);\n    }\n\n    await this.auth._persistUserIfCurrent(this);\n    if (tokensRefreshed) {\n      this.auth._notifyListenersIfCurrent(this);\n    }\n  }\n\n  async delete(): Promise<void> {\n    const idToken = await this.getIdToken();\n    await _logoutIfInvalidated(this, deleteAccount(this.auth, { idToken }));\n    this.stsTokenManager.clearRefreshToken();\n\n    // TODO: Determine if cancellable-promises are necessary to use in this class so that delete()\n    //       cancels pending actions...\n\n    return this.auth.signOut();\n  }\n\n  toJSON(): PersistedBlob {\n    return {\n      uid: this.uid,\n      email: this.email || undefined,\n      emailVerified: this.emailVerified,\n      displayName: this.displayName || undefined,\n      isAnonymous: this.isAnonymous,\n      photoURL: this.photoURL || undefined,\n      phoneNumber: this.phoneNumber || undefined,\n      tenantId: this.tenantId || undefined,\n      providerData: this.providerData.map(userInfo => ({ ...userInfo })),\n      stsTokenManager: this.stsTokenManager.toJSON(),\n      // Redirect event ID must be maintained in case there is a pending\n      // redirect event.\n      _redirectEventId: this._redirectEventId,\n      ...this.metadata.toJSON(),\n\n      // Required for compatibility with the legacy SDK (go/firebase-auth-sdk-persistence-parsing):\n      apiKey: this.auth.config.apiKey,\n      appName: this.auth.name\n      // Missing authDomain will be tolerated by the legacy SDK.\n      // stsTokenManager.apiKey isn't actually required (despite the legacy SDK persisting it).\n    };\n  }\n\n  get refreshToken(): string {\n    return this.stsTokenManager.refreshToken || '';\n  }\n\n  static _fromJSON(auth: AuthInternal, object: PersistedBlob): UserInternal {\n    const displayName = object.displayName ?? undefined;\n    const email = object.email ?? undefined;\n    const phoneNumber = object.phoneNumber ?? undefined;\n    const photoURL = object.photoURL ?? undefined;\n    const tenantId = object.tenantId ?? undefined;\n    const _redirectEventId = object._redirectEventId ?? undefined;\n    const createdAt = object.createdAt ?? undefined;\n    const lastLoginAt = object.lastLoginAt ?? undefined;\n    const {\n      uid,\n      emailVerified,\n      isAnonymous,\n      providerData,\n      stsTokenManager: plainObjectTokenManager\n    } = object;\n\n    _assert(uid && plainObjectTokenManager, auth, AuthErrorCode.INTERNAL_ERROR);\n\n    const stsTokenManager = StsTokenManager.fromJSON(\n      this.name,\n      plainObjectTokenManager as PersistedBlob\n    );\n\n    _assert(typeof uid === 'string', auth, AuthErrorCode.INTERNAL_ERROR);\n    assertStringOrUndefined(displayName, auth.name);\n    assertStringOrUndefined(email, auth.name);\n    _assert(\n      typeof emailVerified === 'boolean',\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    _assert(\n      typeof isAnonymous === 'boolean',\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    assertStringOrUndefined(phoneNumber, auth.name);\n    assertStringOrUndefined(photoURL, auth.name);\n    assertStringOrUndefined(tenantId, auth.name);\n    assertStringOrUndefined(_redirectEventId, auth.name);\n    assertStringOrUndefined(createdAt, auth.name);\n    assertStringOrUndefined(lastLoginAt, auth.name);\n    const user = new UserImpl({\n      uid,\n      auth,\n      email,\n      emailVerified,\n      displayName,\n      isAnonymous,\n      photoURL,\n      phoneNumber,\n      tenantId,\n      stsTokenManager,\n      createdAt,\n      lastLoginAt\n    });\n\n    if (providerData && Array.isArray(providerData)) {\n      user.providerData = providerData.map(userInfo => ({ ...userInfo }));\n    }\n\n    if (_redirectEventId) {\n      user._redirectEventId = _redirectEventId;\n    }\n\n    return user;\n  }\n\n  /**\n   * Initialize a User from an idToken server response\n   * @param auth\n   * @param idTokenResponse\n   */\n  static async _fromIdTokenResponse(\n    auth: AuthInternal,\n    idTokenResponse: IdTokenResponse,\n    isAnonymous: boolean = false\n  ): Promise<UserInternal> {\n    const stsTokenManager = new StsTokenManager();\n    stsTokenManager.updateFromServerResponse(idTokenResponse);\n\n    // Initialize the Firebase Auth user.\n    const user = new UserImpl({\n      uid: idTokenResponse.localId,\n      auth,\n      stsTokenManager,\n      isAnonymous\n    });\n\n    // Updates the user info and data and resolves with a user instance.\n    await _reloadWithoutSaving(user);\n    return user;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport {\n  PersistenceInternal,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener\n} from '../persistence';\n\nexport class InMemoryPersistence implements PersistenceInternal {\n  static type: 'NONE' = 'NONE';\n  readonly type = PersistenceType.NONE;\n  storage: Record<string, PersistenceValue> = {};\n\n  async _isAvailable(): Promise<boolean> {\n    return true;\n  }\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    this.storage[key] = value;\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const value = this.storage[key];\n    return value === undefined ? null : (value as T);\n  }\n\n  async _remove(key: string): Promise<void> {\n    delete this.storage[key];\n  }\n\n  _addListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n    return;\n  }\n\n  _removeListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for in-memory storage since it cannot be shared across windows/workers\n    return;\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type 'NONE'.\n *\n * @public\n */\nexport const inMemoryPersistence: Persistence = InMemoryPersistence;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiKey, AppName, AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { PersistedBlob, PersistenceInternal } from '../persistence';\nimport { UserImpl } from '../user/user_impl';\nimport { _getInstance } from '../util/instantiator';\nimport { inMemoryPersistence } from './in_memory';\n\nexport const enum KeyName {\n  AUTH_USER = 'authUser',\n  AUTH_EVENT = 'authEvent',\n  REDIRECT_USER = 'redirectUser',\n  PERSISTENCE_USER = 'persistence'\n}\nexport const enum Namespace {\n  PERSISTENCE = 'firebase'\n}\n\nexport function _persistenceKeyName(\n  key: string,\n  apiKey: ApiKey,\n  appName: AppName\n): string {\n  return `${Namespace.PERSISTENCE}:${key}:${apiKey}:${appName}`;\n}\n\nexport class PersistenceUserManager {\n  private readonly fullUserKey: string;\n  private readonly fullPersistenceKey: string;\n  private readonly boundEventHandler: () => void;\n\n  private constructor(\n    public persistence: PersistenceInternal,\n    private readonly auth: AuthInternal,\n    private readonly userKey: string\n  ) {\n    const { config, name } = this.auth;\n    this.fullUserKey = _persistenceKeyName(this.userKey, config.apiKey, name);\n    this.fullPersistenceKey = _persistenceKeyName(\n      KeyName.PERSISTENCE_USER,\n      config.apiKey,\n      name\n    );\n    this.boundEventHandler = auth._onStorageEvent.bind(auth);\n    this.persistence._addListener(this.fullUserKey, this.boundEventHandler);\n  }\n\n  setCurrentUser(user: UserInternal): Promise<void> {\n    return this.persistence._set(this.fullUserKey, user.toJSON());\n  }\n\n  async getCurrentUser(): Promise<UserInternal | null> {\n    const blob = await this.persistence._get<PersistedBlob>(this.fullUserKey);\n    return blob ? UserImpl._fromJSON(this.auth, blob) : null;\n  }\n\n  removeCurrentUser(): Promise<void> {\n    return this.persistence._remove(this.fullUserKey);\n  }\n\n  savePersistenceForRedirect(): Promise<void> {\n    return this.persistence._set(\n      this.fullPersistenceKey,\n      this.persistence.type\n    );\n  }\n\n  async setPersistence(newPersistence: PersistenceInternal): Promise<void> {\n    if (this.persistence === newPersistence) {\n      return;\n    }\n\n    const currentUser = await this.getCurrentUser();\n    await this.removeCurrentUser();\n\n    this.persistence = newPersistence;\n\n    if (currentUser) {\n      return this.setCurrentUser(currentUser);\n    }\n  }\n\n  delete(): void {\n    this.persistence._removeListener(this.fullUserKey, this.boundEventHandler);\n  }\n\n  static async create(\n    auth: AuthInternal,\n    persistenceHierarchy: PersistenceInternal[],\n    userKey = KeyName.AUTH_USER\n  ): Promise<PersistenceUserManager> {\n    if (!persistenceHierarchy.length) {\n      return new PersistenceUserManager(\n        _getInstance(inMemoryPersistence),\n        auth,\n        userKey\n      );\n    }\n\n    // Eliminate any persistences that are not available\n    const availablePersistences = (\n      await Promise.all(\n        persistenceHierarchy.map(async persistence => {\n          if (await persistence._isAvailable()) {\n            return persistence;\n          }\n          return undefined;\n        })\n      )\n    ).filter(persistence => persistence) as PersistenceInternal[];\n\n    // Fall back to the first persistence listed, or in memory if none available\n    let selectedPersistence =\n      availablePersistences[0] ||\n      _getInstance<PersistenceInternal>(inMemoryPersistence);\n\n    const key = _persistenceKeyName(userKey, auth.config.apiKey, auth.name);\n\n    // Pull out the existing user, setting the chosen persistence to that\n    // persistence if the user exists.\n    let userToMigrate: UserInternal | null = null;\n    // Note, here we check for a user in _all_ persistences, not just the\n    // ones deemed available. If we can migrate a user out of a broken\n    // persistence, we will (but only if that persistence supports migration).\n    for (const persistence of persistenceHierarchy) {\n      try {\n        const blob = await persistence._get<PersistedBlob>(key);\n        if (blob) {\n          const user = UserImpl._fromJSON(auth, blob); // throws for unparsable blob (wrong format)\n          if (persistence !== selectedPersistence) {\n            userToMigrate = user;\n          }\n          selectedPersistence = persistence;\n          break;\n        }\n      } catch {}\n    }\n\n    // If we find the user in a persistence that does support migration, use\n    // that migration path (of only persistences that support migration)\n    const migrationHierarchy = availablePersistences.filter(\n      p => p._shouldAllowMigration\n    );\n\n    // If the persistence does _not_ allow migration, just finish off here\n    if (\n      !selectedPersistence._shouldAllowMigration ||\n      !migrationHierarchy.length\n    ) {\n      return new PersistenceUserManager(selectedPersistence, auth, userKey);\n    }\n\n    selectedPersistence = migrationHierarchy[0];\n    if (userToMigrate) {\n      // This normally shouldn't throw since chosenPersistence.isAvailable() is true, but if it does\n      // we'll just let it bubble to surface the error.\n      await selectedPersistence._set(key, userToMigrate.toJSON());\n    }\n\n    // Attempt to clear the key in other persistences but ignore errors. This helps prevent issues\n    // such as users getting stuck with a previous account after signing out and refreshing the tab.\n    await Promise.all(\n      persistenceHierarchy.map(async persistence => {\n        if (persistence !== selectedPersistence) {\n          try {\n            await persistence._remove(key);\n          } catch {}\n        }\n      })\n    );\n    return new PersistenceUserManager(selectedPersistence, auth, userKey);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isIE, getUA } from '@firebase/util';\n\ninterface NavigatorStandalone extends Navigator {\n  standalone?: unknown;\n}\n\ninterface Document {\n  documentMode?: number;\n}\n\n/**\n * Enums for Browser name.\n */\nexport const enum BrowserName {\n  ANDROID = 'Android',\n  BLACKBERRY = 'Blackberry',\n  EDGE = 'Edge',\n  FIREFOX = 'Firefox',\n  IE = 'IE',\n  IEMOBILE = 'IEMobile',\n  OPERA = 'Opera',\n  OTHER = 'Other',\n  CHROME = 'Chrome',\n  SAFARI = 'Safari',\n  SILK = 'Silk',\n  WEBOS = 'Webos'\n}\n\n/**\n * Determine the browser for the purposes of reporting usage to the API\n */\nexport function _getBrowserName(userAgent: string): BrowserName | string {\n  const ua = userAgent.toLowerCase();\n  if (ua.includes('opera/') || ua.includes('opr/') || ua.includes('opios/')) {\n    return BrowserName.OPERA;\n  } else if (_isIEMobile(ua)) {\n    // Windows phone IEMobile browser.\n    return BrowserName.IEMOBILE;\n  } else if (ua.includes('msie') || ua.includes('trident/')) {\n    return BrowserName.IE;\n  } else if (ua.includes('edge/')) {\n    return BrowserName.EDGE;\n  } else if (_isFirefox(ua)) {\n    return BrowserName.FIREFOX;\n  } else if (ua.includes('silk/')) {\n    return BrowserName.SILK;\n  } else if (_isBlackBerry(ua)) {\n    // Blackberry browser.\n    return BrowserName.BLACKBERRY;\n  } else if (_isWebOS(ua)) {\n    // WebOS default browser.\n    return BrowserName.WEBOS;\n  } else if (_isSafari(ua)) {\n    return BrowserName.SAFARI;\n  } else if (\n    (ua.includes('chrome/') || _isChromeIOS(ua)) &&\n    !ua.includes('edge/')\n  ) {\n    return BrowserName.CHROME;\n  } else if (_isAndroid(ua)) {\n    // Android stock browser.\n    return BrowserName.ANDROID;\n  } else {\n    // Most modern browsers have name/version at end of user agent string.\n    const re = /([a-zA-Z\\d\\.]+)\\/[a-zA-Z\\d\\.]*$/;\n    const matches = userAgent.match(re);\n    if (matches?.length === 2) {\n      return matches[1];\n    }\n  }\n  return BrowserName.OTHER;\n}\n\nexport function _isFirefox(ua = getUA()): boolean {\n  return /firefox\\//i.test(ua);\n}\n\nexport function _isSafari(userAgent = getUA()): boolean {\n  const ua = userAgent.toLowerCase();\n  return (\n    ua.includes('safari/') &&\n    !ua.includes('chrome/') &&\n    !ua.includes('crios/') &&\n    !ua.includes('android')\n  );\n}\n\nexport function _isChromeIOS(ua = getUA()): boolean {\n  return /crios\\//i.test(ua);\n}\n\nexport function _isIEMobile(ua = getUA()): boolean {\n  return /iemobile/i.test(ua);\n}\n\nexport function _isAndroid(ua = getUA()): boolean {\n  return /android/i.test(ua);\n}\n\nexport function _isBlackBerry(ua = getUA()): boolean {\n  return /blackberry/i.test(ua);\n}\n\nexport function _isWebOS(ua = getUA()): boolean {\n  return /webos/i.test(ua);\n}\n\nexport function _isIOS(ua = getUA()): boolean {\n  return (\n    /iphone|ipad|ipod/i.test(ua) ||\n    (/macintosh/i.test(ua) && /mobile/i.test(ua))\n  );\n}\n\nexport function _isIOS7Or8(ua = getUA()): boolean {\n  return (\n    /(iPad|iPhone|iPod).*OS 7_\\d/i.test(ua) ||\n    /(iPad|iPhone|iPod).*OS 8_\\d/i.test(ua)\n  );\n}\n\nexport function _isIOSStandalone(ua = getUA()): boolean {\n  return _isIOS(ua) && !!(window.navigator as NavigatorStandalone)?.standalone;\n}\n\nexport function _isIE10(): boolean {\n  return isIE() && (document as Document).documentMode === 10;\n}\n\nexport function _isMobileBrowser(ua: string = getUA()): boolean {\n  // TODO: implement getBrowserName equivalent for OS.\n  return (\n    _isIOS(ua) ||\n    _isAndroid(ua) ||\n    _isWebOS(ua) ||\n    _isBlackBerry(ua) ||\n    /windows phone/i.test(ua) ||\n    _isIEMobile(ua)\n  );\n}\n\nexport function _isIframe(): boolean {\n  try {\n    // Check that the current window is not the top window.\n    // If so, return true.\n    return !!(window && window !== window.top);\n  } catch (e) {\n    return false;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { _getBrowserName } from './browser';\nimport { getUA } from '@firebase/util';\n\nexport const enum ClientImplementation {\n  CORE = 'JsCore'\n}\n\n/**\n * @internal\n */\nexport const enum ClientPlatform {\n  BROWSER = 'Browser',\n  NODE = 'Node',\n  REACT_NATIVE = 'ReactNative',\n  CORDOVA = 'Cordova',\n  WORKER = 'Worker'\n}\n\n/*\n * Determine the SDK version string\n */\nexport function _getClientVersion(\n  clientPlatform: ClientPlatform,\n  frameworks: readonly string[] = []\n): string {\n  let reportedPlatform: string;\n  switch (clientPlatform) {\n    case ClientPlatform.BROWSER:\n      // In a browser environment, report the browser name.\n      reportedPlatform = _getBrowserName(getUA());\n      break;\n    case ClientPlatform.WORKER:\n      // Technically a worker runs from a browser but we need to differentiate a\n      // worker from a browser.\n      // For example: Chrome-Worker/JsCore/4.9.1/FirebaseCore-web.\n      reportedPlatform = `${_getBrowserName(getUA())}-${clientPlatform}`;\n      break;\n    default:\n      reportedPlatform = clientPlatform;\n  }\n  const reportedFrameworks = frameworks.length\n    ? frameworks.join(',')\n    : 'FirebaseCore-web'; /* default value if no other framework is used */\n  return `${reportedPlatform}/${ClientImplementation.CORE}/${SDK_VERSION}/${reportedFrameworks}`;\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthInternal } from '../../model/auth';\nimport { Unsubscribe, User } from '../../model/public_types';\nimport { AuthErrorCode } from '../errors';\n\ninterface MiddlewareEntry {\n  (user: User | null): Promise<void>;\n  onAbort?: () => void;\n}\n\nexport class AuthMiddlewareQueue {\n  private readonly queue: MiddlewareEntry[] = [];\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  pushCallback(\n    callback: (user: User | null) => void | Promise<void>,\n    onAbort?: () => void\n  ): Unsubscribe {\n    // The callback could be sync or async. Wrap it into a\n    // function that is always async.\n    const wrappedCallback: MiddlewareEntry = (\n      user: User | null\n    ): Promise<void> =>\n      new Promise((resolve, reject) => {\n        try {\n          const result = callback(user);\n          // Either resolve with existing promise or wrap a non-promise\n          // return value into a promise.\n          resolve(result);\n        } catch (e) {\n          // Sync callback throws.\n          reject(e);\n        }\n      });\n    // Attach the onAbort if present\n    wrappedCallback.onAbort = onAbort;\n    this.queue.push(wrappedCallback);\n\n    const index = this.queue.length - 1;\n    return () => {\n      // Unsubscribe. Replace with no-op. Do not remove from array, or it will disturb\n      // indexing of other elements.\n      this.queue[index] = () => Promise.resolve();\n    };\n  }\n\n  async runMiddleware(nextUser: User | null): Promise<void> {\n    if (this.auth.currentUser === nextUser) {\n      return;\n    }\n\n    // While running the middleware, build a temporary stack of onAbort\n    // callbacks to call if one middleware callback rejects.\n\n    const onAbortStack: Array<() => void> = [];\n    try {\n      for (const beforeStateCallback of this.queue) {\n        await beforeStateCallback(nextUser);\n\n        // Only push the onAbort if the callback succeeds\n        if (beforeStateCallback.onAbort) {\n          onAbortStack.push(beforeStateCallback.onAbort);\n        }\n      }\n    } catch (e) {\n      // Run all onAbort, with separate try/catch to ignore any errors and\n      // continue\n      onAbortStack.reverse();\n      for (const onAbort of onAbortStack) {\n        try {\n          onAbort();\n        } catch (_) {\n          /* swallow error */\n        }\n      }\n\n      throw this.auth._errorFactory.create(AuthErrorCode.LOGIN_BLOCKED, {\n        originalMessage: (e as Error)?.message\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _FirebaseService, FirebaseApp } from '@firebase/app';\nimport { Provider } from '@firebase/component';\nimport {\n  Auth,\n  AuthErrorMap,\n  AuthSettings,\n  EmulatorConfig,\n  NextOrObserver,\n  Persistence,\n  PopupRedirectResolver,\n  User,\n  UserCredential,\n  CompleteFn,\n  ErrorFn,\n  NextFn,\n  Unsubscribe\n} from '../../model/public_types';\nimport {\n  createSubscribe,\n  ErrorFactory,\n  FirebaseError,\n  getModularInstance,\n  Observer,\n  Subscribe\n} from '@firebase/util';\n\nimport { AuthInternal, ConfigInternal } from '../../model/auth';\nimport { PopupRedirectResolverInternal } from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport {\n  AuthErrorCode,\n  AuthErrorParams,\n  ErrorMapRetriever,\n  _DEFAULT_AUTH_ERROR_FACTORY\n} from '../errors';\nimport { PersistenceInternal } from '../persistence';\nimport {\n  KeyName,\n  PersistenceUserManager\n} from '../persistence/persistence_user_manager';\nimport { _reloadWithoutSaving } from '../user/reload';\nimport { _assert } from '../util/assert';\nimport { _getInstance } from '../util/instantiator';\nimport { _getUserLanguage } from '../util/navigator';\nimport { _getClientVersion } from '../util/version';\nimport { HttpHeader } from '../../api';\nimport { AuthMiddlewareQueue } from './middleware';\n\ninterface AsyncAction {\n  (): Promise<void>;\n}\n\nexport const enum DefaultConfig {\n  TOKEN_API_HOST = 'securetoken.googleapis.com',\n  API_HOST = 'identitytoolkit.googleapis.com',\n  API_SCHEME = 'https'\n}\n\nexport class AuthImpl implements AuthInternal, _FirebaseService {\n  currentUser: User | null = null;\n  emulatorConfig: EmulatorConfig | null = null;\n  private operations = Promise.resolve();\n  private persistenceManager?: PersistenceUserManager;\n  private redirectPersistenceManager?: PersistenceUserManager;\n  private authStateSubscription = new Subscription<User>(this);\n  private idTokenSubscription = new Subscription<User>(this);\n  private readonly beforeStateQueue = new AuthMiddlewareQueue(this);\n  private redirectUser: UserInternal | null = null;\n  private isProactiveRefreshEnabled = false;\n\n  // Any network calls will set this to true and prevent subsequent emulator\n  // initialization\n  _canInitEmulator = true;\n  _isInitialized = false;\n  _deleted = false;\n  _initializationPromise: Promise<void> | null = null;\n  _popupRedirectResolver: PopupRedirectResolverInternal | null = null;\n  _errorFactory: ErrorFactory<AuthErrorCode, AuthErrorParams> =\n    _DEFAULT_AUTH_ERROR_FACTORY;\n  readonly name: string;\n\n  // Tracks the last notified UID for state change listeners to prevent\n  // repeated calls to the callbacks. Undefined means it's never been\n  // called, whereas null means it's been called with a signed out user\n  private lastNotifiedUid: string | null | undefined = undefined;\n\n  languageCode: string | null = null;\n  tenantId: string | null = null;\n  settings: AuthSettings = { appVerificationDisabledForTesting: false };\n\n  constructor(\n    public readonly app: FirebaseApp,\n    private readonly heartbeatServiceProvider: Provider<'heartbeat'>,\n    public readonly config: ConfigInternal\n  ) {\n    this.name = app.name;\n    this.clientVersion = config.sdkClientVersion;\n  }\n\n  _initializeWithPersistence(\n    persistenceHierarchy: PersistenceInternal[],\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    if (popupRedirectResolver) {\n      this._popupRedirectResolver = _getInstance(popupRedirectResolver);\n    }\n\n    // Have to check for app deletion throughout initialization (after each\n    // promise resolution)\n    this._initializationPromise = this.queue(async () => {\n      if (this._deleted) {\n        return;\n      }\n\n      this.persistenceManager = await PersistenceUserManager.create(\n        this,\n        persistenceHierarchy\n      );\n\n      if (this._deleted) {\n        return;\n      }\n\n      // Initialize the resolver early if necessary (only applicable to web:\n      // this will cause the iframe to load immediately in certain cases)\n      if (this._popupRedirectResolver?._shouldInitProactively) {\n        // If this fails, don't halt auth loading\n        try {\n          await this._popupRedirectResolver._initialize(this);\n        } catch (e) {\n          /* Ignore the error */\n        }\n      }\n\n      await this.initializeCurrentUser(popupRedirectResolver);\n      this.lastNotifiedUid = this.currentUser?.uid || null;\n\n      if (this._deleted) {\n        return;\n      }\n\n      this._isInitialized = true;\n    });\n\n    return this._initializationPromise;\n  }\n\n  /**\n   * If the persistence is changed in another window, the user manager will let us know\n   */\n  async _onStorageEvent(): Promise<void> {\n    if (this._deleted) {\n      return;\n    }\n\n    const user = await this.assertedPersistence.getCurrentUser();\n\n    if (!this.currentUser && !user) {\n      // No change, do nothing (was signed out and remained signed out).\n      return;\n    }\n\n    // If the same user is to be synchronized.\n    if (this.currentUser && user && this.currentUser.uid === user.uid) {\n      // Data update, simply copy data changes.\n      this._currentUser._assign(user);\n      // If tokens changed from previous user tokens, this will trigger\n      // notifyAuthListeners_.\n      await this.currentUser.getIdToken();\n      return;\n    }\n\n    // Update current Auth state. Either a new login or logout.\n    // Skip blocking callbacks, they should not apply to a change in another tab.\n    await this._updateCurrentUser(user, /* skipBeforeStateCallbacks */ true);\n  }\n\n  private async initializeCurrentUser(\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    // First check to see if we have a pending redirect event.\n    const previouslyStoredUser =\n      (await this.assertedPersistence.getCurrentUser()) as UserInternal | null;\n    let futureCurrentUser = previouslyStoredUser;\n    let needsTocheckMiddleware = false;\n    if (popupRedirectResolver && this.config.authDomain) {\n      await this.getOrInitRedirectPersistenceManager();\n      const redirectUserEventId = this.redirectUser?._redirectEventId;\n      const storedUserEventId = futureCurrentUser?._redirectEventId;\n      const result = await this.tryRedirectSignIn(popupRedirectResolver);\n\n      // If the stored user (i.e. the old \"currentUser\") has a redirectId that\n      // matches the redirect user, then we want to initially sign in with the\n      // new user object from result.\n      // TODO(samgho): More thoroughly test all of this\n      if (\n        (!redirectUserEventId || redirectUserEventId === storedUserEventId) &&\n        result?.user\n      ) {\n        futureCurrentUser = result.user as UserInternal;\n        needsTocheckMiddleware = true;\n      }\n    }\n\n    // If no user in persistence, there is no current user. Set to null.\n    if (!futureCurrentUser) {\n      return this.directlySetCurrentUser(null);\n    }\n\n    if (!futureCurrentUser._redirectEventId) {\n      // This isn't a redirect link operation, we can reload and bail.\n      // First though, ensure that we check the middleware is happy.\n      if (needsTocheckMiddleware) {\n        try {\n          await this.beforeStateQueue.runMiddleware(futureCurrentUser);\n        } catch (e) {\n          futureCurrentUser = previouslyStoredUser;\n          // We know this is available since the bit is only set when the\n          // resolver is available\n          this._popupRedirectResolver!._overrideRedirectResult(this, () =>\n            Promise.reject(e)\n          );\n        }\n      }\n\n      if (futureCurrentUser) {\n        return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\n      } else {\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    _assert(this._popupRedirectResolver, this, AuthErrorCode.ARGUMENT_ERROR);\n    await this.getOrInitRedirectPersistenceManager();\n\n    // If the redirect user's event ID matches the current user's event ID,\n    // DO NOT reload the current user, otherwise they'll be cleared from storage.\n    // This is important for the reauthenticateWithRedirect() flow.\n    if (\n      this.redirectUser &&\n      this.redirectUser._redirectEventId === futureCurrentUser._redirectEventId\n    ) {\n      return this.directlySetCurrentUser(futureCurrentUser);\n    }\n\n    return this.reloadAndSetCurrentUserOrClear(futureCurrentUser);\n  }\n\n  private async tryRedirectSignIn(\n    redirectResolver: PopupRedirectResolver\n  ): Promise<UserCredential | null> {\n    // The redirect user needs to be checked (and signed in if available)\n    // during auth initialization. All of the normal sign in and link/reauth\n    // flows call back into auth and push things onto the promise queue. We\n    // need to await the result of the redirect sign in *inside the promise\n    // queue*. This presents a problem: we run into deadlock. See:\n    //    ┌> [Initialization] ─────┐\n    //    ┌> [<other queue tasks>] │\n    //    └─ [getRedirectResult] <─┘\n    //    where [] are tasks on the queue and arrows denote awaits\n    // Initialization will never complete because it's waiting on something\n    // that's waiting for initialization to complete!\n    //\n    // Instead, this method calls getRedirectResult() (stored in\n    // _completeRedirectFn) with an optional parameter that instructs all of\n    // the underlying auth operations to skip anything that mutates auth state.\n\n    let result: UserCredential | null = null;\n    try {\n      // We know this._popupRedirectResolver is set since redirectResolver\n      // is passed in. The _completeRedirectFn expects the unwrapped extern.\n      result = await this._popupRedirectResolver!._completeRedirectFn(\n        this,\n        redirectResolver,\n        true\n      );\n    } catch (e) {\n      // Swallow any errors here; the code can retrieve them in\n      // getRedirectResult().\n      await this._setRedirectUser(null);\n    }\n\n    return result;\n  }\n\n  private async reloadAndSetCurrentUserOrClear(\n    user: UserInternal\n  ): Promise<void> {\n    try {\n      await _reloadWithoutSaving(user);\n    } catch (e) {\n      if (\n        (e as FirebaseError)?.code !==\n        `auth/${AuthErrorCode.NETWORK_REQUEST_FAILED}`\n      ) {\n        // Something's wrong with the user's token. Log them out and remove\n        // them from storage\n        return this.directlySetCurrentUser(null);\n      }\n    }\n\n    return this.directlySetCurrentUser(user);\n  }\n\n  useDeviceLanguage(): void {\n    this.languageCode = _getUserLanguage();\n  }\n\n  async _delete(): Promise<void> {\n    this._deleted = true;\n  }\n\n  async updateCurrentUser(userExtern: User | null): Promise<void> {\n    // The public updateCurrentUser method needs to make a copy of the user,\n    // and also check that the project matches\n    const user = userExtern\n      ? (getModularInstance(userExtern) as UserInternal)\n      : null;\n    if (user) {\n      _assert(\n        user.auth.config.apiKey === this.config.apiKey,\n        this,\n        AuthErrorCode.INVALID_AUTH\n      );\n    }\n    return this._updateCurrentUser(user && user._clone(this));\n  }\n\n  async _updateCurrentUser(\n    user: User | null,\n    skipBeforeStateCallbacks: boolean = false\n  ): Promise<void> {\n    if (this._deleted) {\n      return;\n    }\n    if (user) {\n      _assert(\n        this.tenantId === user.tenantId,\n        this,\n        AuthErrorCode.TENANT_ID_MISMATCH\n      );\n    }\n\n    if (!skipBeforeStateCallbacks) {\n      await this.beforeStateQueue.runMiddleware(user);\n    }\n\n    return this.queue(async () => {\n      await this.directlySetCurrentUser(user as UserInternal | null);\n      this.notifyAuthListeners();\n    });\n  }\n\n  async signOut(): Promise<void> {\n    // Run first, to block _setRedirectUser() if any callbacks fail.\n    await this.beforeStateQueue.runMiddleware(null);\n    // Clear the redirect user when signOut is called\n    if (this.redirectPersistenceManager || this._popupRedirectResolver) {\n      await this._setRedirectUser(null);\n    }\n\n    // Prevent callbacks from being called again in _updateCurrentUser, as\n    // they were already called in the first line.\n    return this._updateCurrentUser(null, /* skipBeforeStateCallbacks */ true);\n  }\n\n  setPersistence(persistence: Persistence): Promise<void> {\n    return this.queue(async () => {\n      await this.assertedPersistence.setPersistence(_getInstance(persistence));\n    });\n  }\n\n  _getPersistence(): string {\n    return this.assertedPersistence.persistence.type;\n  }\n\n  _updateErrorMap(errorMap: AuthErrorMap): void {\n    this._errorFactory = new ErrorFactory<AuthErrorCode, AuthErrorParams>(\n      'auth',\n      'Firebase',\n      (errorMap as ErrorMapRetriever)()\n    );\n  }\n\n  onAuthStateChanged(\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    return this.registerStateListener(\n      this.authStateSubscription,\n      nextOrObserver,\n      error,\n      completed\n    );\n  }\n\n  beforeAuthStateChanged(\n    callback: (user: User | null) => void | Promise<void>,\n    onAbort?: () => void\n  ): Unsubscribe {\n    return this.beforeStateQueue.pushCallback(callback, onAbort);\n  }\n\n  onIdTokenChanged(\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    return this.registerStateListener(\n      this.idTokenSubscription,\n      nextOrObserver,\n      error,\n      completed\n    );\n  }\n\n  toJSON(): object {\n    return {\n      apiKey: this.config.apiKey,\n      authDomain: this.config.authDomain,\n      appName: this.name,\n      currentUser: this._currentUser?.toJSON()\n    };\n  }\n\n  async _setRedirectUser(\n    user: UserInternal | null,\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<void> {\n    const redirectManager = await this.getOrInitRedirectPersistenceManager(\n      popupRedirectResolver\n    );\n    return user === null\n      ? redirectManager.removeCurrentUser()\n      : redirectManager.setCurrentUser(user);\n  }\n\n  private async getOrInitRedirectPersistenceManager(\n    popupRedirectResolver?: PopupRedirectResolver\n  ): Promise<PersistenceUserManager> {\n    if (!this.redirectPersistenceManager) {\n      const resolver: PopupRedirectResolverInternal | null =\n        (popupRedirectResolver && _getInstance(popupRedirectResolver)) ||\n        this._popupRedirectResolver;\n      _assert(resolver, this, AuthErrorCode.ARGUMENT_ERROR);\n      this.redirectPersistenceManager = await PersistenceUserManager.create(\n        this,\n        [_getInstance(resolver._redirectPersistence)],\n        KeyName.REDIRECT_USER\n      );\n      this.redirectUser =\n        await this.redirectPersistenceManager.getCurrentUser();\n    }\n\n    return this.redirectPersistenceManager;\n  }\n\n  async _redirectUserForId(id: string): Promise<UserInternal | null> {\n    // Make sure we've cleared any pending persistence actions if we're not in\n    // the initializer\n    if (this._isInitialized) {\n      await this.queue(async () => {});\n    }\n\n    if (this._currentUser?._redirectEventId === id) {\n      return this._currentUser;\n    }\n\n    if (this.redirectUser?._redirectEventId === id) {\n      return this.redirectUser;\n    }\n\n    return null;\n  }\n\n  async _persistUserIfCurrent(user: UserInternal): Promise<void> {\n    if (user === this.currentUser) {\n      return this.queue(async () => this.directlySetCurrentUser(user));\n    }\n  }\n\n  /** Notifies listeners only if the user is current */\n  _notifyListenersIfCurrent(user: UserInternal): void {\n    if (user === this.currentUser) {\n      this.notifyAuthListeners();\n    }\n  }\n\n  _key(): string {\n    return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;\n  }\n\n  _startProactiveRefresh(): void {\n    this.isProactiveRefreshEnabled = true;\n    if (this.currentUser) {\n      this._currentUser._startProactiveRefresh();\n    }\n  }\n\n  _stopProactiveRefresh(): void {\n    this.isProactiveRefreshEnabled = false;\n    if (this.currentUser) {\n      this._currentUser._stopProactiveRefresh();\n    }\n  }\n\n  /** Returns the current user cast as the internal type */\n  get _currentUser(): UserInternal {\n    return this.currentUser as UserInternal;\n  }\n\n  private notifyAuthListeners(): void {\n    if (!this._isInitialized) {\n      return;\n    }\n\n    this.idTokenSubscription.next(this.currentUser);\n\n    const currentUid = this.currentUser?.uid ?? null;\n    if (this.lastNotifiedUid !== currentUid) {\n      this.lastNotifiedUid = currentUid;\n      this.authStateSubscription.next(this.currentUser);\n    }\n  }\n\n  private registerStateListener(\n    subscription: Subscription<User>,\n    nextOrObserver: NextOrObserver<User>,\n    error?: ErrorFn,\n    completed?: CompleteFn\n  ): Unsubscribe {\n    if (this._deleted) {\n      return () => {};\n    }\n\n    const cb =\n      typeof nextOrObserver === 'function'\n        ? nextOrObserver\n        : nextOrObserver.next.bind(nextOrObserver);\n\n    const promise = this._isInitialized\n      ? Promise.resolve()\n      : this._initializationPromise;\n    _assert(promise, this, AuthErrorCode.INTERNAL_ERROR);\n    // The callback needs to be called asynchronously per the spec.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    promise.then(() => cb(this.currentUser));\n\n    if (typeof nextOrObserver === 'function') {\n      return subscription.addObserver(nextOrObserver, error, completed);\n    } else {\n      return subscription.addObserver(nextOrObserver);\n    }\n  }\n\n  /**\n   * Unprotected (from race conditions) method to set the current user. This\n   * should only be called from within a queued callback. This is necessary\n   * because the queue shouldn't rely on another queued callback.\n   */\n  private async directlySetCurrentUser(\n    user: UserInternal | null\n  ): Promise<void> {\n    if (this.currentUser && this.currentUser !== user) {\n      this._currentUser._stopProactiveRefresh();\n    }\n    if (user && this.isProactiveRefreshEnabled) {\n      user._startProactiveRefresh();\n    }\n\n    this.currentUser = user;\n\n    if (user) {\n      await this.assertedPersistence.setCurrentUser(user);\n    } else {\n      await this.assertedPersistence.removeCurrentUser();\n    }\n  }\n\n  private queue(action: AsyncAction): Promise<void> {\n    // In case something errors, the callback still should be called in order\n    // to keep the promise chain alive\n    this.operations = this.operations.then(action, action);\n    return this.operations;\n  }\n\n  private get assertedPersistence(): PersistenceUserManager {\n    _assert(this.persistenceManager, this, AuthErrorCode.INTERNAL_ERROR);\n    return this.persistenceManager;\n  }\n\n  private frameworks: string[] = [];\n  private clientVersion: string;\n  _logFramework(framework: string): void {\n    if (!framework || this.frameworks.includes(framework)) {\n      return;\n    }\n    this.frameworks.push(framework);\n\n    // Sort alphabetically so that \"FirebaseCore-web,FirebaseUI-web\" and\n    // \"FirebaseUI-web,FirebaseCore-web\" aren't viewed as different.\n    this.frameworks.sort();\n    this.clientVersion = _getClientVersion(\n      this.config.clientPlatform,\n      this._getFrameworks()\n    );\n  }\n  _getFrameworks(): readonly string[] {\n    return this.frameworks;\n  }\n  async _getAdditionalHeaders(): Promise<Record<string, string>> {\n    // Additional headers on every request\n    const headers: Record<string, string> = {\n      [HttpHeader.X_CLIENT_VERSION]: this.clientVersion\n    };\n\n    if (this.app.options.appId) {\n      headers[HttpHeader.X_FIREBASE_GMPID] = this.app.options.appId;\n    }\n\n    // If the heartbeat service exists, add the heartbeat string\n    const heartbeatsHeader = await this.heartbeatServiceProvider\n      .getImmediate({\n        optional: true\n      })\n      ?.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers[HttpHeader.X_FIREBASE_CLIENT] = heartbeatsHeader;\n    }\n    return headers;\n  }\n}\n\n/**\n * Method to be used to cast down to our private implmentation of Auth.\n * It will also handle unwrapping from the compat type if necessary\n *\n * @param auth Auth object passed in from developer\n */\nexport function _castAuth(auth: Auth): AuthInternal {\n  return getModularInstance(auth) as AuthInternal;\n}\n\n/** Helper class to wrap subscriber logic */\nclass Subscription<T> {\n  private observer: Observer<T | null> | null = null;\n  readonly addObserver: Subscribe<T | null> = createSubscribe(\n    observer => (this.observer = observer)\n  );\n\n  constructor(readonly auth: AuthInternal) {}\n\n  get next(): NextFn<T | null> {\n    _assert(this.observer, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return this.observer.next.bind(this.observer);\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Auth } from '../../model/public_types';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _castAuth } from './auth_impl';\n\n/**\n * Changes the {@link Auth} instance to communicate with the Firebase Auth Emulator, instead of production\n * Firebase Auth services.\n *\n * @remarks\n * This must be called synchronously immediately following the first call to\n * {@link initializeAuth}.  Do not use with production credentials as emulator\n * traffic is not encrypted.\n *\n *\n * @example\n * ```javascript\n * connectAuthEmulator(auth, 'http://127.0.0.1:9099', { disableWarnings: true });\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param url - The URL at which the emulator is running (eg, 'http://localhost:9099').\n * @param options - Optional. `options.disableWarnings` defaults to `false`. Set it to\n * `true` to disable the warning banner attached to the DOM.\n *\n * @public\n */\nexport function connectAuthEmulator(\n  auth: Auth,\n  url: string,\n  options?: { disableWarnings: boolean }\n): void {\n  const authInternal = _castAuth(auth);\n  _assert(\n    authInternal._canInitEmulator,\n    authInternal,\n    AuthErrorCode.EMULATOR_CONFIG_FAILED\n  );\n\n  _assert(\n    /^https?:\\/\\//.test(url),\n    authInternal,\n    AuthErrorCode.INVALID_EMULATOR_SCHEME\n  );\n\n  const disableWarnings = !!options?.disableWarnings;\n\n  const protocol = extractProtocol(url);\n  const { host, port } = extractHostAndPort(url);\n  const portStr = port === null ? '' : `:${port}`;\n\n  // Always replace path with \"/\" (even if input url had no path at all, or had a different one).\n  authInternal.config.emulator = { url: `${protocol}//${host}${portStr}/` };\n  authInternal.settings.appVerificationDisabledForTesting = true;\n  authInternal.emulatorConfig = Object.freeze({\n    host,\n    port,\n    protocol: protocol.replace(':', ''),\n    options: Object.freeze({ disableWarnings })\n  });\n\n  if (!disableWarnings) {\n    emitEmulatorWarning();\n  }\n}\n\nfunction extractProtocol(url: string): string {\n  const protocolEnd = url.indexOf(':');\n  return protocolEnd < 0 ? '' : url.substr(0, protocolEnd + 1);\n}\n\nfunction extractHostAndPort(url: string): {\n  host: string;\n  port: number | null;\n} {\n  const protocol = extractProtocol(url);\n  const authority = /(\\/\\/)?([^?#/]+)/.exec(url.substr(protocol.length)); // Between // and /, ? or #.\n  if (!authority) {\n    return { host: '', port: null };\n  }\n  const hostAndPort = authority[2].split('@').pop() || ''; // Strip out \"username:password@\".\n  const bracketedIPv6 = /^(\\[[^\\]]+\\])(:|$)/.exec(hostAndPort);\n  if (bracketedIPv6) {\n    const host = bracketedIPv6[1];\n    return { host, port: parsePort(hostAndPort.substr(host.length + 1)) };\n  } else {\n    const [host, port] = hostAndPort.split(':');\n    return { host, port: parsePort(port) };\n  }\n}\n\nfunction parsePort(portStr: string): number | null {\n  if (!portStr) {\n    return null;\n  }\n  const port = Number(portStr);\n  if (isNaN(port)) {\n    return null;\n  }\n  return port;\n}\n\nfunction emitEmulatorWarning(): void {\n  function attachBanner(): void {\n    const el = document.createElement('p');\n    const sty = el.style;\n    el.innerText =\n      'Running in emulator mode. Do not use with production credentials.';\n    sty.position = 'fixed';\n    sty.width = '100%';\n    sty.backgroundColor = '#ffffff';\n    sty.border = '.1em solid #000000';\n    sty.color = '#b50000';\n    sty.bottom = '0px';\n    sty.left = '0px';\n    sty.margin = '0px';\n    sty.zIndex = '10000';\n    sty.textAlign = 'center';\n    el.classList.add('firebase-emulator-warning');\n    document.body.appendChild(el);\n  }\n\n  if (typeof console !== 'undefined' && typeof console.info === 'function') {\n    console.info(\n      'WARNING: You are using the Auth Emulator,' +\n        ' which is intended for local testing only.  Do not use with' +\n        ' production credentials.'\n    );\n  }\n  if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n    if (document.readyState === 'loading') {\n      window.addEventListener('DOMContentLoaded', attachBanner);\n    } else {\n      attachBanner();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { debugFail } from '../util/assert';\n\n/**\n * Interface that represents the credentials returned by an {@link AuthProvider}.\n *\n * @remarks\n * Implementations specify the details about each auth provider's credential requirements.\n *\n * @public\n */\nexport class AuthCredential {\n  /** @internal */\n  protected constructor(\n    /**\n     * The authentication provider ID for the credential.\n     *\n     * @remarks\n     * For example, 'facebook.com', or 'google.com'.\n     */\n    readonly providerId: string,\n    /**\n     * The authentication sign in method for the credential.\n     *\n     * @remarks\n     * For example, {@link SignInMethod}.EMAIL_PASSWORD, or\n     * {@link SignInMethod}.EMAIL_LINK. This corresponds to the sign-in method\n     * identifier as returned in {@link fetchSignInMethodsForEmail}.\n     */\n    readonly signInMethod: string\n  ) {}\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   *\n   * @returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object {\n    return debugFail('not implemented');\n  }\n\n  /** @internal */\n  _getIdTokenResponse(_auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return debugFail('not implemented');\n  }\n  /** @internal */\n  _linkToIdToken(\n    _auth: AuthInternal,\n    _idToken: string\n  ): Promise<IdTokenResponse> {\n    return debugFail('not implemented');\n  }\n  /** @internal */\n  _getReauthenticationResolver(_auth: AuthInternal): Promise<IdTokenResponse> {\n    return debugFail('not implemented');\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeOperation, Auth } from '../../model/public_types';\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { MfaEnrollment } from './mfa';\n\nexport interface ResetPasswordRequest {\n  oobCode: string;\n  newPassword?: string;\n  tenantId?: string;\n}\n\nexport interface ResetPasswordResponse {\n  email: string;\n  newEmail?: string;\n  requestType?: ActionCodeOperation;\n  mfaInfo?: MfaEnrollment;\n}\n\nexport async function resetPassword(\n  auth: Auth,\n  request: ResetPasswordRequest\n): Promise<ResetPasswordResponse> {\n  return _performApiRequest<ResetPasswordRequest, ResetPasswordResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.RESET_PASSWORD,\n    _addTidIfNecessary(auth, request)\n  );\n}\nexport interface UpdateEmailPasswordRequest {\n  idToken: string;\n  returnSecureToken?: boolean;\n  email?: string;\n  password?: string;\n}\n\nexport interface UpdateEmailPasswordResponse extends IdTokenResponse {}\n\nexport async function updateEmailPassword(\n  auth: Auth,\n  request: UpdateEmailPasswordRequest\n): Promise<UpdateEmailPasswordResponse> {\n  return _performApiRequest<\n    UpdateEmailPasswordRequest,\n    UpdateEmailPasswordResponse\n  >(auth, HttpMethod.POST, Endpoint.SET_ACCOUNT_INFO, request);\n}\n\nexport interface ApplyActionCodeRequest {\n  oobCode: string;\n  tenantId?: string;\n}\n\nexport interface ApplyActionCodeResponse {}\n\nexport async function applyActionCode(\n  auth: Auth,\n  request: ApplyActionCodeRequest\n): Promise<ApplyActionCodeResponse> {\n  return _performApiRequest<ApplyActionCodeRequest, ApplyActionCodeResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SET_ACCOUNT_INFO,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeOperation, Auth } from '../../model/public_types';\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest,\n  _performSignInRequest\n} from '../index';\nimport { IdToken, IdTokenResponse } from '../../model/id_token';\n\nexport interface SignInWithPasswordRequest {\n  returnSecureToken?: boolean;\n  email: string;\n  password: string;\n  tenantId?: string;\n}\n\nexport interface SignInWithPasswordResponse extends IdTokenResponse {\n  email: string;\n  displayName: string;\n}\n\nexport async function signInWithPassword(\n  auth: Auth,\n  request: SignInWithPasswordRequest\n): Promise<SignInWithPasswordResponse> {\n  return _performSignInRequest<\n    SignInWithPasswordRequest,\n    SignInWithPasswordResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PASSWORD,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface GetOobCodeRequest {\n  email?: string; // Everything except VERIFY_AND_CHANGE_EMAIL\n  continueUrl?: string;\n  iOSBundleId?: string;\n  iosAppStoreId?: string;\n  androidPackageName?: string;\n  androidInstallApp?: boolean;\n  androidMinimumVersionCode?: string;\n  canHandleCodeInApp?: boolean;\n  dynamicLinkDomain?: string;\n  tenantId?: string;\n  targetProjectid?: string;\n}\n\nexport interface VerifyEmailRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.VERIFY_EMAIL;\n  idToken: IdToken;\n}\n\nexport interface PasswordResetRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.PASSWORD_RESET;\n  email: string;\n  captchaResp?: string;\n}\n\nexport interface EmailSignInRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.EMAIL_SIGNIN;\n  email: string;\n}\n\nexport interface VerifyAndChangeEmailRequest extends GetOobCodeRequest {\n  requestType: ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL;\n  idToken: IdToken;\n  newEmail: string;\n}\n\ninterface GetOobCodeResponse {\n  email: string;\n}\n\nexport interface VerifyEmailResponse extends GetOobCodeResponse {}\nexport interface PasswordResetResponse extends GetOobCodeResponse {}\nexport interface EmailSignInResponse extends GetOobCodeResponse {}\nexport interface VerifyAndChangeEmailResponse extends GetOobCodeRequest {}\n\nasync function sendOobCode(\n  auth: Auth,\n  request: GetOobCodeRequest\n): Promise<GetOobCodeResponse> {\n  return _performApiRequest<GetOobCodeRequest, GetOobCodeResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SEND_OOB_CODE,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport async function sendEmailVerification(\n  auth: Auth,\n  request: VerifyEmailRequest\n): Promise<VerifyEmailResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function sendPasswordResetEmail(\n  auth: Auth,\n  request: PasswordResetRequest\n): Promise<PasswordResetResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function sendSignInLinkToEmail(\n  auth: Auth,\n  request: EmailSignInRequest\n): Promise<EmailSignInResponse> {\n  return sendOobCode(auth, request);\n}\n\nexport async function verifyAndChangeEmail(\n  auth: Auth,\n  request: VerifyAndChangeEmailRequest\n): Promise<VerifyAndChangeEmailResponse> {\n  return sendOobCode(auth, request);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performSignInRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithEmailLinkRequest {\n  email: string;\n  oobCode: string;\n  tenantId?: string;\n}\n\nexport interface SignInWithEmailLinkResponse extends IdTokenResponse {\n  email: string;\n  isNewUser: boolean;\n}\n\nexport async function signInWithEmailLink(\n  auth: Auth,\n  request: SignInWithEmailLinkRequest\n): Promise<SignInWithEmailLinkResponse> {\n  return _performSignInRequest<\n    SignInWithEmailLinkRequest,\n    SignInWithEmailLinkResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_EMAIL_LINK,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface SignInWithEmailLinkForLinkingRequest\n  extends SignInWithEmailLinkRequest {\n  idToken: string;\n}\n\nexport async function signInWithEmailLinkForLinking(\n  auth: Auth,\n  request: SignInWithEmailLinkForLinkingRequest\n): Promise<SignInWithEmailLinkResponse> {\n  return _performSignInRequest<\n    SignInWithEmailLinkForLinkingRequest,\n    SignInWithEmailLinkResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_EMAIL_LINK,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\nimport { updateEmailPassword } from '../../api/account_management/email_and_password';\nimport { signInWithPassword } from '../../api/authentication/email_and_password';\nimport {\n  signInWithEmailLink,\n  signInWithEmailLinkForLinking\n} from '../../api/authentication/email_link';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from '../util/assert';\nimport { AuthCredential } from './auth_credential';\n\n/**\n * Interface that represents the credentials returned by {@link EmailAuthProvider} for\n * {@link ProviderId}.PASSWORD\n *\n * @remarks\n * Covers both {@link SignInMethod}.EMAIL_PASSWORD and\n * {@link SignInMethod}.EMAIL_LINK.\n *\n * @public\n */\nexport class EmailAuthCredential extends AuthCredential {\n  /** @internal */\n  private constructor(\n    /** @internal */\n    readonly _email: string,\n    /** @internal */\n    readonly _password: string,\n    signInMethod: SignInMethod,\n    /** @internal */\n    readonly _tenantId: string | null = null\n  ) {\n    super(ProviderId.PASSWORD, signInMethod);\n  }\n\n  /** @internal */\n  static _fromEmailAndPassword(\n    email: string,\n    password: string\n  ): EmailAuthCredential {\n    return new EmailAuthCredential(\n      email,\n      password,\n      SignInMethod.EMAIL_PASSWORD\n    );\n  }\n\n  /** @internal */\n  static _fromEmailAndCode(\n    email: string,\n    oobCode: string,\n    tenantId: string | null = null\n  ): EmailAuthCredential {\n    return new EmailAuthCredential(\n      email,\n      oobCode,\n      SignInMethod.EMAIL_LINK,\n      tenantId\n    );\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON} */\n  toJSON(): object {\n    return {\n      email: this._email,\n      password: this._password,\n      signInMethod: this.signInMethod,\n      tenantId: this._tenantId\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an {@link  AuthCredential}.\n   *\n   * @param json - Either `object` or the stringified representation of the object. When string is\n   * provided, `JSON.parse` would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link AuthCredential}, null is returned.\n   */\n  static fromJSON(json: object | string): EmailAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    if (obj?.email && obj?.password) {\n      if (obj.signInMethod === SignInMethod.EMAIL_PASSWORD) {\n        return this._fromEmailAndPassword(obj.email, obj.password);\n      } else if (obj.signInMethod === SignInMethod.EMAIL_LINK) {\n        return this._fromEmailAndCode(obj.email, obj.password, obj.tenantId);\n      }\n    }\n    return null;\n  }\n\n  /** @internal */\n  async _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    switch (this.signInMethod) {\n      case SignInMethod.EMAIL_PASSWORD:\n        return signInWithPassword(auth, {\n          returnSecureToken: true,\n          email: this._email,\n          password: this._password\n        });\n      case SignInMethod.EMAIL_LINK:\n        return signInWithEmailLink(auth, {\n          email: this._email,\n          oobCode: this._password\n        });\n      default:\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  /** @internal */\n  async _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    switch (this.signInMethod) {\n      case SignInMethod.EMAIL_PASSWORD:\n        return updateEmailPassword(auth, {\n          idToken,\n          returnSecureToken: true,\n          email: this._email,\n          password: this._password\n        });\n      case SignInMethod.EMAIL_LINK:\n        return signInWithEmailLinkForLinking(auth, {\n          idToken,\n          email: this._email,\n          oobCode: this._password\n        });\n      default:\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return this._getIdTokenResponse(auth);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdToken, IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithIdpRequest {\n  requestUri: string;\n  postBody?: string;\n  sessionId?: string;\n  tenantId?: string;\n  returnSecureToken: boolean;\n  returnIdpCredential?: boolean;\n  idToken?: IdToken;\n  autoCreate?: boolean;\n  pendingToken?: string;\n}\n\n/**\n * @internal\n */\nexport interface SignInWithIdpResponse extends IdTokenResponse {\n  oauthAccessToken?: string;\n  oauthTokenSecret?: string;\n  nonce?: string;\n  oauthIdToken?: string;\n  pendingToken?: string;\n}\n\nexport async function signInWithIdp(\n  auth: Auth,\n  request: SignInWithIdpRequest\n): Promise<SignInWithIdpResponse> {\n  return _performSignInRequest<SignInWithIdpRequest, SignInWithIdpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_IDP,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystring } from '@firebase/util';\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from '../util/assert';\nimport { AuthCredential } from './auth_credential';\n\nconst IDP_REQUEST_URI = 'http://localhost';\n\nexport interface OAuthCredentialParams {\n  // OAuth 2 uses either id token or access token\n  idToken?: string | null;\n  accessToken?: string | null;\n\n  // These fields are used with OAuth 1\n  oauthToken?: string;\n  secret?: string;\n  oauthTokenSecret?: string;\n\n  // Nonce is only set if pendingToken is not present\n  nonce?: string;\n  pendingToken?: string;\n\n  // Utilities\n  providerId: string;\n  signInMethod: string;\n}\n\n/**\n * Represents the OAuth credentials returned by an {@link OAuthProvider}.\n *\n * @remarks\n * Implementations specify the details about each auth provider's credential requirements.\n *\n * @public\n */\nexport class OAuthCredential extends AuthCredential {\n  /**\n   * The OAuth ID token associated with the credential if it belongs to an OIDC provider,\n   * such as `google.com`.\n   * @readonly\n   */\n  idToken?: string;\n  /**\n   * The OAuth access token associated with the credential if it belongs to an\n   * {@link OAuthProvider}, such as `facebook.com`, `twitter.com`, etc.\n   * @readonly\n   */\n  accessToken?: string;\n  /**\n   * The OAuth access token secret associated with the credential if it belongs to an OAuth 1.0\n   * provider, such as `twitter.com`.\n   * @readonly\n   */\n  secret?: string;\n\n  private nonce?: string;\n  private pendingToken: string | null = null;\n\n  /** @internal */\n  static _fromParams(params: OAuthCredentialParams): OAuthCredential {\n    const cred = new OAuthCredential(params.providerId, params.signInMethod);\n\n    if (params.idToken || params.accessToken) {\n      // OAuth 2 and either ID token or access token.\n      if (params.idToken) {\n        cred.idToken = params.idToken;\n      }\n\n      if (params.accessToken) {\n        cred.accessToken = params.accessToken;\n      }\n\n      // Add nonce if available and no pendingToken is present.\n      if (params.nonce && !params.pendingToken) {\n        cred.nonce = params.nonce;\n      }\n\n      if (params.pendingToken) {\n        cred.pendingToken = params.pendingToken;\n      }\n    } else if (params.oauthToken && params.oauthTokenSecret) {\n      // OAuth 1 and OAuth token with token secret\n      cred.accessToken = params.oauthToken;\n      cred.secret = params.oauthTokenSecret;\n    } else {\n      _fail(AuthErrorCode.ARGUMENT_ERROR);\n    }\n\n    return cred;\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON}  */\n  toJSON(): object {\n    return {\n      idToken: this.idToken,\n      accessToken: this.accessToken,\n      secret: this.secret,\n      nonce: this.nonce,\n      pendingToken: this.pendingToken,\n      providerId: this.providerId,\n      signInMethod: this.signInMethod\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an\n   * {@link  AuthCredential}.\n   *\n   * @param json - Input can be either Object or the stringified representation of the object.\n   * When string is provided, JSON.parse would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\n   */\n  static fromJSON(json: string | object): OAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    const { providerId, signInMethod, ...rest }: OAuthCredentialParams = obj;\n    if (!providerId || !signInMethod) {\n      return null;\n    }\n\n    const cred = new OAuthCredential(providerId, signInMethod);\n    cred.idToken = rest.idToken || undefined;\n    cred.accessToken = rest.accessToken || undefined;\n    cred.secret = rest.secret;\n    cred.nonce = rest.nonce;\n    cred.pendingToken = rest.pendingToken || null;\n    return cred;\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.idToken = idToken;\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.autoCreate = false;\n    return signInWithIdp(auth, request);\n  }\n\n  private buildRequest(): SignInWithIdpRequest {\n    const request: SignInWithIdpRequest = {\n      requestUri: IDP_REQUEST_URI,\n      returnSecureToken: true\n    };\n\n    if (this.pendingToken) {\n      request.pendingToken = this.pendingToken;\n    } else {\n      const postBody: Record<string, string> = {};\n      if (this.idToken) {\n        postBody['id_token'] = this.idToken;\n      }\n      if (this.accessToken) {\n        postBody['access_token'] = this.accessToken;\n      }\n      if (this.secret) {\n        postBody['oauth_token_secret'] = this.secret;\n      }\n\n      postBody['providerId'] = this.providerId;\n      if (this.nonce && !this.pendingToken) {\n        postBody['nonce'] = this.nonce;\n      }\n\n      request.postBody = querystring(postBody);\n    }\n\n    return request;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _makeTaggedError,\n  _performApiRequest,\n  _performSignInRequest\n} from '../index';\nimport { AuthErrorCode } from '../../core/errors';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { ServerError, ServerErrorMap } from '../errors';\nimport { Auth } from '../../model/public_types';\n\nexport interface SendPhoneVerificationCodeRequest {\n  phoneNumber: string;\n  recaptchaToken: string;\n  tenantId?: string;\n}\n\nexport interface SendPhoneVerificationCodeResponse {\n  sessionInfo: string;\n}\n\nexport async function sendPhoneVerificationCode(\n  auth: Auth,\n  request: SendPhoneVerificationCodeRequest\n): Promise<SendPhoneVerificationCodeResponse> {\n  return _performApiRequest<\n    SendPhoneVerificationCodeRequest,\n    SendPhoneVerificationCodeResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SEND_VERIFICATION_CODE,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\n/**\n * @internal\n */\nexport interface SignInWithPhoneNumberRequest {\n  temporaryProof?: string;\n  phoneNumber?: string;\n  sessionInfo?: string;\n  code?: string;\n  tenantId?: string;\n}\n\nexport interface LinkWithPhoneNumberRequest\n  extends SignInWithPhoneNumberRequest {\n  idToken: string;\n}\n\n/**\n * @internal\n */\nexport interface SignInWithPhoneNumberResponse extends IdTokenResponse {\n  temporaryProof?: string;\n  phoneNumber?: string;\n}\n\nexport async function signInWithPhoneNumber(\n  auth: Auth,\n  request: SignInWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  return _performSignInRequest<\n    SignInWithPhoneNumberRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport async function linkWithPhoneNumber(\n  auth: Auth,\n  request: LinkWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  const response = await _performSignInRequest<\n    LinkWithPhoneNumberRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, request)\n  );\n  if (response.temporaryProof) {\n    throw _makeTaggedError(auth, AuthErrorCode.NEED_CONFIRMATION, response);\n  }\n  return response;\n}\n\ninterface VerifyPhoneNumberForExistingRequest\n  extends SignInWithPhoneNumberRequest {\n  operation: 'REAUTH';\n}\n\nconst VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_: Partial<\n  ServerErrorMap<ServerError>\n> = {\n  [ServerError.USER_NOT_FOUND]: AuthErrorCode.USER_DELETED\n};\n\nexport async function verifyPhoneNumberForExisting(\n  auth: Auth,\n  request: SignInWithPhoneNumberRequest\n): Promise<SignInWithPhoneNumberResponse> {\n  const apiRequest: VerifyPhoneNumberForExistingRequest = {\n    ...request,\n    operation: 'REAUTH'\n  };\n  return _performSignInRequest<\n    VerifyPhoneNumberForExistingRequest,\n    SignInWithPhoneNumberResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_PHONE_NUMBER,\n    _addTidIfNecessary(auth, apiRequest),\n    VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport {\n  linkWithPhoneNumber,\n  signInWithPhoneNumber,\n  SignInWithPhoneNumberRequest,\n  verifyPhoneNumberForExisting\n} from '../../api/authentication/sms';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthCredential } from './auth_credential';\n\nexport interface PhoneAuthCredentialParameters {\n  verificationId?: string;\n  verificationCode?: string;\n  phoneNumber?: string;\n  temporaryProof?: string;\n}\n\n/**\n * Represents the credentials returned by {@link PhoneAuthProvider}.\n *\n * @public\n */\nexport class PhoneAuthCredential extends AuthCredential {\n  private constructor(private readonly params: PhoneAuthCredentialParameters) {\n    super(ProviderId.PHONE, SignInMethod.PHONE);\n  }\n\n  /** @internal */\n  static _fromVerification(\n    verificationId: string,\n    verificationCode: string\n  ): PhoneAuthCredential {\n    return new PhoneAuthCredential({ verificationId, verificationCode });\n  }\n\n  /** @internal */\n  static _fromTokenResponse(\n    phoneNumber: string,\n    temporaryProof: string\n  ): PhoneAuthCredential {\n    return new PhoneAuthCredential({ phoneNumber, temporaryProof });\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return signInWithPhoneNumber(auth, this._makeVerificationRequest());\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    return linkWithPhoneNumber(auth, {\n      idToken,\n      ...this._makeVerificationRequest()\n    });\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return verifyPhoneNumberForExisting(auth, this._makeVerificationRequest());\n  }\n\n  /** @internal */\n  _makeVerificationRequest(): SignInWithPhoneNumberRequest {\n    const { temporaryProof, phoneNumber, verificationId, verificationCode } =\n      this.params;\n    if (temporaryProof && phoneNumber) {\n      return { temporaryProof, phoneNumber };\n    }\n\n    return {\n      sessionInfo: verificationId,\n      code: verificationCode\n    };\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON} */\n  toJSON(): object {\n    const obj: Record<string, string> = {\n      providerId: this.providerId\n    };\n    if (this.params.phoneNumber) {\n      obj.phoneNumber = this.params.phoneNumber;\n    }\n    if (this.params.temporaryProof) {\n      obj.temporaryProof = this.params.temporaryProof;\n    }\n    if (this.params.verificationCode) {\n      obj.verificationCode = this.params.verificationCode;\n    }\n    if (this.params.verificationId) {\n      obj.verificationId = this.params.verificationId;\n    }\n\n    return obj;\n  }\n\n  /** Generates a phone credential based on a plain object or a JSON string. */\n  static fromJSON(json: object | string): PhoneAuthCredential | null {\n    if (typeof json === 'string') {\n      json = JSON.parse(json);\n    }\n\n    const { verificationId, verificationCode, phoneNumber, temporaryProof } =\n      json as { [key: string]: string };\n    if (\n      !verificationCode &&\n      !verificationId &&\n      !phoneNumber &&\n      !temporaryProof\n    ) {\n      return null;\n    }\n\n    return new PhoneAuthCredential({\n      verificationId,\n      verificationCode,\n      phoneNumber,\n      temporaryProof\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { extractQuerystring, querystringDecode } from '@firebase/util';\nimport { ActionCodeOperation } from '../model/public_types';\nimport { AuthErrorCode } from './errors';\nimport { _assert } from './util/assert';\n\n/**\n * Enums for fields in URL query string.\n *\n * @enum {string}\n */\nconst enum QueryField {\n  API_KEY = 'apiKey',\n  CODE = 'oobCode',\n  CONTINUE_URL = 'continueUrl',\n  LANGUAGE_CODE = 'languageCode',\n  MODE = 'mode',\n  TENANT_ID = 'tenantId'\n}\n\n/**\n * Maps the mode string in action code URL to Action Code Info operation.\n *\n * @param mode\n */\nfunction parseMode(mode: string | null): ActionCodeOperation | null {\n  switch (mode) {\n    case 'recoverEmail':\n      return ActionCodeOperation.RECOVER_EMAIL;\n    case 'resetPassword':\n      return ActionCodeOperation.PASSWORD_RESET;\n    case 'signIn':\n      return ActionCodeOperation.EMAIL_SIGNIN;\n    case 'verifyEmail':\n      return ActionCodeOperation.VERIFY_EMAIL;\n    case 'verifyAndChangeEmail':\n      return ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL;\n    case 'revertSecondFactorAddition':\n      return ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION;\n    default:\n      return null;\n  }\n}\n\n/**\n * Helper to parse FDL links\n *\n * @param url\n */\nfunction parseDeepLink(url: string): string {\n  const link = querystringDecode(extractQuerystring(url))['link'];\n\n  // Double link case (automatic redirect).\n  const doubleDeepLink = link\n    ? querystringDecode(extractQuerystring(link))['deep_link_id']\n    : null;\n  // iOS custom scheme links.\n  const iOSDeepLink = querystringDecode(extractQuerystring(url))[\n    'deep_link_id'\n  ];\n  const iOSDoubleDeepLink = iOSDeepLink\n    ? querystringDecode(extractQuerystring(iOSDeepLink))['link']\n    : null;\n  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n}\n\n/**\n * A utility class to parse email action URLs such as password reset, email verification,\n * email link sign in, etc.\n *\n * @public\n */\nexport class ActionCodeURL {\n  /**\n   * The API key of the email action link.\n   */\n  readonly apiKey: string;\n  /**\n   * The action code of the email action link.\n   */\n  readonly code: string;\n  /**\n   * The continue URL of the email action link. Null if not provided.\n   */\n  readonly continueUrl: string | null;\n  /**\n   * The language code of the email action link. Null if not provided.\n   */\n  readonly languageCode: string | null;\n  /**\n   * The action performed by the email action link. It returns from one of the types from\n   * {@link ActionCodeInfo}\n   */\n  readonly operation: string;\n  /**\n   * The tenant ID of the email action link. Null if the email action is from the parent project.\n   */\n  readonly tenantId: string | null;\n\n  /**\n   * @param actionLink - The link from which to extract the URL.\n   * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\n   *\n   * @internal\n   */\n  constructor(actionLink: string) {\n    const searchParams = querystringDecode(extractQuerystring(actionLink));\n    const apiKey = searchParams[QueryField.API_KEY] ?? null;\n    const code = searchParams[QueryField.CODE] ?? null;\n    const operation = parseMode(searchParams[QueryField.MODE] ?? null);\n    // Validate API key, code and mode.\n    _assert(apiKey && code && operation, AuthErrorCode.ARGUMENT_ERROR);\n    this.apiKey = apiKey;\n    this.operation = operation;\n    this.code = code;\n    this.continueUrl = searchParams[QueryField.CONTINUE_URL] ?? null;\n    this.languageCode = searchParams[QueryField.LANGUAGE_CODE] ?? null;\n    this.tenantId = searchParams[QueryField.TENANT_ID] ?? null;\n  }\n\n  /**\n   * Parses the email action link string and returns an {@link ActionCodeURL} if the link is valid,\n   * otherwise returns null.\n   *\n   * @param link  - The email action link string.\n   * @returns The {@link ActionCodeURL} object, or null if the link is invalid.\n   *\n   * @public\n   */\n  static parseLink(link: string): ActionCodeURL | null {\n    const actionLink = parseDeepLink(link);\n    try {\n      return new ActionCodeURL(actionLink);\n    } catch {\n      return null;\n    }\n  }\n}\n\n/**\n * Parses the email action link string and returns an {@link ActionCodeURL} if\n * the link is valid, otherwise returns null.\n *\n * @public\n */\nexport function parseActionCodeURL(link: string): ActionCodeURL | null {\n  return ActionCodeURL.parseLink(link);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProviderId, SignInMethod } from '../../model/enums';\nimport { AuthProvider } from '../../model/public_types';\n\nimport { ActionCodeURL } from '../action_code_url';\nimport { EmailAuthCredential } from '../credentials/email';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\n\n/**\n * Provider for generating {@link EmailAuthCredential}.\n *\n * @public\n */\nexport class EmailAuthProvider implements AuthProvider {\n  /**\n   * Always set to {@link ProviderId}.PASSWORD, even for email link.\n   */\n  static readonly PROVIDER_ID: 'password' = ProviderId.PASSWORD;\n  /**\n   * Always set to {@link SignInMethod}.EMAIL_PASSWORD.\n   */\n  static readonly EMAIL_PASSWORD_SIGN_IN_METHOD: 'password' =\n    SignInMethod.EMAIL_PASSWORD;\n  /**\n   * Always set to {@link SignInMethod}.EMAIL_LINK.\n   */\n  static readonly EMAIL_LINK_SIGN_IN_METHOD: 'emailLink' =\n    SignInMethod.EMAIL_LINK;\n  /**\n   * Always set to {@link ProviderId}.PASSWORD, even for email link.\n   */\n  readonly providerId = EmailAuthProvider.PROVIDER_ID;\n\n  /**\n   * Initialize an {@link AuthCredential} using an email and password.\n   *\n   * @example\n   * ```javascript\n   * const authCredential = EmailAuthProvider.credential(email, password);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * ```javascript\n   * const userCredential = await signInWithEmailAndPassword(auth, email, password);\n   * ```\n   *\n   * @param email - Email address.\n   * @param password - User account password.\n   * @returns The auth provider credential.\n   */\n  static credential(email: string, password: string): EmailAuthCredential {\n    return EmailAuthCredential._fromEmailAndPassword(email, password);\n  }\n\n  /**\n   * Initialize an {@link AuthCredential} using an email and an email link after a sign in with\n   * email link operation.\n   *\n   * @example\n   * ```javascript\n   * const authCredential = EmailAuthProvider.credentialWithLink(auth, email, emailLink);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * ```javascript\n   * await sendSignInLinkToEmail(auth, email);\n   * // Obtain emailLink from user.\n   * const userCredential = await signInWithEmailLink(auth, email, emailLink);\n   * ```\n   *\n   * @param auth - The {@link Auth} instance used to verify the link.\n   * @param email - Email address.\n   * @param emailLink - Sign-in email link.\n   * @returns - The auth provider credential.\n   */\n  static credentialWithLink(\n    email: string,\n    emailLink: string\n  ): EmailAuthCredential {\n    const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\n    _assert(actionCodeUrl, AuthErrorCode.ARGUMENT_ERROR);\n\n    return EmailAuthCredential._fromEmailAndCode(\n      email,\n      actionCodeUrl.code,\n      actionCodeUrl.tenantId\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider } from '../../model/public_types';\n\n/**\n * Map of OAuth Custom Parameters.\n *\n * @public\n */\nexport type CustomParameters = Record<string, string>;\n\n/**\n * The base class for all Federated providers (OAuth (including OIDC), SAML).\n *\n * This class is not meant to be instantiated directly.\n *\n * @public\n */\nexport abstract class FederatedAuthProvider implements AuthProvider {\n  /** @internal */\n  defaultLanguageCode: string | null = null;\n  /** @internal */\n  private customParameters: CustomParameters = {};\n\n  /**\n   * Constructor for generic OAuth providers.\n   *\n   * @param providerId - Provider for which credentials should be generated.\n   */\n  constructor(readonly providerId: string) {}\n\n  /**\n   * Set the language gode.\n   *\n   * @param languageCode - language code\n   */\n  setDefaultLanguage(languageCode: string | null): void {\n    this.defaultLanguageCode = languageCode;\n  }\n\n  /**\n   * Sets the OAuth custom parameters to pass in an OAuth request for popup and redirect sign-in\n   * operations.\n   *\n   * @remarks\n   * For a detailed list, check the reserved required OAuth 2.0 parameters such as `client_id`,\n   * `redirect_uri`, `scope`, `response_type`, and `state` are not allowed and will be ignored.\n   *\n   * @param customOAuthParameters - The custom OAuth parameters to pass in the OAuth request.\n   */\n  setCustomParameters(customOAuthParameters: CustomParameters): AuthProvider {\n    this.customParameters = customOAuthParameters;\n    return this;\n  }\n\n  /**\n   * Retrieve the current list of {@link CustomParameters}.\n   */\n  getCustomParameters(): CustomParameters {\n    return this.customParameters;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, UserCredential } from '../../model/public_types';\n\nimport { _assert } from '../util/assert';\nimport { AuthErrorCode } from '../errors';\n\nimport { OAuthCredential, OAuthCredentialParams } from '../credentials/oauth';\nimport { UserCredentialInternal } from '../../model/user';\nimport { FirebaseError } from '@firebase/util';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { SignInWithIdpResponse } from '../../../internal';\nimport { FederatedAuthProvider } from './federated';\n\n/**\n * Defines the options for initializing an {@link OAuthCredential}.\n *\n * @remarks\n * For ID tokens with nonce claim, the raw nonce has to also be provided.\n *\n * @public\n */\nexport interface OAuthCredentialOptions {\n  /**\n   * The OAuth ID token used to initialize the {@link OAuthCredential}.\n   */\n  idToken?: string;\n  /**\n   * The OAuth access token used to initialize the {@link OAuthCredential}.\n   */\n  accessToken?: string;\n  /**\n   * The raw nonce associated with the ID token.\n   *\n   * @remarks\n   * It is required when an ID token with a nonce field is provided. The SHA-256 hash of the\n   * raw nonce must match the nonce field in the ID token.\n   */\n  rawNonce?: string;\n}\n\n/**\n * Common code to all OAuth providers. This is separate from the\n * {@link OAuthProvider} so that child providers (like\n * {@link GoogleAuthProvider}) don't inherit the `credential` instance method.\n * Instead, they rely on a static `credential` method.\n */\nexport abstract class BaseOAuthProvider\n  extends FederatedAuthProvider\n  implements AuthProvider\n{\n  /** @internal */\n  private scopes: string[] = [];\n\n  /**\n   * Add an OAuth scope to the credential.\n   *\n   * @param scope - Provider OAuth scope to add.\n   */\n  addScope(scope: string): AuthProvider {\n    // If not already added, add scope to list.\n    if (!this.scopes.includes(scope)) {\n      this.scopes.push(scope);\n    }\n    return this;\n  }\n\n  /**\n   * Retrieve the current list of OAuth scopes.\n   */\n  getScopes(): string[] {\n    return [...this.scopes];\n  }\n}\n\n/**\n * Provider for generating generic {@link OAuthCredential}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new OAuthProvider('google.com');\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('profile');\n * provider.addScope('email');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a OAuth Access Token for the provider.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new OAuthProvider('google.com');\n * provider.addScope('profile');\n * provider.addScope('email');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a OAuth Access Token for the provider.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n * @public\n */\nexport class OAuthProvider extends BaseOAuthProvider {\n  /**\n   * Creates an {@link OAuthCredential} from a JSON string or a plain object.\n   * @param json - A plain object or a JSON string\n   */\n  static credentialFromJSON(json: object | string): OAuthCredential {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    _assert(\n      'providerId' in obj && 'signInMethod' in obj,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    return OAuthCredential._fromParams(obj);\n  }\n\n  /**\n   * Creates a {@link OAuthCredential} from a generic OAuth provider's access token or ID token.\n   *\n   * @remarks\n   * The raw nonce is required when an ID token with a nonce field is provided. The SHA-256 hash of\n   * the raw nonce must match the nonce field in the ID token.\n   *\n   * @example\n   * ```javascript\n   * // `googleUser` from the onsuccess Google Sign In callback.\n   * // Initialize a generate OAuth provider with a `google.com` providerId.\n   * const provider = new OAuthProvider('google.com');\n   * const credential = provider.credential({\n   *   idToken: googleUser.getAuthResponse().id_token,\n   * });\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param params - Either the options object containing the ID token, access token and raw nonce\n   * or the ID token string.\n   */\n  credential(params: OAuthCredentialOptions): OAuthCredential {\n    return this._credential({ ...params, nonce: params.rawNonce });\n  }\n\n  /** An internal credential method that accepts more permissive options */\n  private _credential(\n    params: Omit<OAuthCredentialParams, 'signInMethod' | 'providerId'>\n  ): OAuthCredential {\n    _assert(params.idToken || params.accessToken, AuthErrorCode.ARGUMENT_ERROR);\n    // For OAuthCredential, sign in method is same as providerId.\n    return OAuthCredential._fromParams({\n      ...params,\n      providerId: this.providerId,\n      signInMethod: this.providerId\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return OAuthProvider.oauthCredentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return OAuthProvider.oauthCredentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static oauthCredentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const {\n      oauthIdToken,\n      oauthAccessToken,\n      oauthTokenSecret,\n      pendingToken,\n      nonce,\n      providerId\n    } = tokenResponse as SignInWithIdpResponse;\n    if (\n      !oauthAccessToken &&\n      !oauthTokenSecret &&\n      !oauthIdToken &&\n      !pendingToken\n    ) {\n      return null;\n    }\n\n    if (!providerId) {\n      return null;\n    }\n\n    try {\n      return new OAuthProvider(providerId)._credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        nonce,\n        pendingToken\n      });\n    } catch (e) {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.FACEBOOK.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('user_birthday');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = FacebookAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * provider.addScope('user_birthday');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Facebook Access Token.\n * const credential = FacebookAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n *\n * @public\n */\nexport class FacebookAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.FACEBOOK. */\n  static readonly FACEBOOK_SIGN_IN_METHOD: 'facebook.com' =\n    SignInMethod.FACEBOOK;\n  /** Always set to {@link ProviderId}.FACEBOOK. */\n  static readonly PROVIDER_ID: 'facebook.com' = ProviderId.FACEBOOK;\n\n  constructor() {\n    super(ProviderId.FACEBOOK);\n  }\n\n  /**\n   * Creates a credential for Facebook.\n   *\n   * @example\n   * ```javascript\n   * // `event` from the Facebook auth.authResponseChange callback.\n   * const credential = FacebookAuthProvider.credential(event.authResponse.accessToken);\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param accessToken - Facebook access token.\n   */\n  static credential(accessToken: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: FacebookAuthProvider.PROVIDER_ID,\n      signInMethod: FacebookAuthProvider.FACEBOOK_SIGN_IN_METHOD,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return FacebookAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return FacebookAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n      return null;\n    }\n\n    if (!tokenResponse.oauthAccessToken) {\n      return null;\n    }\n\n    try {\n      return FacebookAuthProvider.credential(tokenResponse.oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an an {@link OAuthCredential} for {@link ProviderId}.GOOGLE.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new GoogleAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('profile');\n * provider.addScope('email');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Google Access Token.\n *   const credential = GoogleAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new GoogleAuthProvider();\n * provider.addScope('profile');\n * provider.addScope('email');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Google Access Token.\n * const credential = GoogleAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n *\n * @public\n */\nexport class GoogleAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.GOOGLE. */\n  static readonly GOOGLE_SIGN_IN_METHOD: 'google.com' = SignInMethod.GOOGLE;\n  /** Always set to {@link ProviderId}.GOOGLE. */\n  static readonly PROVIDER_ID: 'google.com' = ProviderId.GOOGLE;\n\n  constructor() {\n    super(ProviderId.GOOGLE);\n    this.addScope('profile');\n  }\n\n  /**\n   * Creates a credential for Google. At least one of ID token and access token is required.\n   *\n   * @example\n   * ```javascript\n   * // \\`googleUser\\` from the onsuccess Google Sign In callback.\n   * const credential = GoogleAuthProvider.credential(googleUser.getAuthResponse().id_token);\n   * const result = await signInWithCredential(credential);\n   * ```\n   *\n   * @param idToken - Google ID token.\n   * @param accessToken - Google access token.\n   */\n  static credential(\n    idToken?: string | null,\n    accessToken?: string | null\n  ): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: GoogleAuthProvider.PROVIDER_ID,\n      signInMethod: GoogleAuthProvider.GOOGLE_SIGN_IN_METHOD,\n      idToken,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return GoogleAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return GoogleAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const { oauthIdToken, oauthAccessToken } =\n      tokenResponse as SignInWithIdpResponse;\n    if (!oauthIdToken && !oauthAccessToken) {\n      // This could be an oauth 1 credential or a phone credential\n      return null;\n    }\n\n    try {\n      return GoogleAuthProvider.credential(oauthIdToken, oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.GITHUB.\n *\n * @remarks\n * GitHub requires an OAuth 2.0 redirect, so you can either handle the redirect directly, or use\n * the {@link signInWithPopup} handler:\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new GithubAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * provider.addScope('repo');\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Github Access Token.\n *   const credential = GithubAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new GithubAuthProvider();\n * provider.addScope('repo');\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Github Access Token.\n * const credential = GithubAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * ```\n * @public\n */\nexport class GithubAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.GITHUB. */\n  static readonly GITHUB_SIGN_IN_METHOD: 'github.com' = SignInMethod.GITHUB;\n  /** Always set to {@link ProviderId}.GITHUB. */\n  static readonly PROVIDER_ID: 'github.com' = ProviderId.GITHUB;\n\n  constructor() {\n    super(ProviderId.GITHUB);\n  }\n\n  /**\n   * Creates a credential for Github.\n   *\n   * @param accessToken - Github access token.\n   */\n  static credential(accessToken: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: GithubAuthProvider.PROVIDER_ID,\n      signInMethod: GithubAuthProvider.GITHUB_SIGN_IN_METHOD,\n      accessToken\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return GithubAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return GithubAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse || !('oauthAccessToken' in tokenResponse)) {\n      return null;\n    }\n\n    if (!tokenResponse.oauthAccessToken) {\n      return null;\n    }\n\n    try {\n      return GithubAuthProvider.credential(tokenResponse.oauthAccessToken);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents the SAML credentials returned by an {@link SAMLAuthProvider}.\n *\n * @public\n */\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { AuthCredential } from './auth_credential';\n\nconst IDP_REQUEST_URI = 'http://localhost';\n\n/**\n * @public\n */\nexport class SAMLAuthCredential extends AuthCredential {\n  /** @internal */\n  private constructor(\n    providerId: string,\n    private readonly pendingToken: string\n  ) {\n    super(providerId, providerId);\n  }\n\n  /** @internal */\n  _getIdTokenResponse(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.idToken = idToken;\n    return signInWithIdp(auth, request);\n  }\n\n  /** @internal */\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    const request = this.buildRequest();\n    request.autoCreate = false;\n    return signInWithIdp(auth, request);\n  }\n\n  /** {@inheritdoc AuthCredential.toJSON}  */\n  toJSON(): object {\n    return {\n      signInMethod: this.signInMethod,\n      providerId: this.providerId,\n      pendingToken: this.pendingToken\n    };\n  }\n\n  /**\n   * Static method to deserialize a JSON representation of an object into an\n   * {@link  AuthCredential}.\n   *\n   * @param json - Input can be either Object or the stringified representation of the object.\n   * When string is provided, JSON.parse would be called first.\n   *\n   * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.\n   */\n  static fromJSON(json: string | object): SAMLAuthCredential | null {\n    const obj = typeof json === 'string' ? JSON.parse(json) : json;\n    const { providerId, signInMethod, pendingToken }: Record<string, string> =\n      obj;\n    if (\n      !providerId ||\n      !signInMethod ||\n      !pendingToken ||\n      providerId !== signInMethod\n    ) {\n      return null;\n    }\n\n    return new SAMLAuthCredential(providerId, pendingToken);\n  }\n\n  /**\n   * Helper static method to avoid exposing the constructor to end users.\n   *\n   * @internal\n   */\n  static _create(providerId: string, pendingToken: string): SAMLAuthCredential {\n    return new SAMLAuthCredential(providerId, pendingToken);\n  }\n\n  private buildRequest(): SignInWithIdpRequest {\n    return {\n      requestUri: IDP_REQUEST_URI,\n      returnSecureToken: true,\n      pendingToken: this.pendingToken\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredential } from '../../model/public_types';\nimport { UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { SAMLAuthCredential } from '../credentials/saml';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { FederatedAuthProvider } from './federated';\n\nconst SAML_PROVIDER_PREFIX = 'saml.';\n\n/**\n * An {@link AuthProvider} for SAML.\n *\n * @public\n */\nexport class SAMLAuthProvider extends FederatedAuthProvider {\n  /**\n   * Constructor. The providerId must start with \"saml.\"\n   * @param providerId - SAML provider ID.\n   */\n  constructor(providerId: string) {\n    _assert(\n      providerId.startsWith(SAML_PROVIDER_PREFIX),\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    super(providerId);\n  }\n\n  /**\n   * Generates an {@link AuthCredential} from a {@link UserCredential} after a\n   * successful SAML flow completes.\n   *\n   * @remarks\n   *\n   * For example, to get an {@link AuthCredential}, you could write the\n   * following code:\n   *\n   * ```js\n   * const userCredential = await signInWithPopup(auth, samlProvider);\n   * const credential = SAMLAuthProvider.credentialFromResult(userCredential);\n   * ```\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): AuthCredential | null {\n    return SAMLAuthProvider.samlCredentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): AuthCredential | null {\n    return SAMLAuthProvider.samlCredentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  /**\n   * Creates an {@link AuthCredential} from a JSON string or a plain object.\n   * @param json - A plain object or a JSON string\n   */\n  static credentialFromJSON(json: string | object): AuthCredential {\n    const credential = SAMLAuthCredential.fromJSON(json);\n    _assert(credential, AuthErrorCode.ARGUMENT_ERROR);\n    return credential;\n  }\n\n  private static samlCredentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): SAMLAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n\n    const { pendingToken, providerId } = tokenResponse as SignInWithIdpResponse;\n\n    if (!pendingToken || !providerId) {\n      return null;\n    }\n\n    try {\n      return SAMLAuthCredential._create(providerId, pendingToken);\n    } catch (e) {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright 2020 Twitter LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential } from '../../model/public_types';\nimport { FirebaseError } from '@firebase/util';\n\nimport { SignInWithIdpResponse } from '../../api/authentication/idp';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { UserCredentialInternal } from '../../model/user';\nimport { OAuthCredential } from '../credentials/oauth';\nimport { BaseOAuthProvider } from './oauth';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.TWITTER.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new TwitterAuthProvider();\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Twitter Access Token and Secret.\n *   const credential = TwitterAuthProvider.credentialFromResult(result);\n *   const token = credential.accessToken;\n *   const secret = credential.secret;\n * }\n * ```\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new TwitterAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Twitter Access Token and Secret.\n * const credential = TwitterAuthProvider.credentialFromResult(result);\n * const token = credential.accessToken;\n * const secret = credential.secret;\n * ```\n *\n * @public\n */\nexport class TwitterAuthProvider extends BaseOAuthProvider {\n  /** Always set to {@link SignInMethod}.TWITTER. */\n  static readonly TWITTER_SIGN_IN_METHOD: 'twitter.com' = SignInMethod.TWITTER;\n  /** Always set to {@link ProviderId}.TWITTER. */\n  static readonly PROVIDER_ID: 'twitter.com' = ProviderId.TWITTER;\n\n  constructor() {\n    super(ProviderId.TWITTER);\n  }\n\n  /**\n   * Creates a credential for Twitter.\n   *\n   * @param token - Twitter access token.\n   * @param secret - Twitter secret.\n   */\n  static credential(token: string, secret: string): OAuthCredential {\n    return OAuthCredential._fromParams({\n      providerId: TwitterAuthProvider.PROVIDER_ID,\n      signInMethod: TwitterAuthProvider.TWITTER_SIGN_IN_METHOD,\n      oauthToken: token,\n      oauthTokenSecret: secret\n    });\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): OAuthCredential | null {\n    return TwitterAuthProvider.credentialFromTaggedObject(\n      userCredential as UserCredentialInternal\n    );\n  }\n\n  /**\n   * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was\n   * thrown during a sign-in, link, or reauthenticate operation.\n   *\n   * @param userCredential - The user credential.\n   */\n  static credentialFromError(error: FirebaseError): OAuthCredential | null {\n    return TwitterAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): OAuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n    const { oauthAccessToken, oauthTokenSecret } =\n      tokenResponse as SignInWithIdpResponse;\n    if (!oauthAccessToken || !oauthTokenSecret) {\n      return null;\n    }\n\n    try {\n      return TwitterAuthProvider.credential(oauthAccessToken, oauthTokenSecret);\n    } catch {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignUpRequest {\n  returnSecureToken?: boolean;\n  email?: string;\n  password?: string;\n  tenantId?: string;\n}\n\nexport interface SignUpResponse extends IdTokenResponse {\n  displayName?: string;\n  email?: string;\n}\n\nexport async function signUp(\n  auth: Auth,\n  request: SignUpRequest\n): Promise<SignUpResponse> {\n  return _performSignInRequest<SignUpRequest, SignUpResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_UP,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { UserImpl } from './user_impl';\nimport { AuthInternal } from '../../model/auth';\nimport { OperationType, ProviderId } from '../../model/enums';\n\ninterface UserCredentialParams {\n  readonly user: UserInternal;\n  readonly providerId: ProviderId | string | null;\n  readonly _tokenResponse?: PhoneOrOauthTokenResponse;\n  readonly operationType: OperationType;\n}\n\nexport class UserCredentialImpl\n  implements UserCredentialInternal, UserCredentialParams\n{\n  readonly user: UserInternal;\n  readonly providerId: ProviderId | string | null;\n  readonly _tokenResponse: PhoneOrOauthTokenResponse | undefined;\n  readonly operationType: OperationType;\n\n  constructor(params: UserCredentialParams) {\n    this.user = params.user;\n    this.providerId = params.providerId;\n    this._tokenResponse = params._tokenResponse;\n    this.operationType = params.operationType;\n  }\n\n  static async _fromIdTokenResponse(\n    auth: AuthInternal,\n    operationType: OperationType,\n    idTokenResponse: IdTokenResponse,\n    isAnonymous: boolean = false\n  ): Promise<UserCredentialInternal> {\n    const user = await UserImpl._fromIdTokenResponse(\n      auth,\n      idTokenResponse,\n      isAnonymous\n    );\n    const providerId = providerIdForResponse(idTokenResponse);\n    const userCred = new UserCredentialImpl({\n      user,\n      providerId,\n      _tokenResponse: idTokenResponse,\n      operationType\n    });\n    return userCred;\n  }\n\n  static async _forOperation(\n    user: UserInternal,\n    operationType: OperationType,\n    response: PhoneOrOauthTokenResponse\n  ): Promise<UserCredentialImpl> {\n    await user._updateTokensIfNecessary(response, /* reload */ true);\n    const providerId = providerIdForResponse(response);\n    return new UserCredentialImpl({\n      user,\n      providerId,\n      _tokenResponse: response,\n      operationType\n    });\n  }\n}\n\nfunction providerIdForResponse(\n  response: IdTokenResponse\n): ProviderId | string | null {\n  if (response.providerId) {\n    return response.providerId;\n  }\n\n  if ('phoneNumber' in response) {\n    return ProviderId.PHONE;\n  }\n\n  return null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MultiFactorError as MultiFactorErrorPublic } from '../model/public_types';\nimport { FirebaseError } from '@firebase/util';\nimport { AuthInternal } from '../model/auth';\nimport { IdTokenResponse } from '../model/id_token';\nimport { AuthErrorCode } from '../core/errors';\nimport { UserInternal } from '../model/user';\nimport { AuthCredential } from '../core/credentials';\nimport { IdTokenMfaResponse } from '../api/authentication/mfa';\nimport { OperationType } from '../model/enums';\n\nexport type MultiFactorErrorData = MultiFactorErrorPublic['customData'] & {\n  _serverResponse: IdTokenMfaResponse;\n};\n\nexport class MultiFactorError\n  extends FirebaseError\n  implements MultiFactorErrorPublic\n{\n  readonly customData: MultiFactorErrorData;\n\n  private constructor(\n    auth: AuthInternal,\n    error: FirebaseError,\n    readonly operationType: OperationType,\n    readonly user?: UserInternal\n  ) {\n    super(error.code, error.message);\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, MultiFactorError.prototype);\n    this.customData = {\n      appName: auth.name,\n      tenantId: auth.tenantId ?? undefined,\n      _serverResponse: error.customData!._serverResponse as IdTokenMfaResponse,\n      operationType\n    };\n  }\n\n  static _fromErrorAndOperation(\n    auth: AuthInternal,\n    error: FirebaseError,\n    operationType: OperationType,\n    user?: UserInternal\n  ): MultiFactorError {\n    return new MultiFactorError(auth, error, operationType, user);\n  }\n}\n\nexport function _processCredentialSavingMfaContextIfNecessary(\n  auth: AuthInternal,\n  operationType: OperationType,\n  credential: AuthCredential,\n  user?: UserInternal\n): Promise<IdTokenResponse> {\n  const idTokenProvider =\n    operationType === OperationType.REAUTHENTICATE\n      ? credential._getReauthenticationResolver(auth)\n      : credential._getIdTokenResponse(auth);\n\n  return idTokenProvider.catch(error => {\n    if (error.code === `auth/${AuthErrorCode.MFA_REQUIRED}`) {\n      throw MultiFactorError._fromErrorAndOperation(\n        auth,\n        error,\n        operationType,\n        user\n      );\n    }\n\n    throw error;\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, UserCredential } from '../../model/public_types';\nimport { signUp } from '../../api/authentication/sign_up';\nimport { UserInternal } from '../../model/user';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\nimport { OperationType } from '../../model/enums';\n\n/**\n * Asynchronously signs in as an anonymous user.\n *\n * @remarks\n * If there is already an anonymous user signed in, that user will be returned; otherwise, a\n * new anonymous user identity will be created and returned.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport async function signInAnonymously(auth: Auth): Promise<UserCredential> {\n  const authInternal = _castAuth(auth);\n  await authInternal._initializationPromise;\n  if (authInternal.currentUser?.isAnonymous) {\n    // If an anonymous user is already signed in, no need to sign them in again.\n    return new UserCredentialImpl({\n      user: authInternal.currentUser as UserInternal,\n      providerId: null,\n      operationType: OperationType.SIGN_IN\n    });\n  }\n  const response = await signUp(authInternal, {\n    returnSecureToken: true\n  });\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    authInternal,\n    OperationType.SIGN_IN,\n    response,\n    true\n  );\n  await authInternal._updateCurrentUser(userCredential.user);\n  return userCredential;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface ProviderAssociatedObject {\n  providerId?: string;\n}\n\n/**\n * Takes a set of UserInfo provider data and converts it to a set of names\n */\nexport function providerDataAsNames<T extends ProviderAssociatedObject>(\n  providerData: T[]\n): Set<string> {\n  return new Set(\n    providerData\n      .map(({ providerId }) => providerId)\n      .filter(pid => !!pid) as string[]\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../../model/public_types';\n\nimport { deleteLinkedAccounts } from '../../api/account_management/account';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { providerDataAsNames } from '../util/providers';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { _reloadWithoutSaving } from './reload';\nimport { UserCredentialImpl } from './user_credential_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType, ProviderId } from '../../model/enums';\n\n/**\n * Unlinks a provider from a user account.\n *\n * @param user - The user.\n * @param providerId - The provider to unlink.\n *\n * @public\n */\nexport async function unlink(user: User, providerId: string): Promise<User> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  await _assertLinkedStatus(true, userInternal, providerId);\n  const { providerUserInfo } = await deleteLinkedAccounts(userInternal.auth, {\n    idToken: await userInternal.getIdToken(),\n    deleteProvider: [providerId]\n  });\n\n  const providersLeft = providerDataAsNames(providerUserInfo || []);\n\n  userInternal.providerData = userInternal.providerData.filter(pd =>\n    providersLeft.has(pd.providerId)\n  );\n  if (!providersLeft.has(ProviderId.PHONE)) {\n    userInternal.phoneNumber = null;\n  }\n\n  await userInternal.auth._persistUserIfCurrent(userInternal);\n  return userInternal;\n}\n\nexport async function _link(\n  user: UserInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredentialInternal> {\n  const response = await _logoutIfInvalidated(\n    user,\n    credential._linkToIdToken(user.auth, await user.getIdToken()),\n    bypassAuthState\n  );\n  return UserCredentialImpl._forOperation(user, OperationType.LINK, response);\n}\n\nexport async function _assertLinkedStatus(\n  expected: boolean,\n  user: UserInternal,\n  provider: string\n): Promise<void> {\n  await _reloadWithoutSaving(user);\n  const providerIds = providerDataAsNames(user.providerData);\n\n  const code =\n    expected === false\n      ? AuthErrorCode.PROVIDER_ALREADY_LINKED\n      : AuthErrorCode.NO_SUCH_PROVIDER;\n  _assert(providerIds.has(provider) === expected, user.auth, code);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { _processCredentialSavingMfaContextIfNecessary } from '../../mfa/mfa_error';\nimport { OperationType } from '../../model/enums';\nimport { UserInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { AuthErrorCode } from '../errors';\nimport { _assert, _fail } from '../util/assert';\nimport { _parseToken } from './id_token_result';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { UserCredentialImpl } from './user_credential_impl';\n\nexport async function _reauthenticate(\n  user: UserInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredentialImpl> {\n  const { auth } = user;\n  const operationType = OperationType.REAUTHENTICATE;\n\n  try {\n    const response = await _logoutIfInvalidated(\n      user,\n      _processCredentialSavingMfaContextIfNecessary(\n        auth,\n        operationType,\n        credential,\n        user\n      ),\n      bypassAuthState\n    );\n    _assert(response.idToken, auth, AuthErrorCode.INTERNAL_ERROR);\n    const parsed = _parseToken(response.idToken);\n    _assert(parsed, auth, AuthErrorCode.INTERNAL_ERROR);\n\n    const { sub: localId } = parsed;\n    _assert(user.uid === localId, auth, AuthErrorCode.USER_MISMATCH);\n\n    return UserCredentialImpl._forOperation(user, operationType, response);\n  } catch (e) {\n    // Convert user deleted error into user mismatch\n    if ((e as FirebaseError)?.code === `auth/${AuthErrorCode.USER_DELETED}`) {\n      _fail(auth, AuthErrorCode.USER_MISMATCH);\n    }\n    throw e;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserCredential, Auth, User } from '../../model/public_types';\n\nimport { _processCredentialSavingMfaContextIfNecessary } from '../../mfa/mfa_error';\nimport { AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { _assertLinkedStatus, _link } from '../user/link_unlink';\nimport { _reauthenticate } from '../user/reauthenticate';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType } from '../../model/enums';\n\nexport async function _signInWithCredential(\n  auth: AuthInternal,\n  credential: AuthCredential,\n  bypassAuthState = false\n): Promise<UserCredential> {\n  const operationType = OperationType.SIGN_IN;\n  const response = await _processCredentialSavingMfaContextIfNecessary(\n    auth,\n    operationType,\n    credential\n  );\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    auth,\n    operationType,\n    response\n  );\n\n  if (!bypassAuthState) {\n    await auth._updateCurrentUser(userCredential.user);\n  }\n  return userCredential;\n}\n\n/**\n * Asynchronously signs in with the given credentials.\n *\n * @remarks\n * An {@link AuthProvider} can be used to generate the credential.\n *\n * @param auth - The {@link Auth} instance.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function signInWithCredential(\n  auth: Auth,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  return _signInWithCredential(_castAuth(auth), credential);\n}\n\n/**\n * Links the user account with the given credentials.\n *\n * @remarks\n * An {@link AuthProvider} can be used to generate the credential.\n *\n * @param user - The user.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function linkWithCredential(\n  user: User,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n\n  await _assertLinkedStatus(false, userInternal, credential.providerId);\n\n  return _link(userInternal, credential);\n}\n\n/**\n * Re-authenticates a user using a fresh credential.\n *\n * @remarks\n * Use before operations such as {@link updatePassword} that require tokens from recent sign-in\n * attempts. This method can be used to recover from a `CREDENTIAL_TOO_OLD_LOGIN_AGAIN` error.\n *\n * @param user - The user.\n * @param credential - The auth credential.\n *\n * @public\n */\nexport async function reauthenticateWithCredential(\n  user: User,\n  credential: AuthCredential\n): Promise<UserCredential> {\n  return _reauthenticate(getModularInstance(user) as UserInternal, credential);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performSignInRequest\n} from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface SignInWithCustomTokenRequest {\n  token: string;\n  returnSecureToken: boolean;\n  tenantId?: string;\n}\n\nexport interface SignInWithCustomTokenResponse extends IdTokenResponse {}\n\nexport async function signInWithCustomToken(\n  auth: Auth,\n  request: SignInWithCustomTokenRequest\n): Promise<SignInWithCustomTokenResponse> {\n  return _performSignInRequest<\n    SignInWithCustomTokenRequest,\n    SignInWithCustomTokenResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SIGN_IN_WITH_CUSTOM_TOKEN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, UserCredential } from '../../model/public_types';\n\nimport { signInWithCustomToken as getIdTokenResponse } from '../../api/authentication/custom_token';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _castAuth } from '../auth/auth_impl';\nimport { OperationType } from '../../model/enums';\n\n/**\n * Asynchronously signs in using a custom token.\n *\n * @remarks\n * Custom tokens are used to integrate Firebase Auth with existing auth systems, and must\n * be generated by an auth backend using the\n * {@link https://firebase.google.com/docs/reference/admin/node/admin.auth.Auth#createcustomtoken | createCustomToken}\n * method in the {@link https://firebase.google.com/docs/auth/admin | Admin SDK} .\n *\n * Fails with an error if the token is invalid, expired, or not accepted by the Firebase Auth service.\n *\n * @param auth - The {@link Auth} instance.\n * @param customToken - The custom token to sign in with.\n *\n * @public\n */\nexport async function signInWithCustomToken(\n  auth: Auth,\n  customToken: string\n): Promise<UserCredential> {\n  const authInternal = _castAuth(auth);\n  const response: IdTokenResponse = await getIdTokenResponse(authInternal, {\n    token: customToken,\n    returnSecureToken: true\n  });\n  const cred = await UserCredentialImpl._fromIdTokenResponse(\n    authInternal,\n    OperationType.SIGN_IN,\n    response\n  );\n  await authInternal._updateCurrentUser(cred.user);\n  return cred;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FactorId,\n  MultiFactorInfo,\n  PhoneMultiFactorInfo\n} from '../model/public_types';\nimport {\n  PhoneMfaEnrollment,\n  MfaEnrollment\n} from '../api/account_management/mfa';\nimport { AuthErrorCode } from '../core/errors';\nimport { _fail } from '../core/util/assert';\nimport { AuthInternal } from '../model/auth';\n\nexport abstract class MultiFactorInfoImpl implements MultiFactorInfo {\n  readonly uid: string;\n  readonly displayName?: string | null;\n  readonly enrollmentTime: string;\n\n  protected constructor(readonly factorId: FactorId, response: MfaEnrollment) {\n    this.uid = response.mfaEnrollmentId;\n    this.enrollmentTime = new Date(response.enrolledAt).toUTCString();\n    this.displayName = response.displayName;\n  }\n\n  static _fromServerResponse(\n    auth: AuthInternal,\n    enrollment: MfaEnrollment\n  ): MultiFactorInfoImpl {\n    if ('phoneInfo' in enrollment) {\n      return PhoneMultiFactorInfoImpl._fromServerResponse(auth, enrollment);\n    }\n    return _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n  }\n}\n\nexport class PhoneMultiFactorInfoImpl\n  extends MultiFactorInfoImpl\n  implements PhoneMultiFactorInfo\n{\n  readonly phoneNumber: string;\n\n  private constructor(response: PhoneMfaEnrollment) {\n    super(FactorId.PHONE, response);\n    this.phoneNumber = response.phoneInfo;\n  }\n\n  static _fromServerResponse(\n    _auth: AuthInternal,\n    enrollment: MfaEnrollment\n  ): PhoneMultiFactorInfoImpl {\n    return new PhoneMultiFactorInfoImpl(enrollment);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ActionCodeSettings, Auth } from '../../model/public_types';\n\nimport { GetOobCodeRequest } from '../../api/authentication/email_and_password';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\n\nexport function _setActionCodeSettingsOnRequest(\n  auth: Auth,\n  request: GetOobCodeRequest,\n  actionCodeSettings: ActionCodeSettings\n): void {\n  _assert(\n    actionCodeSettings.url?.length > 0,\n    auth,\n    AuthErrorCode.INVALID_CONTINUE_URI\n  );\n  _assert(\n    typeof actionCodeSettings.dynamicLinkDomain === 'undefined' ||\n      actionCodeSettings.dynamicLinkDomain.length > 0,\n    auth,\n    AuthErrorCode.INVALID_DYNAMIC_LINK_DOMAIN\n  );\n\n  request.continueUrl = actionCodeSettings.url;\n  request.dynamicLinkDomain = actionCodeSettings.dynamicLinkDomain;\n  request.canHandleCodeInApp = actionCodeSettings.handleCodeInApp;\n\n  if (actionCodeSettings.iOS) {\n    _assert(\n      actionCodeSettings.iOS.bundleId.length > 0,\n      auth,\n      AuthErrorCode.MISSING_IOS_BUNDLE_ID\n    );\n    request.iOSBundleId = actionCodeSettings.iOS.bundleId;\n  }\n\n  if (actionCodeSettings.android) {\n    _assert(\n      actionCodeSettings.android.packageName.length > 0,\n      auth,\n      AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME\n    );\n    request.androidInstallApp = actionCodeSettings.android.installApp;\n    request.androidMinimumVersionCode =\n      actionCodeSettings.android.minimumVersion;\n    request.androidPackageName = actionCodeSettings.android.packageName;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionCodeInfo,\n  ActionCodeOperation,\n  ActionCodeSettings,\n  Auth,\n  UserCredential\n} from '../../model/public_types';\n\nimport * as account from '../../api/account_management/email_and_password';\nimport * as authentication from '../../api/authentication/email_and_password';\nimport { signUp } from '../../api/authentication/sign_up';\nimport { MultiFactorInfoImpl } from '../../mfa/mfa_info';\nimport { EmailAuthProvider } from '../providers/email';\nimport { UserCredentialImpl } from '../user/user_credential_impl';\nimport { _assert } from '../util/assert';\nimport { _setActionCodeSettingsOnRequest } from './action_code_settings';\nimport { signInWithCredential } from './credential';\nimport { _castAuth } from '../auth/auth_impl';\nimport { AuthErrorCode } from '../errors';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType } from '../../model/enums';\n\n/**\n * Sends a password reset email to the given email address.\n *\n * @remarks\n * To complete the password reset, call {@link confirmPasswordReset} with the code supplied in\n * the email sent to the user, along with the new password specified by the user.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendPasswordResetEmail(auth, 'user@example.com', actionCodeSettings);\n * // Obtain code from user.\n * await confirmPasswordReset('user@example.com', code);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function sendPasswordResetEmail(\n  auth: Auth,\n  email: string,\n  actionCodeSettings?: ActionCodeSettings\n): Promise<void> {\n  const authModular = getModularInstance(auth);\n  const request: authentication.PasswordResetRequest = {\n    requestType: ActionCodeOperation.PASSWORD_RESET,\n    email\n  };\n  if (actionCodeSettings) {\n    _setActionCodeSettingsOnRequest(authModular, request, actionCodeSettings);\n  }\n\n  await authentication.sendPasswordResetEmail(authModular, request);\n}\n\n/**\n * Completes the password reset process, given a confirmation code and new password.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A confirmation code sent to the user.\n * @param newPassword - The new password.\n *\n * @public\n */\nexport async function confirmPasswordReset(\n  auth: Auth,\n  oobCode: string,\n  newPassword: string\n): Promise<void> {\n  await account.resetPassword(getModularInstance(auth), {\n    oobCode,\n    newPassword\n  });\n  // Do not return the email.\n}\n\n/**\n * Applies a verification code sent to the user by email or other out-of-band mechanism.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A verification code sent to the user.\n *\n * @public\n */\nexport async function applyActionCode(\n  auth: Auth,\n  oobCode: string\n): Promise<void> {\n  await account.applyActionCode(getModularInstance(auth), { oobCode });\n}\n\n/**\n * Checks a verification code sent to the user by email or other out-of-band mechanism.\n *\n * @returns metadata about the code.\n *\n * @param auth - The {@link Auth} instance.\n * @param oobCode - A verification code sent to the user.\n *\n * @public\n */\nexport async function checkActionCode(\n  auth: Auth,\n  oobCode: string\n): Promise<ActionCodeInfo> {\n  const authModular = getModularInstance(auth);\n  const response = await account.resetPassword(authModular, { oobCode });\n\n  // Email could be empty only if the request type is EMAIL_SIGNIN or\n  // VERIFY_AND_CHANGE_EMAIL.\n  // New email should not be empty if the request type is\n  // VERIFY_AND_CHANGE_EMAIL.\n  // Multi-factor info could not be empty if the request type is\n  // REVERT_SECOND_FACTOR_ADDITION.\n  const operation = response.requestType;\n  _assert(operation, authModular, AuthErrorCode.INTERNAL_ERROR);\n  switch (operation) {\n    case ActionCodeOperation.EMAIL_SIGNIN:\n      break;\n    case ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL:\n      _assert(response.newEmail, authModular, AuthErrorCode.INTERNAL_ERROR);\n      break;\n    case ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION:\n      _assert(response.mfaInfo, authModular, AuthErrorCode.INTERNAL_ERROR);\n    // fall through\n    default:\n      _assert(response.email, authModular, AuthErrorCode.INTERNAL_ERROR);\n  }\n\n  // The multi-factor info for revert second factor addition\n  let multiFactorInfo: MultiFactorInfoImpl | null = null;\n  if (response.mfaInfo) {\n    multiFactorInfo = MultiFactorInfoImpl._fromServerResponse(\n      _castAuth(authModular),\n      response.mfaInfo\n    );\n  }\n\n  return {\n    data: {\n      email:\n        (response.requestType === ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL\n          ? response.newEmail\n          : response.email) || null,\n      previousEmail:\n        (response.requestType === ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL\n          ? response.email\n          : response.newEmail) || null,\n      multiFactorInfo\n    },\n    operation\n  };\n}\n\n/**\n * Checks a password reset code sent to the user by email or other out-of-band mechanism.\n *\n * @returns the user's email address if valid.\n *\n * @param auth - The {@link Auth} instance.\n * @param code - A verification code sent to the user.\n *\n * @public\n */\nexport async function verifyPasswordResetCode(\n  auth: Auth,\n  code: string\n): Promise<string> {\n  const { data } = await checkActionCode(getModularInstance(auth), code);\n  // Email should always be present since a code was sent to it\n  return data.email!;\n}\n\n/**\n * Creates a new user account associated with the specified email address and password.\n *\n * @remarks\n * On successful creation of the user account, this user will also be signed in to your application.\n *\n * User account creation can fail if the account already exists or the password is invalid.\n *\n * Note: The email address acts as a unique identifier for the user and enables an email-based\n * password reset. This function will create a new user account and set the initial user password.\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param password - The user's chosen password.\n *\n * @public\n */\nexport async function createUserWithEmailAndPassword(\n  auth: Auth,\n  email: string,\n  password: string\n): Promise<UserCredential> {\n  const authInternal = _castAuth(auth);\n  const response = await signUp(authInternal, {\n    returnSecureToken: true,\n    email,\n    password\n  });\n\n  const userCredential = await UserCredentialImpl._fromIdTokenResponse(\n    authInternal,\n    OperationType.SIGN_IN,\n    response\n  );\n  await authInternal._updateCurrentUser(userCredential.user);\n\n  return userCredential;\n}\n\n/**\n * Asynchronously signs in using an email and password.\n *\n * @remarks\n * Fails with an error if the email address and password do not match.\n *\n * Note: The user's password is NOT the password used to access the user's email account. The\n * email address serves as a unique identifier for the user, and the password is used to access\n * the user's account in your Firebase project. See also: {@link createUserWithEmailAndPassword}.\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The users email address.\n * @param password - The users password.\n *\n * @public\n */\nexport function signInWithEmailAndPassword(\n  auth: Auth,\n  email: string,\n  password: string\n): Promise<UserCredential> {\n  return signInWithCredential(\n    getModularInstance(auth),\n    EmailAuthProvider.credential(email, password)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionCodeOperation,\n  ActionCodeSettings,\n  Auth,\n  UserCredential\n} from '../../model/public_types';\n\nimport * as api from '../../api/authentication/email_and_password';\nimport { ActionCodeURL } from '../action_code_url';\nimport { EmailAuthProvider } from '../providers/email';\nimport { _getCurrentUrl } from '../util/location';\nimport { _setActionCodeSettingsOnRequest } from './action_code_settings';\nimport { signInWithCredential } from './credential';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { getModularInstance } from '@firebase/util';\n\n/**\n * Sends a sign-in email link to the user with the specified email.\n *\n * @remarks\n * The sign-in operation has to always be completed in the app unlike other out of band email\n * actions (password reset and email verifications). This is because, at the end of the flow,\n * the user is expected to be signed in and their Auth state persisted within the app.\n *\n * To complete sign in with the email link, call {@link signInWithEmailLink} with the email\n * address and the email link supplied in the email sent to the user.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendSignInLinkToEmail(auth, 'user@example.com', actionCodeSettings);\n * // Obtain emailLink from the user.\n * if(isSignInWithEmailLink(auth, emailLink)) {\n *   await signInWithEmailLink(auth, 'user@example.com', emailLink);\n * }\n * ```\n *\n * @param authInternal - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function sendSignInLinkToEmail(\n  auth: Auth,\n  email: string,\n  actionCodeSettings: ActionCodeSettings\n): Promise<void> {\n  const authModular = getModularInstance(auth);\n  const request: api.EmailSignInRequest = {\n    requestType: ActionCodeOperation.EMAIL_SIGNIN,\n    email\n  };\n  _assert(\n    actionCodeSettings.handleCodeInApp,\n    authModular,\n    AuthErrorCode.ARGUMENT_ERROR\n  );\n  if (actionCodeSettings) {\n    _setActionCodeSettingsOnRequest(authModular, request, actionCodeSettings);\n  }\n\n  await api.sendSignInLinkToEmail(authModular, request);\n}\n\n/**\n * Checks if an incoming link is a sign-in with email link suitable for {@link signInWithEmailLink}.\n *\n * @param auth - The {@link Auth} instance.\n * @param emailLink - The link sent to the user's email address.\n *\n * @public\n */\nexport function isSignInWithEmailLink(auth: Auth, emailLink: string): boolean {\n  const actionCodeUrl = ActionCodeURL.parseLink(emailLink);\n  return actionCodeUrl?.operation === ActionCodeOperation.EMAIL_SIGNIN;\n}\n\n/**\n * Asynchronously signs in using an email and sign-in email link.\n *\n * @remarks\n * If no link is passed, the link is inferred from the current URL.\n *\n * Fails with an error if the email address is invalid or OTP in email link expires.\n *\n * Note: Confirm the link is a sign-in email link before calling this method firebase.auth.Auth.isSignInWithEmailLink.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendSignInLinkToEmail(auth, 'user@example.com', actionCodeSettings);\n * // Obtain emailLink from the user.\n * if(isSignInWithEmailLink(auth, emailLink)) {\n *   await signInWithEmailLink(auth, 'user@example.com', emailLink);\n * }\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n * @param emailLink - The link sent to the user's email address.\n *\n * @public\n */\nexport async function signInWithEmailLink(\n  auth: Auth,\n  email: string,\n  emailLink?: string\n): Promise<UserCredential> {\n  const authModular = getModularInstance(auth);\n  const credential = EmailAuthProvider.credentialWithLink(\n    email,\n    emailLink || _getCurrentUrl()\n  );\n  // Check if the tenant ID in the email link matches the tenant ID on Auth\n  // instance.\n  _assert(\n    credential._tenantId === (authModular.tenantId || null),\n    authModular,\n    AuthErrorCode.TENANT_ID_MISMATCH\n  );\n  return signInWithCredential(authModular, credential);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { Auth } from '../../model/public_types';\n\nexport interface CreateAuthUriRequest {\n  identifier: string;\n  continueUri: string;\n  tenantId?: string;\n}\n\nexport interface CreateAuthUriResponse {\n  signinMethods: string[];\n}\n\nexport async function createAuthUri(\n  auth: Auth,\n  request: CreateAuthUriRequest\n): Promise<CreateAuthUriResponse> {\n  return _performApiRequest<CreateAuthUriRequest, CreateAuthUriResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.CREATE_AUTH_URI,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionCodeOperation,\n  ActionCodeSettings,\n  Auth,\n  User\n} from '../../model/public_types';\n\nimport {\n  createAuthUri,\n  CreateAuthUriRequest\n} from '../../api/authentication/create_auth_uri';\nimport * as api from '../../api/authentication/email_and_password';\nimport { UserInternal } from '../../model/user';\nimport { _getCurrentUrl, _isHttpOrHttps } from '../util/location';\nimport { _setActionCodeSettingsOnRequest } from './action_code_settings';\nimport { getModularInstance } from '@firebase/util';\n\n/**\n * Gets the list of possible sign in methods for the given email address.\n *\n * @remarks\n * This is useful to differentiate methods of sign-in for the same provider, eg.\n * {@link EmailAuthProvider} which has 2 methods of sign-in,\n * {@link SignInMethod}.EMAIL_PASSWORD and\n * {@link SignInMethod}.EMAIL_LINK.\n *\n * @param auth - The {@link Auth} instance.\n * @param email - The user's email address.\n *\n * @public\n */\nexport async function fetchSignInMethodsForEmail(\n  auth: Auth,\n  email: string\n): Promise<string[]> {\n  // createAuthUri returns an error if continue URI is not http or https.\n  // For environments like Cordova, Chrome extensions, native frameworks, file\n  // systems, etc, use http://localhost as continue URL.\n  const continueUri = _isHttpOrHttps() ? _getCurrentUrl() : 'http://localhost';\n  const request: CreateAuthUriRequest = {\n    identifier: email,\n    continueUri\n  };\n\n  const { signinMethods } = await createAuthUri(\n    getModularInstance(auth),\n    request\n  );\n\n  return signinMethods || [];\n}\n\n/**\n * Sends a verification email to a user.\n *\n * @remarks\n * The verification process is completed by calling {@link applyActionCode}.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await sendEmailVerification(user, actionCodeSettings);\n * // Obtain code from the user.\n * await applyActionCode(auth, code);\n * ```\n *\n * @param user - The user.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function sendEmailVerification(\n  user: User,\n  actionCodeSettings?: ActionCodeSettings | null\n): Promise<void> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const idToken = await user.getIdToken();\n  const request: api.VerifyEmailRequest = {\n    requestType: ActionCodeOperation.VERIFY_EMAIL,\n    idToken\n  };\n  if (actionCodeSettings) {\n    _setActionCodeSettingsOnRequest(\n      userInternal.auth,\n      request,\n      actionCodeSettings\n    );\n  }\n\n  const { email } = await api.sendEmailVerification(userInternal.auth, request);\n\n  if (email !== user.email) {\n    await user.reload();\n  }\n}\n\n/**\n * Sends a verification email to a new email address.\n *\n * @remarks\n * The user's email will be updated to the new one after being verified.\n *\n * If you have a custom email action handler, you can complete the verification process by calling\n * {@link applyActionCode}.\n *\n * @example\n * ```javascript\n * const actionCodeSettings = {\n *   url: 'https://www.example.com/?email=user@example.com',\n *   iOS: {\n *      bundleId: 'com.example.ios'\n *   },\n *   android: {\n *     packageName: 'com.example.android',\n *     installApp: true,\n *     minimumVersion: '12'\n *   },\n *   handleCodeInApp: true\n * };\n * await verifyBeforeUpdateEmail(user, 'newemail@example.com', actionCodeSettings);\n * // Obtain code from the user.\n * await applyActionCode(auth, code);\n * ```\n *\n * @param user - The user.\n * @param newEmail - The new email address to be verified before update.\n * @param actionCodeSettings - The {@link ActionCodeSettings}.\n *\n * @public\n */\nexport async function verifyBeforeUpdateEmail(\n  user: User,\n  newEmail: string,\n  actionCodeSettings?: ActionCodeSettings | null\n): Promise<void> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const idToken = await user.getIdToken();\n  const request: api.VerifyAndChangeEmailRequest = {\n    requestType: ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\n    idToken,\n    newEmail\n  };\n  if (actionCodeSettings) {\n    _setActionCodeSettingsOnRequest(\n      userInternal.auth,\n      request,\n      actionCodeSettings\n    );\n  }\n\n  const { email } = await api.verifyAndChangeEmail(userInternal.auth, request);\n\n  if (email !== user.email) {\n    // If the local copy of the email on user is outdated, reload the\n    // user.\n    await user.reload();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Endpoint, HttpMethod, _performApiRequest } from '../index';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { Auth } from '../../model/public_types';\n\nexport interface UpdateProfileRequest {\n  idToken: string;\n  displayName?: string | null;\n  photoUrl?: string | null;\n  returnSecureToken: boolean;\n}\n\nexport interface UpdateProfileResponse extends IdTokenResponse {\n  displayName?: string | null;\n  photoUrl?: string | null;\n}\n\nexport async function updateProfile(\n  auth: Auth,\n  request: UpdateProfileRequest\n): Promise<UpdateProfileResponse> {\n  return _performApiRequest<UpdateProfileRequest, UpdateProfileResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.SET_ACCOUNT_INFO,\n    request\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../../model/public_types';\n\nimport {\n  updateEmailPassword as apiUpdateEmailPassword,\n  UpdateEmailPasswordRequest\n} from '../../api/account_management/email_and_password';\nimport { updateProfile as apiUpdateProfile } from '../../api/account_management/profile';\nimport { UserInternal } from '../../model/user';\nimport { _logoutIfInvalidated } from './invalidation';\nimport { getModularInstance } from '@firebase/util';\nimport { ProviderId } from '../../model/enums';\n\n/**\n * Updates a user's profile data.\n *\n * @param user - The user.\n * @param profile - The profile's `displayName` and `photoURL` to update.\n *\n * @public\n */\nexport async function updateProfile(\n  user: User,\n  {\n    displayName,\n    photoURL: photoUrl\n  }: { displayName?: string | null; photoURL?: string | null }\n): Promise<void> {\n  if (displayName === undefined && photoUrl === undefined) {\n    return;\n  }\n\n  const userInternal = getModularInstance(user) as UserInternal;\n  const idToken = await userInternal.getIdToken();\n  const profileRequest = {\n    idToken,\n    displayName,\n    photoUrl,\n    returnSecureToken: true\n  };\n  const response = await _logoutIfInvalidated(\n    userInternal,\n    apiUpdateProfile(userInternal.auth, profileRequest)\n  );\n\n  userInternal.displayName = response.displayName || null;\n  userInternal.photoURL = response.photoUrl || null;\n\n  // Update the password provider as well\n  const passwordProvider = userInternal.providerData.find(\n    ({ providerId }) => providerId === ProviderId.PASSWORD\n  );\n  if (passwordProvider) {\n    passwordProvider.displayName = userInternal.displayName;\n    passwordProvider.photoURL = userInternal.photoURL;\n  }\n\n  await userInternal._updateTokensIfNecessary(response);\n}\n\n/**\n * Updates the user's email address.\n *\n * @remarks\n * An email will be sent to the original email address (if it was set) that allows to revoke the\n * email address change, in order to protect them from account hijacking.\n *\n * Important: this is a security sensitive operation that requires the user to have recently signed\n * in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n * @param newEmail - The new email address.\n *\n * @public\n */\nexport function updateEmail(user: User, newEmail: string): Promise<void> {\n  return updateEmailOrPassword(\n    getModularInstance(user) as UserInternal,\n    newEmail,\n    null\n  );\n}\n\n/**\n * Updates the user's password.\n *\n * @remarks\n * Important: this is a security sensitive operation that requires the user to have recently signed\n * in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n * @param newPassword - The new password.\n *\n * @public\n */\nexport function updatePassword(user: User, newPassword: string): Promise<void> {\n  return updateEmailOrPassword(\n    getModularInstance(user) as UserInternal,\n    null,\n    newPassword\n  );\n}\n\nasync function updateEmailOrPassword(\n  user: UserInternal,\n  email: string | null,\n  password: string | null\n): Promise<void> {\n  const { auth } = user;\n  const idToken = await user.getIdToken();\n  const request: UpdateEmailPasswordRequest = {\n    idToken,\n    returnSecureToken: true\n  };\n\n  if (email) {\n    request.email = email;\n  }\n\n  if (password) {\n    request.password = password;\n  }\n\n  const response = await _logoutIfInvalidated(\n    user,\n    apiUpdateEmailPassword(auth, request)\n  );\n  await user._updateTokensIfNecessary(response, /* reload */ true);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AdditionalUserInfo, UserCredential } from '../../model/public_types';\nimport { IdTokenResponse, IdTokenResponseKind } from '../../model/id_token';\nimport { _parseToken } from './id_token_result';\nimport { UserCredentialInternal } from '../../model/user';\nimport { ProviderId } from '../../model/enums';\n\n/**\n * Parse the `AdditionalUserInfo` from the ID token response.\n *\n */\nexport function _fromIdTokenResponse(\n  idTokenResponse?: IdTokenResponse\n): AdditionalUserInfo | null {\n  if (!idTokenResponse) {\n    return null;\n  }\n  const { providerId } = idTokenResponse;\n  const profile = idTokenResponse.rawUserInfo\n    ? JSON.parse(idTokenResponse.rawUserInfo)\n    : {};\n  const isNewUser =\n    idTokenResponse.isNewUser ||\n    idTokenResponse.kind === IdTokenResponseKind.SignupNewUser;\n  if (!providerId && idTokenResponse?.idToken) {\n    const signInProvider = _parseToken(idTokenResponse.idToken)?.firebase?.[\n      'sign_in_provider'\n    ];\n    if (signInProvider) {\n      const filteredProviderId =\n        signInProvider !== ProviderId.ANONYMOUS &&\n        signInProvider !== ProviderId.CUSTOM\n          ? (signInProvider as ProviderId)\n          : null;\n      // Uses generic class in accordance with the legacy SDK.\n      return new GenericAdditionalUserInfo(isNewUser, filteredProviderId);\n    }\n  }\n  if (!providerId) {\n    return null;\n  }\n  switch (providerId) {\n    case ProviderId.FACEBOOK:\n      return new FacebookAdditionalUserInfo(isNewUser, profile);\n    case ProviderId.GITHUB:\n      return new GithubAdditionalUserInfo(isNewUser, profile);\n    case ProviderId.GOOGLE:\n      return new GoogleAdditionalUserInfo(isNewUser, profile);\n    case ProviderId.TWITTER:\n      return new TwitterAdditionalUserInfo(\n        isNewUser,\n        profile,\n        idTokenResponse.screenName || null\n      );\n    case ProviderId.CUSTOM:\n    case ProviderId.ANONYMOUS:\n      return new GenericAdditionalUserInfo(isNewUser, null);\n    default:\n      return new GenericAdditionalUserInfo(isNewUser, providerId, profile);\n  }\n}\n\nclass GenericAdditionalUserInfo implements AdditionalUserInfo {\n  constructor(\n    readonly isNewUser: boolean,\n    readonly providerId: ProviderId | string | null,\n    readonly profile: Record<string, unknown> = {}\n  ) {}\n}\n\nclass FederatedAdditionalUserInfoWithUsername extends GenericAdditionalUserInfo {\n  constructor(\n    isNewUser: boolean,\n    providerId: ProviderId,\n    profile: Record<string, unknown>,\n    readonly username: string | null\n  ) {\n    super(isNewUser, providerId, profile);\n  }\n}\n\nclass FacebookAdditionalUserInfo extends GenericAdditionalUserInfo {\n  constructor(isNewUser: boolean, profile: Record<string, unknown>) {\n    super(isNewUser, ProviderId.FACEBOOK, profile);\n  }\n}\n\nclass GithubAdditionalUserInfo extends FederatedAdditionalUserInfoWithUsername {\n  constructor(isNewUser: boolean, profile: Record<string, unknown>) {\n    super(\n      isNewUser,\n      ProviderId.GITHUB,\n      profile,\n      typeof profile?.login === 'string' ? profile?.login : null\n    );\n  }\n}\n\nclass GoogleAdditionalUserInfo extends GenericAdditionalUserInfo {\n  constructor(isNewUser: boolean, profile: Record<string, unknown>) {\n    super(isNewUser, ProviderId.GOOGLE, profile);\n  }\n}\n\nclass TwitterAdditionalUserInfo extends FederatedAdditionalUserInfoWithUsername {\n  constructor(\n    isNewUser: boolean,\n    profile: Record<string, unknown>,\n    screenName: string | null\n  ) {\n    super(isNewUser, ProviderId.TWITTER, profile, screenName);\n  }\n}\n\n/**\n * Extracts provider specific {@link AdditionalUserInfo} for the given credential.\n *\n * @param userCredential - The user credential.\n *\n * @public\n */\nexport function getAdditionalUserInfo(\n  userCredential: UserCredential\n): AdditionalUserInfo | null {\n  const { user, _tokenResponse } = userCredential as UserCredentialInternal;\n  if (user.isAnonymous && !_tokenResponse) {\n    // Handle the special case where signInAnonymously() gets called twice.\n    // No network call is made so there's nothing to actually fill this in\n    return {\n      providerId: null,\n      isNewUser: false,\n      profile: null\n    };\n  }\n\n  return _fromIdTokenResponse(_tokenResponse);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance } from '@firebase/util';\nimport {\n  Auth,\n  NextOrObserver,\n  Persistence,\n  User,\n  CompleteFn,\n  ErrorFn,\n  Unsubscribe\n} from '../model/public_types';\n\nexport {\n  debugErrorMap,\n  prodErrorMap,\n  AUTH_ERROR_CODES_MAP_DO_NOT_USE_INTERNALLY as AuthErrorCodes\n} from './errors';\n\n// Non-optional auth methods.\n/**\n * Changes the type of persistence on the {@link Auth} instance for the currently saved\n * `Auth` session and applies this type of persistence for future sign-in requests, including\n * sign-in with redirect requests.\n *\n * @remarks\n * This makes it easy for a user signing in to specify whether their session should be\n * remembered or not. It also makes it easier to never persist the `Auth` state for applications\n * that are shared by other users or have sensitive data.\n *\n * @example\n * ```javascript\n * setPersistence(auth, browserSessionPersistence);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param persistence - The {@link Persistence} to use.\n * @returns A `Promise` that resolves once the persistence change has completed\n *\n * @public\n */\nexport function setPersistence(\n  auth: Auth,\n  persistence: Persistence\n): Promise<void> {\n  return getModularInstance(auth).setPersistence(persistence);\n}\n/**\n * Adds an observer for changes to the signed-in user's ID token.\n *\n * @remarks\n * This includes sign-in, sign-out, and token refresh events.\n *\n * @param auth - The {@link Auth} instance.\n * @param nextOrObserver - callback triggered on change.\n * @param error - Deprecated. This callback is never triggered. Errors\n * on signing in/out can be caught in promises returned from\n * sign-in/sign-out functions.\n * @param completed - Deprecated. This callback is never triggered.\n *\n * @public\n */\nexport function onIdTokenChanged(\n  auth: Auth,\n  nextOrObserver: NextOrObserver<User>,\n  error?: ErrorFn,\n  completed?: CompleteFn\n): Unsubscribe {\n  return getModularInstance(auth).onIdTokenChanged(\n    nextOrObserver,\n    error,\n    completed\n  );\n}\n/**\n * Adds a blocking callback that runs before an auth state change\n * sets a new user.\n *\n * @param auth - The {@link Auth} instance.\n * @param callback - callback triggered before new user value is set.\n *   If this throws, it blocks the user from being set.\n * @param onAbort - callback triggered if a later `beforeAuthStateChanged()`\n *   callback throws, allowing you to undo any side effects.\n */\nexport function beforeAuthStateChanged(\n  auth: Auth,\n  callback: (user: User | null) => void | Promise<void>,\n  onAbort?: () => void\n): Unsubscribe {\n  return getModularInstance(auth).beforeAuthStateChanged(callback, onAbort);\n}\n/**\n * Adds an observer for changes to the user's sign-in state.\n *\n * @remarks\n * To keep the old behavior, see {@link onIdTokenChanged}.\n *\n * @param auth - The {@link Auth} instance.\n * @param nextOrObserver - callback triggered on change.\n * @param error - Deprecated. This callback is never triggered. Errors\n * on signing in/out can be caught in promises returned from\n * sign-in/sign-out functions.\n * @param completed - Deprecated. This callback is never triggered.\n *\n * @public\n */\nexport function onAuthStateChanged(\n  auth: Auth,\n  nextOrObserver: NextOrObserver<User>,\n  error?: ErrorFn,\n  completed?: CompleteFn\n): Unsubscribe {\n  return getModularInstance(auth).onAuthStateChanged(\n    nextOrObserver,\n    error,\n    completed\n  );\n}\n/**\n * Sets the current language to the default device/browser preference.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function useDeviceLanguage(auth: Auth): void {\n  getModularInstance(auth).useDeviceLanguage();\n}\n/**\n * Asynchronously sets the provided user as {@link Auth.currentUser} on the\n * {@link Auth} instance.\n *\n * @remarks\n * A new instance copy of the user provided will be made and set as currentUser.\n *\n * This will trigger {@link onAuthStateChanged} and {@link onIdTokenChanged} listeners\n * like other sign in methods.\n *\n * The operation fails with an error if the user to be updated belongs to a different Firebase\n * project.\n *\n * @param auth - The {@link Auth} instance.\n * @param user - The new {@link User}.\n *\n * @public\n */\nexport function updateCurrentUser(\n  auth: Auth,\n  user: User | null\n): Promise<void> {\n  return getModularInstance(auth).updateCurrentUser(user);\n}\n/**\n * Signs out the current user.\n *\n * @param auth - The {@link Auth} instance.\n *\n * @public\n */\nexport function signOut(auth: Auth): Promise<void> {\n  return getModularInstance(auth).signOut();\n}\n\nexport { initializeAuth } from './auth/initialize';\nexport { connectAuthEmulator } from './auth/emulator';\n\n// credentials\nexport { AuthCredential } from './credentials';\nexport { EmailAuthCredential } from './credentials/email';\nexport { OAuthCredential } from './credentials/oauth';\nexport { PhoneAuthCredential } from './credentials/phone';\n\n// persistence\nexport { inMemoryPersistence } from './persistence/in_memory';\n\n// providers\nexport { EmailAuthProvider } from './providers/email';\nexport { FacebookAuthProvider } from './providers/facebook';\nexport { CustomParameters } from './providers/federated';\nexport { GoogleAuthProvider } from './providers/google';\nexport { GithubAuthProvider } from './providers/github';\nexport { OAuthProvider, OAuthCredentialOptions } from './providers/oauth';\nexport { SAMLAuthProvider } from './providers/saml';\nexport { TwitterAuthProvider } from './providers/twitter';\n\n// strategies\nexport { signInAnonymously } from './strategies/anonymous';\nexport {\n  signInWithCredential,\n  linkWithCredential,\n  reauthenticateWithCredential\n} from './strategies/credential';\nexport { signInWithCustomToken } from './strategies/custom_token';\nexport {\n  sendPasswordResetEmail,\n  confirmPasswordReset,\n  applyActionCode,\n  checkActionCode,\n  verifyPasswordResetCode,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword\n} from './strategies/email_and_password';\nexport {\n  sendSignInLinkToEmail,\n  isSignInWithEmailLink,\n  signInWithEmailLink\n} from './strategies/email_link';\nexport {\n  fetchSignInMethodsForEmail,\n  sendEmailVerification,\n  verifyBeforeUpdateEmail\n} from './strategies/email';\n\n// core\nexport { ActionCodeURL, parseActionCodeURL } from './action_code_url';\n\n// user\nexport {\n  updateProfile,\n  updateEmail,\n  updatePassword\n} from './user/account_info';\nexport { getIdToken, getIdTokenResult } from './user/id_token_result';\nexport { unlink } from './user/link_unlink';\nexport { getAdditionalUserInfo } from './user/additional_user_info';\n\n// Non-optional user methods.\nexport { reload } from './user/reload';\n/**\n * Deletes and signs out the user.\n *\n * @remarks\n * Important: this is a security-sensitive operation that requires the user to have recently\n * signed in. If this requirement isn't met, ask the user to authenticate again and then call\n * {@link reauthenticateWithCredential}.\n *\n * @param user - The user.\n *\n * @public\n */\nexport async function deleteUser(user: User): Promise<void> {\n  return getModularInstance(user).delete();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AuthInternal } from '../model/auth';\nimport { MultiFactorSession } from '../model/public_types';\n\nexport const enum MultiFactorSessionType {\n  ENROLL = 'enroll',\n  SIGN_IN = 'signin'\n}\n\ninterface SerializedMultiFactorSession {\n  multiFactorSession: {\n    idToken?: string;\n    pendingCredential?: string;\n  };\n}\n\nexport class MultiFactorSessionImpl implements MultiFactorSession {\n  private constructor(\n    readonly type: MultiFactorSessionType,\n    readonly credential: string,\n    readonly auth?: AuthInternal\n  ) {}\n\n  static _fromIdtoken(\n    idToken: string,\n    auth?: AuthInternal\n  ): MultiFactorSessionImpl {\n    return new MultiFactorSessionImpl(\n      MultiFactorSessionType.ENROLL,\n      idToken,\n      auth\n    );\n  }\n\n  static _fromMfaPendingCredential(\n    mfaPendingCredential: string\n  ): MultiFactorSessionImpl {\n    return new MultiFactorSessionImpl(\n      MultiFactorSessionType.SIGN_IN,\n      mfaPendingCredential\n    );\n  }\n\n  toJSON(): SerializedMultiFactorSession {\n    const key =\n      this.type === MultiFactorSessionType.ENROLL\n        ? 'idToken'\n        : 'pendingCredential';\n    return {\n      multiFactorSession: {\n        [key]: this.credential\n      }\n    };\n  }\n\n  static fromJSON(\n    obj: Partial<SerializedMultiFactorSession>\n  ): MultiFactorSessionImpl | null {\n    if (obj?.multiFactorSession) {\n      if (obj.multiFactorSession?.pendingCredential) {\n        return MultiFactorSessionImpl._fromMfaPendingCredential(\n          obj.multiFactorSession.pendingCredential\n        );\n      } else if (obj.multiFactorSession?.idToken) {\n        return MultiFactorSessionImpl._fromIdtoken(\n          obj.multiFactorSession.idToken\n        );\n      }\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  MultiFactorResolver,\n  UserCredential,\n  MultiFactorError\n} from '../model/public_types';\n\nimport { _castAuth } from '../core/auth/auth_impl';\nimport { AuthErrorCode } from '../core/errors';\nimport { UserCredentialImpl } from '../core/user/user_credential_impl';\nimport { _assert, _fail } from '../core/util/assert';\nimport { UserCredentialInternal } from '../model/user';\nimport { MultiFactorAssertionImpl } from './mfa_assertion';\nimport { MultiFactorError as MultiFactorErrorInternal } from './mfa_error';\nimport { MultiFactorInfoImpl } from './mfa_info';\nimport { MultiFactorSessionImpl } from './mfa_session';\nimport { getModularInstance } from '@firebase/util';\nimport { OperationType } from '../model/enums';\n\nexport class MultiFactorResolverImpl implements MultiFactorResolver {\n  private constructor(\n    readonly session: MultiFactorSessionImpl,\n    readonly hints: MultiFactorInfoImpl[],\n    private readonly signInResolver: (\n      assertion: MultiFactorAssertionImpl\n    ) => Promise<UserCredentialInternal>\n  ) {}\n\n  /** @internal */\n  static _fromError(\n    authExtern: Auth,\n    error: MultiFactorErrorInternal\n  ): MultiFactorResolverImpl {\n    const auth = _castAuth(authExtern);\n    const serverResponse = error.customData._serverResponse;\n    const hints = (serverResponse.mfaInfo || []).map(enrollment =>\n      MultiFactorInfoImpl._fromServerResponse(auth, enrollment)\n    );\n\n    _assert(\n      serverResponse.mfaPendingCredential,\n      auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n    const session = MultiFactorSessionImpl._fromMfaPendingCredential(\n      serverResponse.mfaPendingCredential\n    );\n\n    return new MultiFactorResolverImpl(\n      session,\n      hints,\n      async (\n        assertion: MultiFactorAssertionImpl\n      ): Promise<UserCredentialInternal> => {\n        const mfaResponse = await assertion._process(auth, session);\n        // Clear out the unneeded fields from the old login response\n        delete serverResponse.mfaInfo;\n        delete serverResponse.mfaPendingCredential;\n\n        // Use in the new token & refresh token in the old response\n        const idTokenResponse = {\n          ...serverResponse,\n          idToken: mfaResponse.idToken,\n          refreshToken: mfaResponse.refreshToken\n        };\n\n        // TODO: we should collapse this switch statement into UserCredentialImpl._forOperation and have it support the SIGN_IN case\n        switch (error.operationType) {\n          case OperationType.SIGN_IN:\n            const userCredential =\n              await UserCredentialImpl._fromIdTokenResponse(\n                auth,\n                error.operationType,\n                idTokenResponse\n              );\n            await auth._updateCurrentUser(userCredential.user);\n            return userCredential;\n          case OperationType.REAUTHENTICATE:\n            _assert(error.user, auth, AuthErrorCode.INTERNAL_ERROR);\n            return UserCredentialImpl._forOperation(\n              error.user,\n              error.operationType,\n              idTokenResponse\n            );\n          default:\n            _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n        }\n      }\n    );\n  }\n\n  async resolveSignIn(\n    assertionExtern: MultiFactorAssertionImpl\n  ): Promise<UserCredential> {\n    const assertion = assertionExtern as MultiFactorAssertionImpl;\n    return this.signInResolver(assertion);\n  }\n}\n\n/**\n * Provides a {@link MultiFactorResolver} suitable for completion of a\n * multi-factor flow.\n *\n * @param auth - The {@link Auth} instance.\n * @param error - The {@link MultiFactorError} raised during a sign-in, or\n * reauthentication operation.\n *\n * @public\n */\nexport function getMultiFactorResolver(\n  auth: Auth,\n  error: MultiFactorError\n): MultiFactorResolver {\n  const authModular = getModularInstance(auth);\n  const errorInternal = error as MultiFactorErrorInternal;\n  _assert(\n    error.customData.operationType,\n    authModular,\n    AuthErrorCode.ARGUMENT_ERROR\n  );\n  _assert(\n    errorInternal.customData._serverResponse?.mfaPendingCredential,\n    authModular,\n    AuthErrorCode.ARGUMENT_ERROR\n  );\n\n  return MultiFactorResolverImpl._fromError(authModular, errorInternal);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary,\n  _performApiRequest\n} from '../index';\nimport { SignInWithPhoneNumberRequest } from '../authentication/sms';\nimport { FinalizeMfaResponse } from '../authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\n\n/**\n * MFA Info as returned by the API\n */\ninterface BaseMfaEnrollment {\n  mfaEnrollmentId: string;\n  enrolledAt: number;\n  displayName?: string;\n}\n\n/**\n * An MFA provided by SMS verification\n */\nexport interface PhoneMfaEnrollment extends BaseMfaEnrollment {\n  phoneInfo: string;\n}\n\n/**\n * MfaEnrollment can be any subtype of BaseMfaEnrollment, currently only PhoneMfaEnrollment is supported\n */\nexport type MfaEnrollment = PhoneMfaEnrollment;\n\nexport interface StartPhoneMfaEnrollmentRequest {\n  idToken: string;\n  phoneEnrollmentInfo: {\n    phoneNumber: string;\n    recaptchaToken: string;\n  };\n  tenantId?: string;\n}\n\nexport interface StartPhoneMfaEnrollmentResponse {\n  phoneSessionInfo: {\n    sessionInfo: string;\n  };\n}\n\nexport function startEnrollPhoneMfa(\n  auth: AuthInternal,\n  request: StartPhoneMfaEnrollmentRequest\n): Promise<StartPhoneMfaEnrollmentResponse> {\n  return _performApiRequest<\n    StartPhoneMfaEnrollmentRequest,\n    StartPhoneMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.START_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface FinalizePhoneMfaEnrollmentRequest {\n  idToken: string;\n  phoneVerificationInfo: SignInWithPhoneNumberRequest;\n  displayName?: string | null;\n  tenantId?: string;\n}\n\nexport interface FinalizePhoneMfaEnrollmentResponse\n  extends FinalizeMfaResponse {}\n\nexport function finalizeEnrollPhoneMfa(\n  auth: AuthInternal,\n  request: FinalizePhoneMfaEnrollmentRequest\n): Promise<FinalizePhoneMfaEnrollmentResponse> {\n  return _performApiRequest<\n    FinalizePhoneMfaEnrollmentRequest,\n    FinalizePhoneMfaEnrollmentResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_ENROLLMENT,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface WithdrawMfaRequest {\n  idToken: string;\n  mfaEnrollmentId: string;\n  tenantId?: string;\n}\n\nexport interface WithdrawMfaResponse extends FinalizeMfaResponse {}\n\nexport function withdrawMfa(\n  auth: AuthInternal,\n  request: WithdrawMfaRequest\n): Promise<WithdrawMfaResponse> {\n  return _performApiRequest<WithdrawMfaRequest, WithdrawMfaResponse>(\n    auth,\n    HttpMethod.POST,\n    Endpoint.WITHDRAW_MFA,\n    _addTidIfNecessary(auth, request)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  MultiFactorAssertion,\n  MultiFactorInfo,\n  MultiFactorSession,\n  MultiFactorUser,\n  User\n} from '../model/public_types';\n\nimport { withdrawMfa } from '../api/account_management/mfa';\nimport { AuthErrorCode } from '../core/errors';\nimport { _logoutIfInvalidated } from '../core/user/invalidation';\nimport { UserInternal } from '../model/user';\nimport { MultiFactorAssertionImpl } from './mfa_assertion';\nimport { MultiFactorInfoImpl } from './mfa_info';\nimport { MultiFactorSessionImpl } from './mfa_session';\nimport { FirebaseError, getModularInstance } from '@firebase/util';\n\nexport class MultiFactorUserImpl implements MultiFactorUser {\n  enrolledFactors: MultiFactorInfo[] = [];\n\n  private constructor(readonly user: UserInternal) {\n    user._onReload(userInfo => {\n      if (userInfo.mfaInfo) {\n        this.enrolledFactors = userInfo.mfaInfo.map(enrollment =>\n          MultiFactorInfoImpl._fromServerResponse(user.auth, enrollment)\n        );\n      }\n    });\n  }\n\n  static _fromUser(user: UserInternal): MultiFactorUserImpl {\n    return new MultiFactorUserImpl(user);\n  }\n\n  async getSession(): Promise<MultiFactorSession> {\n    return MultiFactorSessionImpl._fromIdtoken(\n      await this.user.getIdToken(),\n      this.user.auth\n    );\n  }\n\n  async enroll(\n    assertionExtern: MultiFactorAssertion,\n    displayName?: string | null\n  ): Promise<void> {\n    const assertion = assertionExtern as MultiFactorAssertionImpl;\n    const session = (await this.getSession()) as MultiFactorSessionImpl;\n    const finalizeMfaResponse = await _logoutIfInvalidated(\n      this.user,\n      assertion._process(this.user.auth, session, displayName)\n    );\n    // New tokens will be issued after enrollment of the new second factors.\n    // They need to be updated on the user.\n    await this.user._updateTokensIfNecessary(finalizeMfaResponse);\n    // The user needs to be reloaded to get the new multi-factor information\n    // from server. USER_RELOADED event will be triggered and `enrolledFactors`\n    // will be updated.\n    return this.user.reload();\n  }\n\n  async unenroll(infoOrUid: MultiFactorInfo | string): Promise<void> {\n    const mfaEnrollmentId =\n      typeof infoOrUid === 'string' ? infoOrUid : infoOrUid.uid;\n    const idToken = await this.user.getIdToken();\n    const idTokenResponse = await _logoutIfInvalidated(\n      this.user,\n      withdrawMfa(this.user.auth, {\n        idToken,\n        mfaEnrollmentId\n      })\n    );\n    // Remove the second factor from the user's list.\n    this.enrolledFactors = this.enrolledFactors.filter(\n      ({ uid }) => uid !== mfaEnrollmentId\n    );\n    // Depending on whether the backend decided to revoke the user's session,\n    // the tokenResponse may be empty. If the tokens were not updated (and they\n    // are now invalid), reloading the user will discover this and invalidate\n    // the user's state accordingly.\n    await this.user._updateTokensIfNecessary(idTokenResponse);\n    try {\n      await this.user.reload();\n    } catch (e) {\n      if (\n        (e as FirebaseError)?.code !== `auth/${AuthErrorCode.TOKEN_EXPIRED}`\n      ) {\n        throw e;\n      }\n    }\n  }\n}\n\nconst multiFactorUserCache = new WeakMap<User, MultiFactorUser>();\n\n/**\n * The {@link MultiFactorUser} corresponding to the user.\n *\n * @remarks\n * This is used to access all multi-factor properties and operations related to the user.\n *\n * @param user - The user.\n *\n * @public\n */\nexport function multiFactor(user: User): MultiFactorUser {\n  const userModular = getModularInstance(user);\n  if (!multiFactorUserCache.has(userModular)) {\n    multiFactorUserCache.set(\n      userModular,\n      MultiFactorUserImpl._fromUser(userModular as UserInternal)\n    );\n  }\n  return multiFactorUserCache.get(userModular)!;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Persistence } from '../../model/public_types';\n\nexport const enum PersistenceType {\n  SESSION = 'SESSION',\n  LOCAL = 'LOCAL',\n  NONE = 'NONE'\n}\n\nexport type PersistedBlob = Record<string, unknown>;\n\nexport interface Instantiator<T> {\n  (blob: PersistedBlob): T;\n}\n\nexport type PersistenceValue = PersistedBlob | string;\n\nexport const STORAGE_AVAILABLE_KEY = '__sak';\n\nexport interface StorageEventListener {\n  (value: PersistenceValue | null): void;\n}\n\nexport interface PersistenceInternal extends Persistence {\n  type: PersistenceType;\n  _isAvailable(): Promise<boolean>;\n  _set(key: string, value: PersistenceValue): Promise<void>;\n  _get<T extends PersistenceValue>(key: string): Promise<T | null>;\n  _remove(key: string): Promise<void>;\n  _addListener(key: string, listener: StorageEventListener): void;\n  _removeListener(key: string, listener: StorageEventListener): void;\n  // Should this persistence allow migration up the chosen hierarchy?\n  _shouldAllowMigration?: boolean;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PersistenceValue,\n  STORAGE_AVAILABLE_KEY,\n  PersistenceType\n} from '../../core/persistence';\n\n// There are two different browser persistence types: local and session.\n// Both have the same implementation but use a different underlying storage\n// object.\n\nexport abstract class BrowserPersistenceClass {\n  protected constructor(\n    protected readonly storageRetriever: () => Storage,\n    readonly type: PersistenceType\n  ) {}\n\n  _isAvailable(): Promise<boolean> {\n    try {\n      if (!this.storage) {\n        return Promise.resolve(false);\n      }\n      this.storage.setItem(STORAGE_AVAILABLE_KEY, '1');\n      this.storage.removeItem(STORAGE_AVAILABLE_KEY);\n      return Promise.resolve(true);\n    } catch {\n      return Promise.resolve(false);\n    }\n  }\n\n  _set(key: string, value: PersistenceValue): Promise<void> {\n    this.storage.setItem(key, JSON.stringify(value));\n    return Promise.resolve();\n  }\n\n  _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const json = this.storage.getItem(key);\n    return Promise.resolve(json ? JSON.parse(json) : null);\n  }\n\n  _remove(key: string): Promise<void> {\n    this.storage.removeItem(key);\n    return Promise.resolve();\n  }\n\n  protected get storage(): Storage {\n    return this.storageRetriever();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport { getUA } from '@firebase/util';\nimport {\n  _isSafari,\n  _isIOS,\n  _isIframe,\n  _isMobileBrowser,\n  _isIE10\n} from '../../core/util/browser';\nimport {\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener\n} from '../../core/persistence';\nimport { BrowserPersistenceClass } from './browser';\n\nfunction _iframeCannotSyncWebStorage(): boolean {\n  const ua = getUA();\n  return _isSafari(ua) || _isIOS(ua);\n}\n\n// The polling period in case events are not supported\nexport const _POLLING_INTERVAL_MS = 1000;\n\n// The IE 10 localStorage cross tab synchronization delay in milliseconds\nconst IE10_LOCAL_STORAGE_SYNC_DELAY = 10;\n\nclass BrowserLocalPersistence\n  extends BrowserPersistenceClass\n  implements InternalPersistence\n{\n  static type: 'LOCAL' = 'LOCAL';\n\n  constructor() {\n    super(() => window.localStorage, PersistenceType.LOCAL);\n  }\n\n  private readonly boundEventHandler = (\n    event: StorageEvent,\n    poll?: boolean\n  ): void => this.onStorageEvent(event, poll);\n  private readonly listeners: Record<string, Set<StorageEventListener>> = {};\n  private readonly localCache: Record<string, string | null> = {};\n  // setTimeout return value is platform specific\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private pollTimer: any | null = null;\n\n  // Safari or iOS browser and embedded in an iframe.\n  private readonly safariLocalStorageNotSynced =\n    _iframeCannotSyncWebStorage() && _isIframe();\n  // Whether to use polling instead of depending on window events\n  private readonly fallbackToPolling = _isMobileBrowser();\n  readonly _shouldAllowMigration = true;\n\n  private forAllChangedKeys(\n    cb: (key: string, oldValue: string | null, newValue: string | null) => void\n  ): void {\n    // Check all keys with listeners on them.\n    for (const key of Object.keys(this.listeners)) {\n      // Get value from localStorage.\n      const newValue = this.storage.getItem(key);\n      const oldValue = this.localCache[key];\n      // If local map value does not match, trigger listener with storage event.\n      // Differentiate this simulated event from the real storage event.\n      if (newValue !== oldValue) {\n        cb(key, oldValue, newValue);\n      }\n    }\n  }\n\n  private onStorageEvent(event: StorageEvent, poll = false): void {\n    // Key would be null in some situations, like when localStorage is cleared\n    if (!event.key) {\n      this.forAllChangedKeys(\n        (key: string, _oldValue: string | null, newValue: string | null) => {\n          this.notifyListeners(key, newValue);\n        }\n      );\n      return;\n    }\n\n    const key = event.key;\n\n    // Check the mechanism how this event was detected.\n    // The first event will dictate the mechanism to be used.\n    if (poll) {\n      // Environment detects storage changes via polling.\n      // Remove storage event listener to prevent possible event duplication.\n      this.detachListener();\n    } else {\n      // Environment detects storage changes via storage event listener.\n      // Remove polling listener to prevent possible event duplication.\n      this.stopPolling();\n    }\n\n    // Safari embedded iframe. Storage event will trigger with the delta\n    // changes but no changes will be applied to the iframe localStorage.\n    if (this.safariLocalStorageNotSynced) {\n      // Get current iframe page value.\n      const storedValue = this.storage.getItem(key);\n      // Value not synchronized, synchronize manually.\n      if (event.newValue !== storedValue) {\n        if (event.newValue !== null) {\n          // Value changed from current value.\n          this.storage.setItem(key, event.newValue);\n        } else {\n          // Current value deleted.\n          this.storage.removeItem(key);\n        }\n      } else if (this.localCache[key] === event.newValue && !poll) {\n        // Already detected and processed, do not trigger listeners again.\n        return;\n      }\n    }\n\n    const triggerListeners = (): void => {\n      // Keep local map up to date in case storage event is triggered before\n      // poll.\n      const storedValue = this.storage.getItem(key);\n      if (!poll && this.localCache[key] === storedValue) {\n        // Real storage event which has already been detected, do nothing.\n        // This seems to trigger in some IE browsers for some reason.\n        return;\n      }\n      this.notifyListeners(key, storedValue);\n    };\n\n    const storedValue = this.storage.getItem(key);\n    if (\n      _isIE10() &&\n      storedValue !== event.newValue &&\n      event.newValue !== event.oldValue\n    ) {\n      // IE 10 has this weird bug where a storage event would trigger with the\n      // correct key, oldValue and newValue but localStorage.getItem(key) does\n      // not yield the updated value until a few milliseconds. This ensures\n      // this recovers from that situation.\n      setTimeout(triggerListeners, IE10_LOCAL_STORAGE_SYNC_DELAY);\n    } else {\n      triggerListeners();\n    }\n  }\n\n  private notifyListeners(key: string, value: string | null): void {\n    this.localCache[key] = value;\n    const listeners = this.listeners[key];\n    if (listeners) {\n      for (const listener of Array.from(listeners)) {\n        listener(value ? JSON.parse(value) : value);\n      }\n    }\n  }\n\n  private startPolling(): void {\n    this.stopPolling();\n\n    this.pollTimer = setInterval(() => {\n      this.forAllChangedKeys(\n        (key: string, oldValue: string | null, newValue: string | null) => {\n          this.onStorageEvent(\n            new StorageEvent('storage', {\n              key,\n              oldValue,\n              newValue\n            }),\n            /* poll */ true\n          );\n        }\n      );\n    }, _POLLING_INTERVAL_MS);\n  }\n\n  private stopPolling(): void {\n    if (this.pollTimer) {\n      clearInterval(this.pollTimer);\n      this.pollTimer = null;\n    }\n  }\n\n  private attachListener(): void {\n    window.addEventListener('storage', this.boundEventHandler);\n  }\n\n  private detachListener(): void {\n    window.removeEventListener('storage', this.boundEventHandler);\n  }\n\n  _addListener(key: string, listener: StorageEventListener): void {\n    if (Object.keys(this.listeners).length === 0) {\n      // Whether browser can detect storage event when it had already been pushed to the background.\n      // This may happen in some mobile browsers. A localStorage change in the foreground window\n      // will not be detected in the background window via the storage event.\n      // This was detected in iOS 7.x mobile browsers\n      if (this.fallbackToPolling) {\n        this.startPolling();\n      } else {\n        this.attachListener();\n      }\n    }\n    if (!this.listeners[key]) {\n      this.listeners[key] = new Set();\n      // Populate the cache to avoid spuriously triggering on first poll.\n      this.localCache[key] = this.storage.getItem(key);\n    }\n    this.listeners[key].add(listener);\n  }\n\n  _removeListener(key: string, listener: StorageEventListener): void {\n    if (this.listeners[key]) {\n      this.listeners[key].delete(listener);\n\n      if (this.listeners[key].size === 0) {\n        delete this.listeners[key];\n      }\n    }\n\n    if (Object.keys(this.listeners).length === 0) {\n      this.detachListener();\n      this.stopPolling();\n    }\n  }\n\n  // Update local cache on base operations:\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    await super._set(key, value);\n    this.localCache[key] = JSON.stringify(value);\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const value = await super._get<T>(key);\n    this.localCache[key] = JSON.stringify(value);\n    return value;\n  }\n\n  async _remove(key: string): Promise<void> {\n    await super._remove(key);\n    delete this.localCache[key];\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type `LOCAL` using `localStorage`\n * for the underlying storage.\n *\n * @public\n */\nexport const browserLocalPersistence: Persistence = BrowserLocalPersistence;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\n\nimport {\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  StorageEventListener\n} from '../../core/persistence';\nimport { BrowserPersistenceClass } from './browser';\n\nclass BrowserSessionPersistence\n  extends BrowserPersistenceClass\n  implements InternalPersistence\n{\n  static type: 'SESSION' = 'SESSION';\n\n  constructor() {\n    super(() => window.sessionStorage, PersistenceType.SESSION);\n  }\n\n  _addListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for session storage since it cannot be shared across windows\n    return;\n  }\n\n  _removeListener(_key: string, _listener: StorageEventListener): void {\n    // Listeners are not supported for session storage since it cannot be shared across windows\n    return;\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of `SESSION` using `sessionStorage`\n * for the underlying storage.\n *\n * @public\n */\nexport const browserSessionPersistence: Persistence = BrowserSessionPersistence;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** TODO: remove this once tslib has a polyfill for Promise.allSettled */\ninterface PromiseFulfilledResult<T> {\n  fulfilled: true;\n  value: T;\n}\n\ninterface PromiseRejectedResult {\n  fulfilled: false;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  reason: any;\n}\n\nexport type PromiseSettledResult<T> =\n  | PromiseFulfilledResult<T>\n  | PromiseRejectedResult;\n\n/**\n * Shim for Promise.allSettled, note the slightly different format of `fulfilled` vs `status`.\n *\n * @param promises - Array of promises to wait on.\n */\nexport function _allSettled<T>(\n  promises: Array<Promise<T>>\n): Promise<Array<PromiseSettledResult<T>>> {\n  return Promise.all(\n    promises.map(async promise => {\n      try {\n        const value = await promise;\n        return {\n          fulfilled: true,\n          value\n        } as PromiseFulfilledResult<T>;\n      } catch (reason) {\n        return {\n          fulfilled: false,\n          reason\n        } as PromiseRejectedResult;\n      }\n    })\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ReceiverHandler,\n  _EventType,\n  _ReceiverResponse,\n  SenderMessageEvent,\n  _Status,\n  _SenderRequest\n} from './index';\nimport { _allSettled } from './promise';\n\n/**\n * Interface class for receiving messages.\n *\n */\nexport class Receiver {\n  private static readonly receivers: Receiver[] = [];\n  private readonly boundEventHandler: EventListener;\n\n  private readonly handlersMap: {\n    // Typescript doesn't have existential types :(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [eventType: string]: Set<ReceiverHandler<any, any>>;\n  } = {};\n\n  constructor(private readonly eventTarget: EventTarget) {\n    this.boundEventHandler = this.handleEvent.bind(this);\n  }\n\n  /**\n   * Obtain an instance of a Receiver for a given event target, if none exists it will be created.\n   *\n   * @param eventTarget - An event target (such as window or self) through which the underlying\n   * messages will be received.\n   */\n  static _getInstance(eventTarget: EventTarget): Receiver {\n    // The results are stored in an array since objects can't be keys for other\n    // objects. In addition, setting a unique property on an event target as a\n    // hash map key may not be allowed due to CORS restrictions.\n    const existingInstance = this.receivers.find(receiver =>\n      receiver.isListeningto(eventTarget)\n    );\n    if (existingInstance) {\n      return existingInstance;\n    }\n    const newInstance = new Receiver(eventTarget);\n    this.receivers.push(newInstance);\n    return newInstance;\n  }\n\n  private isListeningto(eventTarget: EventTarget): boolean {\n    return this.eventTarget === eventTarget;\n  }\n\n  /**\n   * Fans out a MessageEvent to the appropriate listeners.\n   *\n   * @remarks\n   * Sends an {@link Status.ACK} upon receipt and a {@link Status.DONE} once all handlers have\n   * finished processing.\n   *\n   * @param event - The MessageEvent.\n   *\n   */\n  private async handleEvent<\n    T extends _ReceiverResponse,\n    S extends _SenderRequest\n  >(event: Event): Promise<void> {\n    const messageEvent = event as MessageEvent<SenderMessageEvent<S>>;\n    const { eventId, eventType, data } = messageEvent.data;\n\n    const handlers: Set<ReceiverHandler<T, S>> | undefined =\n      this.handlersMap[eventType];\n    if (!handlers?.size) {\n      return;\n    }\n\n    messageEvent.ports[0].postMessage({\n      status: _Status.ACK,\n      eventId,\n      eventType\n    });\n\n    const promises = Array.from(handlers).map(async handler =>\n      handler(messageEvent.origin, data)\n    );\n    const response = await _allSettled(promises);\n    messageEvent.ports[0].postMessage({\n      status: _Status.DONE,\n      eventId,\n      eventType,\n      response\n    });\n  }\n\n  /**\n   * Subscribe an event handler for a particular event.\n   *\n   * @param eventType - Event name to subscribe to.\n   * @param eventHandler - The event handler which should receive the events.\n   *\n   */\n  _subscribe<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    eventHandler: ReceiverHandler<T, S>\n  ): void {\n    if (Object.keys(this.handlersMap).length === 0) {\n      this.eventTarget.addEventListener('message', this.boundEventHandler);\n    }\n\n    if (!this.handlersMap[eventType]) {\n      this.handlersMap[eventType] = new Set();\n    }\n\n    this.handlersMap[eventType].add(eventHandler);\n  }\n\n  /**\n   * Unsubscribe an event handler from a particular event.\n   *\n   * @param eventType - Event name to unsubscribe from.\n   * @param eventHandler - Optinoal event handler, if none provided, unsubscribe all handlers on this event.\n   *\n   */\n  _unsubscribe<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    eventHandler?: ReceiverHandler<T, S>\n  ): void {\n    if (this.handlersMap[eventType] && eventHandler) {\n      this.handlersMap[eventType].delete(eventHandler);\n    }\n    if (!eventHandler || this.handlersMap[eventType].size === 0) {\n      delete this.handlersMap[eventType];\n    }\n\n    if (Object.keys(this.handlersMap).length === 0) {\n      this.eventTarget.removeEventListener('message', this.boundEventHandler);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function _generateEventId(prefix = '', digits = 10): string {\n  let random = '';\n  for (let i = 0; i < digits; i++) {\n    random += Math.floor(Math.random() * 10);\n  }\n  return prefix + random;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _generateEventId } from '../../core/util/event_id';\nimport {\n  _SenderRequest,\n  _EventType,\n  ReceiverMessageEvent,\n  _MessageError,\n  SenderMessageEvent,\n  _Status,\n  _ReceiverMessageResponse,\n  _ReceiverResponse,\n  _TimeoutDuration\n} from './index';\n\ninterface MessageHandler {\n  messageChannel: MessageChannel;\n  onMessage: EventListenerOrEventListenerObject;\n}\n\n/**\n * Interface for sending messages and waiting for a completion response.\n *\n */\nexport class Sender {\n  private readonly handlers = new Set<MessageHandler>();\n\n  constructor(private readonly target: ServiceWorker) {}\n\n  /**\n   * Unsubscribe the handler and remove it from our tracking Set.\n   *\n   * @param handler - The handler to unsubscribe.\n   */\n  private removeMessageHandler(handler: MessageHandler): void {\n    if (handler.messageChannel) {\n      handler.messageChannel.port1.removeEventListener(\n        'message',\n        handler.onMessage\n      );\n      handler.messageChannel.port1.close();\n    }\n    this.handlers.delete(handler);\n  }\n\n  /**\n   * Send a message to the Receiver located at {@link target}.\n   *\n   * @remarks\n   * We'll first wait a bit for an ACK , if we get one we will wait significantly longer until the\n   * receiver has had a chance to fully process the event.\n   *\n   * @param eventType - Type of event to send.\n   * @param data - The payload of the event.\n   * @param timeout - Timeout for waiting on an ACK from the receiver.\n   *\n   * @returns An array of settled promises from all the handlers that were listening on the receiver.\n   */\n  async _send<T extends _ReceiverResponse, S extends _SenderRequest>(\n    eventType: _EventType,\n    data: S,\n    timeout = _TimeoutDuration.ACK\n  ): Promise<_ReceiverMessageResponse<T>> {\n    const messageChannel =\n      typeof MessageChannel !== 'undefined' ? new MessageChannel() : null;\n    if (!messageChannel) {\n      throw new Error(_MessageError.CONNECTION_UNAVAILABLE);\n    }\n    // Node timers and browser timers return fundamentally different types.\n    // We don't actually care what the value is but TS won't accept unknown and\n    // we can't cast properly in both environments.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let completionTimer: any;\n    let handler: MessageHandler;\n    return new Promise<_ReceiverMessageResponse<T>>((resolve, reject) => {\n      const eventId = _generateEventId('', 20);\n      messageChannel.port1.start();\n      const ackTimer = setTimeout(() => {\n        reject(new Error(_MessageError.UNSUPPORTED_EVENT));\n      }, timeout);\n      handler = {\n        messageChannel,\n        onMessage(event: Event): void {\n          const messageEvent = event as MessageEvent<ReceiverMessageEvent<T>>;\n          if (messageEvent.data.eventId !== eventId) {\n            return;\n          }\n          switch (messageEvent.data.status) {\n            case _Status.ACK:\n              // The receiver should ACK first.\n              clearTimeout(ackTimer);\n              completionTimer = setTimeout(() => {\n                reject(new Error(_MessageError.TIMEOUT));\n              }, _TimeoutDuration.COMPLETION);\n              break;\n            case _Status.DONE:\n              // Once the receiver's handlers are finished we will get the results.\n              clearTimeout(completionTimer);\n              resolve(messageEvent.data.response);\n              break;\n            default:\n              clearTimeout(ackTimer);\n              clearTimeout(completionTimer);\n              reject(new Error(_MessageError.INVALID_RESPONSE));\n              break;\n          }\n        }\n      };\n      this.handlers.add(handler);\n      messageChannel.port1.addEventListener('message', handler.onMessage);\n      this.target.postMessage(\n        {\n          eventType,\n          eventId,\n          data\n        } as SenderMessageEvent<S>,\n        [messageChannel.port2]\n      );\n    }).finally(() => {\n      if (handler) {\n        this.removeMessageHandler(handler);\n      }\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Recaptcha } from './recaptcha/recaptcha';\n\n/**\n * A specialized window type that melds the normal window type plus the\n * various bits we need. The three different blocks that are &'d together\n * cant be defined in the same block together.\n */\nexport type AuthWindow = {\n  // Standard window types\n  [T in keyof Window]: Window[T];\n} & {\n  // Any known / named properties we want to add\n  grecaptcha?: Recaptcha;\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  ___jsl?: Record<string, any>;\n  gapi?: typeof gapi;\n} & {\n  // A final catch-all for callbacks (which will have random names) that\n  // we will stick on the window.\n  [callback: string]: (...args: unknown[]) => void;\n};\n\n/**\n * Lazy accessor for window, since the compat layer won't tree shake this out,\n * we need to make sure not to mess with window unless we have to\n */\nexport function _window(): AuthWindow {\n  return window as unknown as AuthWindow;\n}\n\nexport function _setWindowLocation(url: string): void {\n  _window().location.href = url;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _window } from '../auth_window';\n\nexport function _isWorker(): boolean {\n  return (\n    typeof _window()['WorkerGlobalScope'] !== 'undefined' &&\n    typeof _window()['importScripts'] === 'function'\n  );\n}\n\nexport async function _getActiveServiceWorker(): Promise<ServiceWorker | null> {\n  if (!navigator?.serviceWorker) {\n    return null;\n  }\n  try {\n    const registration = await navigator.serviceWorker.ready;\n    return registration.active;\n  } catch {\n    return null;\n  }\n}\n\nexport function _getServiceWorkerController(): ServiceWorker | null {\n  return navigator?.serviceWorker?.controller || null;\n}\n\nexport function _getWorkerGlobalScope(): ServiceWorker | null {\n  return _isWorker() ? (self as unknown as ServiceWorker) : null;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Persistence } from '../../model/public_types';\nimport {\n  PersistedBlob,\n  PersistenceInternal as InternalPersistence,\n  PersistenceType,\n  PersistenceValue,\n  StorageEventListener,\n  STORAGE_AVAILABLE_KEY\n} from '../../core/persistence/';\nimport {\n  _EventType,\n  _PingResponse,\n  KeyChangedResponse,\n  KeyChangedRequest,\n  PingRequest,\n  _TimeoutDuration\n} from '../messagechannel/index';\nimport { Receiver } from '../messagechannel/receiver';\nimport { Sender } from '../messagechannel/sender';\nimport {\n  _isWorker,\n  _getActiveServiceWorker,\n  _getServiceWorkerController,\n  _getWorkerGlobalScope\n} from '../util/worker';\n\nexport const DB_NAME = 'firebaseLocalStorageDb';\nconst DB_VERSION = 1;\nconst DB_OBJECTSTORE_NAME = 'firebaseLocalStorage';\nconst DB_DATA_KEYPATH = 'fbase_key';\n\ninterface DBObject {\n  [DB_DATA_KEYPATH]: string;\n  value: PersistedBlob;\n}\n\n/**\n * Promise wrapper for IDBRequest\n *\n * Unfortunately we can't cleanly extend Promise<T> since promises are not callable in ES6\n *\n */\nclass DBPromise<T> {\n  constructor(private readonly request: IDBRequest) {}\n\n  toPromise(): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      this.request.addEventListener('success', () => {\n        resolve(this.request.result);\n      });\n      this.request.addEventListener('error', () => {\n        reject(this.request.error);\n      });\n    });\n  }\n}\n\nfunction getObjectStore(db: IDBDatabase, isReadWrite: boolean): IDBObjectStore {\n  return db\n    .transaction([DB_OBJECTSTORE_NAME], isReadWrite ? 'readwrite' : 'readonly')\n    .objectStore(DB_OBJECTSTORE_NAME);\n}\n\nexport async function _clearDatabase(db: IDBDatabase): Promise<void> {\n  const objectStore = getObjectStore(db, true);\n  return new DBPromise<void>(objectStore.clear()).toPromise();\n}\n\nexport function _deleteDatabase(): Promise<void> {\n  const request = indexedDB.deleteDatabase(DB_NAME);\n  return new DBPromise<void>(request).toPromise();\n}\n\nexport function _openDatabase(): Promise<IDBDatabase> {\n  const request = indexedDB.open(DB_NAME, DB_VERSION);\n  return new Promise((resolve, reject) => {\n    request.addEventListener('error', () => {\n      reject(request.error);\n    });\n\n    request.addEventListener('upgradeneeded', () => {\n      const db = request.result;\n\n      try {\n        db.createObjectStore(DB_OBJECTSTORE_NAME, { keyPath: DB_DATA_KEYPATH });\n      } catch (e) {\n        reject(e);\n      }\n    });\n\n    request.addEventListener('success', async () => {\n      const db: IDBDatabase = request.result;\n      // Strange bug that occurs in Firefox when multiple tabs are opened at the\n      // same time. The only way to recover seems to be deleting the database\n      // and re-initializing it.\n      // https://github.com/firebase/firebase-js-sdk/issues/634\n\n      if (!db.objectStoreNames.contains(DB_OBJECTSTORE_NAME)) {\n        // Need to close the database or else you get a `blocked` event\n        db.close();\n        await _deleteDatabase();\n        resolve(await _openDatabase());\n      } else {\n        resolve(db);\n      }\n    });\n  });\n}\n\nexport async function _putObject(\n  db: IDBDatabase,\n  key: string,\n  value: PersistenceValue | string\n): Promise<void> {\n  const request = getObjectStore(db, true).put({\n    [DB_DATA_KEYPATH]: key,\n    value\n  });\n  return new DBPromise<void>(request).toPromise();\n}\n\nasync function getObject(\n  db: IDBDatabase,\n  key: string\n): Promise<PersistedBlob | null> {\n  const request = getObjectStore(db, false).get(key);\n  const data = await new DBPromise<DBObject | undefined>(request).toPromise();\n  return data === undefined ? null : data.value;\n}\n\nexport function _deleteObject(db: IDBDatabase, key: string): Promise<void> {\n  const request = getObjectStore(db, true).delete(key);\n  return new DBPromise<void>(request).toPromise();\n}\n\nexport const _POLLING_INTERVAL_MS = 800;\nexport const _TRANSACTION_RETRY_COUNT = 3;\n\nclass IndexedDBLocalPersistence implements InternalPersistence {\n  static type: 'LOCAL' = 'LOCAL';\n\n  type = PersistenceType.LOCAL;\n  db?: IDBDatabase;\n  readonly _shouldAllowMigration = true;\n\n  private readonly listeners: Record<string, Set<StorageEventListener>> = {};\n  private readonly localCache: Record<string, PersistenceValue | null> = {};\n  // setTimeout return value is platform specific\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private pollTimer: any | null = null;\n  private pendingWrites = 0;\n\n  private receiver: Receiver | null = null;\n  private sender: Sender | null = null;\n  private serviceWorkerReceiverAvailable = false;\n  private activeServiceWorker: ServiceWorker | null = null;\n  // Visible for testing only\n  readonly _workerInitializationPromise: Promise<void>;\n\n  constructor() {\n    // Fire & forget the service worker registration as it may never resolve\n    this._workerInitializationPromise =\n      this.initializeServiceWorkerMessaging().then(\n        () => {},\n        () => {}\n      );\n  }\n\n  async _openDb(): Promise<IDBDatabase> {\n    if (this.db) {\n      return this.db;\n    }\n    this.db = await _openDatabase();\n    return this.db;\n  }\n\n  async _withRetries<T>(op: (db: IDBDatabase) => Promise<T>): Promise<T> {\n    let numAttempts = 0;\n\n    while (true) {\n      try {\n        const db = await this._openDb();\n        return await op(db);\n      } catch (e) {\n        if (numAttempts++ > _TRANSACTION_RETRY_COUNT) {\n          throw e;\n        }\n        if (this.db) {\n          this.db.close();\n          this.db = undefined;\n        }\n        // TODO: consider adding exponential backoff\n      }\n    }\n  }\n\n  /**\n   * IndexedDB events do not propagate from the main window to the worker context.  We rely on a\n   * postMessage interface to send these events to the worker ourselves.\n   */\n  private async initializeServiceWorkerMessaging(): Promise<void> {\n    return _isWorker() ? this.initializeReceiver() : this.initializeSender();\n  }\n\n  /**\n   * As the worker we should listen to events from the main window.\n   */\n  private async initializeReceiver(): Promise<void> {\n    this.receiver = Receiver._getInstance(_getWorkerGlobalScope()!);\n    // Refresh from persistence if we receive a KeyChanged message.\n    this.receiver._subscribe(\n      _EventType.KEY_CHANGED,\n      async (_origin: string, data: KeyChangedRequest) => {\n        const keys = await this._poll();\n        return {\n          keyProcessed: keys.includes(data.key)\n        };\n      }\n    );\n    // Let the sender know that we are listening so they give us more timeout.\n    this.receiver._subscribe(\n      _EventType.PING,\n      async (_origin: string, _data: PingRequest) => {\n        return [_EventType.KEY_CHANGED];\n      }\n    );\n  }\n\n  /**\n   * As the main window, we should let the worker know when keys change (set and remove).\n   *\n   * @remarks\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/ready | ServiceWorkerContainer.ready}\n   * may not resolve.\n   */\n  private async initializeSender(): Promise<void> {\n    // Check to see if there's an active service worker.\n    this.activeServiceWorker = await _getActiveServiceWorker();\n    if (!this.activeServiceWorker) {\n      return;\n    }\n    this.sender = new Sender(this.activeServiceWorker);\n    // Ping the service worker to check what events they can handle.\n    const results = await this.sender._send<_PingResponse, PingRequest>(\n      _EventType.PING,\n      {},\n      _TimeoutDuration.LONG_ACK\n    );\n    if (!results) {\n      return;\n    }\n    if (\n      results[0]?.fulfilled &&\n      results[0]?.value.includes(_EventType.KEY_CHANGED)\n    ) {\n      this.serviceWorkerReceiverAvailable = true;\n    }\n  }\n\n  /**\n   * Let the worker know about a changed key, the exact key doesn't technically matter since the\n   * worker will just trigger a full sync anyway.\n   *\n   * @remarks\n   * For now, we only support one service worker per page.\n   *\n   * @param key - Storage key which changed.\n   */\n  private async notifyServiceWorker(key: string): Promise<void> {\n    if (\n      !this.sender ||\n      !this.activeServiceWorker ||\n      _getServiceWorkerController() !== this.activeServiceWorker\n    ) {\n      return;\n    }\n    try {\n      await this.sender._send<KeyChangedResponse, KeyChangedRequest>(\n        _EventType.KEY_CHANGED,\n        { key },\n        // Use long timeout if receiver has previously responded to a ping from us.\n        this.serviceWorkerReceiverAvailable\n          ? _TimeoutDuration.LONG_ACK\n          : _TimeoutDuration.ACK\n      );\n    } catch {\n      // This is a best effort approach. Ignore errors.\n    }\n  }\n\n  async _isAvailable(): Promise<boolean> {\n    try {\n      if (!indexedDB) {\n        return false;\n      }\n      const db = await _openDatabase();\n      await _putObject(db, STORAGE_AVAILABLE_KEY, '1');\n      await _deleteObject(db, STORAGE_AVAILABLE_KEY);\n      return true;\n    } catch {}\n    return false;\n  }\n\n  private async _withPendingWrite(write: () => Promise<void>): Promise<void> {\n    this.pendingWrites++;\n    try {\n      await write();\n    } finally {\n      this.pendingWrites--;\n    }\n  }\n\n  async _set(key: string, value: PersistenceValue): Promise<void> {\n    return this._withPendingWrite(async () => {\n      await this._withRetries((db: IDBDatabase) => _putObject(db, key, value));\n      this.localCache[key] = value;\n      return this.notifyServiceWorker(key);\n    });\n  }\n\n  async _get<T extends PersistenceValue>(key: string): Promise<T | null> {\n    const obj = (await this._withRetries((db: IDBDatabase) =>\n      getObject(db, key)\n    )) as T;\n    this.localCache[key] = obj;\n    return obj;\n  }\n\n  async _remove(key: string): Promise<void> {\n    return this._withPendingWrite(async () => {\n      await this._withRetries((db: IDBDatabase) => _deleteObject(db, key));\n      delete this.localCache[key];\n      return this.notifyServiceWorker(key);\n    });\n  }\n\n  private async _poll(): Promise<string[]> {\n    // TODO: check if we need to fallback if getAll is not supported\n    const result = await this._withRetries((db: IDBDatabase) => {\n      const getAllRequest = getObjectStore(db, false).getAll();\n      return new DBPromise<DBObject[] | null>(getAllRequest).toPromise();\n    });\n\n    if (!result) {\n      return [];\n    }\n\n    // If we have pending writes in progress abort, we'll get picked up on the next poll\n    if (this.pendingWrites !== 0) {\n      return [];\n    }\n\n    const keys = [];\n    const keysInResult = new Set();\n    for (const { fbase_key: key, value } of result) {\n      keysInResult.add(key);\n      if (JSON.stringify(this.localCache[key]) !== JSON.stringify(value)) {\n        this.notifyListeners(key, value as PersistenceValue);\n        keys.push(key);\n      }\n    }\n    for (const localKey of Object.keys(this.localCache)) {\n      if (this.localCache[localKey] && !keysInResult.has(localKey)) {\n        // Deleted\n        this.notifyListeners(localKey, null);\n        keys.push(localKey);\n      }\n    }\n    return keys;\n  }\n\n  private notifyListeners(\n    key: string,\n    newValue: PersistenceValue | null\n  ): void {\n    this.localCache[key] = newValue;\n    const listeners = this.listeners[key];\n    if (listeners) {\n      for (const listener of Array.from(listeners)) {\n        listener(newValue);\n      }\n    }\n  }\n\n  private startPolling(): void {\n    this.stopPolling();\n\n    this.pollTimer = setInterval(\n      async () => this._poll(),\n      _POLLING_INTERVAL_MS\n    );\n  }\n\n  private stopPolling(): void {\n    if (this.pollTimer) {\n      clearInterval(this.pollTimer);\n      this.pollTimer = null;\n    }\n  }\n\n  _addListener(key: string, listener: StorageEventListener): void {\n    if (Object.keys(this.listeners).length === 0) {\n      this.startPolling();\n    }\n    if (!this.listeners[key]) {\n      this.listeners[key] = new Set();\n      // Populate the cache to avoid spuriously triggering on first poll.\n      void this._get(key); // This can happen in the background async and we can return immediately.\n    }\n    this.listeners[key].add(listener);\n  }\n\n  _removeListener(key: string, listener: StorageEventListener): void {\n    if (this.listeners[key]) {\n      this.listeners[key].delete(listener);\n\n      if (this.listeners[key].size === 0) {\n        delete this.listeners[key];\n      }\n    }\n\n    if (Object.keys(this.listeners).length === 0) {\n      this.stopPolling();\n    }\n  }\n}\n\n/**\n * An implementation of {@link Persistence} of type `LOCAL` using `indexedDB`\n * for the underlying storage.\n *\n * @public\n */\nexport const indexedDBLocalPersistence: Persistence = IndexedDBLocalPersistence;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _performApiRequest,\n  Endpoint,\n  HttpMethod,\n  _addTidIfNecessary\n} from '../index';\nimport { Auth } from '../../model/public_types';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { MfaEnrollment } from '../account_management/mfa';\nimport { SignInWithIdpResponse } from './idp';\nimport {\n  SignInWithPhoneNumberRequest,\n  SignInWithPhoneNumberResponse\n} from './sms';\n\nexport interface FinalizeMfaResponse {\n  idToken: string;\n  refreshToken: string;\n}\n\n/**\n * @internal\n */\nexport interface IdTokenMfaResponse extends IdTokenResponse {\n  mfaPendingCredential?: string;\n  mfaInfo?: MfaEnrollment[];\n}\n\nexport interface StartPhoneMfaSignInRequest {\n  mfaPendingCredential: string;\n  mfaEnrollmentId: string;\n  phoneSignInInfo: {\n    recaptchaToken: string;\n  };\n  tenantId?: string;\n}\n\nexport interface StartPhoneMfaSignInResponse {\n  phoneResponseInfo: {\n    sessionInfo: string;\n  };\n}\n\nexport function startSignInPhoneMfa(\n  auth: Auth,\n  request: StartPhoneMfaSignInRequest\n): Promise<StartPhoneMfaSignInResponse> {\n  return _performApiRequest<\n    StartPhoneMfaSignInRequest,\n    StartPhoneMfaSignInResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.START_MFA_SIGN_IN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\nexport interface FinalizePhoneMfaSignInRequest {\n  mfaPendingCredential: string;\n  phoneVerificationInfo: SignInWithPhoneNumberRequest;\n  tenantId?: string;\n}\n\nexport interface FinalizePhoneMfaSignInResponse extends FinalizeMfaResponse {}\n\nexport function finalizeSignInPhoneMfa(\n  auth: Auth,\n  request: FinalizePhoneMfaSignInRequest\n): Promise<FinalizePhoneMfaSignInResponse> {\n  return _performApiRequest<\n    FinalizePhoneMfaSignInRequest,\n    FinalizePhoneMfaSignInResponse\n  >(\n    auth,\n    HttpMethod.POST,\n    Endpoint.FINALIZE_MFA_SIGN_IN,\n    _addTidIfNecessary(auth, request)\n  );\n}\n\n/**\n * @internal\n */\nexport type PhoneOrOauthTokenResponse =\n  | SignInWithPhoneNumberResponse\n  | SignInWithIdpResponse\n  | IdTokenResponse;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Endpoint, HttpMethod, _performApiRequest } from '../index';\nimport { Auth } from '../../model/public_types';\n\ninterface GetRecaptchaParamResponse {\n  recaptchaSiteKey?: string;\n}\n\nexport async function getRecaptchaParams(auth: Auth): Promise<string> {\n  return (\n    (\n      await _performApiRequest<void, GetRecaptchaParamResponse>(\n        auth,\n        HttpMethod.GET,\n        Endpoint.GET_RECAPTCHA_PARAM\n      )\n    ).recaptchaSiteKey || ''\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../core/errors';\nimport { _createError } from '../core/util/assert';\n\nfunction getScriptParentElement(): HTMLDocument | HTMLHeadElement {\n  return document.getElementsByTagName('head')?.[0] ?? document;\n}\n\nexport function _loadJS(url: string): Promise<Event> {\n  // TODO: consider adding timeout support & cancellation\n  return new Promise((resolve, reject) => {\n    const el = document.createElement('script');\n    el.setAttribute('src', url);\n    el.onload = resolve;\n    el.onerror = e => {\n      const error = _createError(AuthErrorCode.INTERNAL_ERROR);\n      error.customData = e as unknown as Record<string, unknown>;\n      reject(error);\n    };\n    el.type = 'text/javascript';\n    el.charset = 'UTF-8';\n    getScriptParentElement().appendChild(el);\n  });\n}\n\nexport function _generateCallbackName(prefix: string): string {\n  return `__${prefix}${Math.floor(Math.random() * 1000000)}`;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport { AuthInternal } from '../../model/auth';\nimport { RecaptchaParameters } from '../../model/public_types';\nimport { Recaptcha } from './recaptcha';\n\nexport const _SOLVE_TIME_MS = 500;\nexport const _EXPIRATION_TIME_MS = 60_000;\nexport const _WIDGET_ID_START = 1_000_000_000_000;\n\nexport interface Widget {\n  getResponse: () => string | null;\n  delete: () => void;\n  execute: () => void;\n}\n\nexport class MockReCaptcha implements Recaptcha {\n  private counter = _WIDGET_ID_START;\n  _widgets = new Map<number, Widget>();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  render(\n    container: string | HTMLElement,\n    parameters?: RecaptchaParameters\n  ): number {\n    const id = this.counter;\n    this._widgets.set(\n      id,\n      new MockWidget(container, this.auth.name, parameters || {})\n    );\n    this.counter++;\n    return id;\n  }\n\n  reset(optWidgetId?: number): void {\n    const id = optWidgetId || _WIDGET_ID_START;\n    void this._widgets.get(id)?.delete();\n    this._widgets.delete(id);\n  }\n\n  getResponse(optWidgetId?: number): string {\n    const id = optWidgetId || _WIDGET_ID_START;\n    return this._widgets.get(id)?.getResponse() || '';\n  }\n\n  async execute(optWidgetId?: number | string): Promise<string> {\n    const id: number = (optWidgetId as number) || _WIDGET_ID_START;\n    void this._widgets.get(id)?.execute();\n    return '';\n  }\n}\n\nexport class MockWidget {\n  private readonly container: HTMLElement;\n  private readonly isVisible: boolean;\n  private timerId: number | null = null;\n  private deleted = false;\n  private responseToken: string | null = null;\n  private readonly clickHandler = (): void => {\n    this.execute();\n  };\n\n  constructor(\n    containerOrId: string | HTMLElement,\n    appName: string,\n    private readonly params: RecaptchaParameters\n  ) {\n    const container =\n      typeof containerOrId === 'string'\n        ? document.getElementById(containerOrId)\n        : containerOrId;\n    _assert(container, AuthErrorCode.ARGUMENT_ERROR, { appName });\n\n    this.container = container;\n    this.isVisible = this.params.size !== 'invisible';\n    if (this.isVisible) {\n      this.execute();\n    } else {\n      this.container.addEventListener('click', this.clickHandler);\n    }\n  }\n\n  getResponse(): string | null {\n    this.checkIfDeleted();\n    return this.responseToken;\n  }\n\n  delete(): void {\n    this.checkIfDeleted();\n    this.deleted = true;\n    if (this.timerId) {\n      clearTimeout(this.timerId);\n      this.timerId = null;\n    }\n    this.container.removeEventListener('click', this.clickHandler);\n  }\n\n  execute(): void {\n    this.checkIfDeleted();\n    if (this.timerId) {\n      return;\n    }\n\n    this.timerId = window.setTimeout(() => {\n      this.responseToken = generateRandomAlphaNumericString(50);\n      const { callback, 'expired-callback': expiredCallback } = this.params;\n      if (callback) {\n        try {\n          callback(this.responseToken);\n        } catch (e) {}\n      }\n\n      this.timerId = window.setTimeout(() => {\n        this.timerId = null;\n        this.responseToken = null;\n        if (expiredCallback) {\n          try {\n            expiredCallback();\n          } catch (e) {}\n        }\n\n        if (this.isVisible) {\n          this.execute();\n        }\n      }, _EXPIRATION_TIME_MS);\n    }, _SOLVE_TIME_MS);\n  }\n\n  private checkIfDeleted(): void {\n    if (this.deleted) {\n      throw new Error('reCAPTCHA mock was already deleted!');\n    }\n  }\n}\n\nfunction generateRandomAlphaNumericString(len: number): string {\n  const chars = [];\n  const allowedChars =\n    '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  for (let i = 0; i < len; i++) {\n    chars.push(\n      allowedChars.charAt(Math.floor(Math.random() * allowedChars.length))\n    );\n  }\n  return chars.join('');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystring } from '@firebase/util';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert, _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as jsHelpers from '../load_js';\nimport { Recaptcha } from './recaptcha';\nimport { MockReCaptcha } from './recaptcha_mock';\n\n// ReCaptcha will load using the same callback, so the callback function needs\n// to be kept around\nexport const _JSLOAD_CALLBACK = jsHelpers._generateCallbackName('rcb');\nconst NETWORK_TIMEOUT_DELAY = new Delay(30000, 60000);\nconst RECAPTCHA_BASE = 'https://www.google.com/recaptcha/api.js?';\n\n/**\n * We need to mark this interface as internal explicitly to exclude it in the public typings, because\n * it references AuthInternal which has a circular dependency with UserInternal.\n *\n * @internal\n */\nexport interface ReCaptchaLoader {\n  load(auth: AuthInternal, hl?: string): Promise<Recaptcha>;\n  clearedOneInstance(): void;\n}\n\n/**\n * Loader for the GReCaptcha library. There should only ever be one of this.\n */\nexport class ReCaptchaLoaderImpl implements ReCaptchaLoader {\n  private hostLanguage = '';\n  private counter = 0;\n  /**\n   * Check for `render()` method. `window.grecaptcha` will exist if the Enterprise\n   * version of the ReCAPTCHA script was loaded by someone else (e.g. App Check) but\n   * `window.grecaptcha.render()` will not. Another load will add it.\n   */\n  private readonly librarySeparatelyLoaded = !!_window().grecaptcha?.render;\n\n  load(auth: AuthInternal, hl = ''): Promise<Recaptcha> {\n    _assert(isHostLanguageValid(hl), auth, AuthErrorCode.ARGUMENT_ERROR);\n\n    if (this.shouldResolveImmediately(hl)) {\n      return Promise.resolve(_window().grecaptcha!);\n    }\n    return new Promise<Recaptcha>((resolve, reject) => {\n      const networkTimeout = _window().setTimeout(() => {\n        reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n      }, NETWORK_TIMEOUT_DELAY.get());\n\n      _window()[_JSLOAD_CALLBACK] = () => {\n        _window().clearTimeout(networkTimeout);\n        delete _window()[_JSLOAD_CALLBACK];\n\n        const recaptcha = _window().grecaptcha;\n\n        if (!recaptcha) {\n          reject(_createError(auth, AuthErrorCode.INTERNAL_ERROR));\n          return;\n        }\n\n        // Wrap the greptcha render function so that we know if the developer has\n        // called it separately\n        const render = recaptcha.render;\n        recaptcha.render = (container, params) => {\n          const widgetId = render(container, params);\n          this.counter++;\n          return widgetId;\n        };\n\n        this.hostLanguage = hl;\n        resolve(recaptcha);\n      };\n\n      const url = `${RECAPTCHA_BASE}?${querystring({\n        onload: _JSLOAD_CALLBACK,\n        render: 'explicit',\n        hl\n      })}`;\n\n      jsHelpers._loadJS(url).catch(() => {\n        clearTimeout(networkTimeout);\n        reject(_createError(auth, AuthErrorCode.INTERNAL_ERROR));\n      });\n    });\n  }\n\n  clearedOneInstance(): void {\n    this.counter--;\n  }\n\n  private shouldResolveImmediately(hl: string): boolean {\n    // We can resolve immediately if:\n    //   • grecaptcha is already defined AND (\n    //     1. the requested language codes are the same OR\n    //     2. there exists already a ReCaptcha on the page\n    //     3. the library was already loaded by the app\n    // In cases (2) and (3), we _can't_ reload as it would break the recaptchas\n    // that are already in the page\n    return (\n      !!_window().grecaptcha?.render &&\n      (hl === this.hostLanguage ||\n        this.counter > 0 ||\n        this.librarySeparatelyLoaded)\n    );\n  }\n}\n\nfunction isHostLanguageValid(hl: string): boolean {\n  return hl.length <= 6 && /^\\s*[a-zA-Z0-9\\-]*\\s*$/.test(hl);\n}\n\nexport class MockReCaptchaLoaderImpl implements ReCaptchaLoader {\n  async load(auth: AuthInternal): Promise<Recaptcha> {\n    return new MockReCaptcha(auth);\n  }\n\n  clearedOneInstance(): void {}\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Auth, RecaptchaParameters } from '../../model/public_types';\nimport { getRecaptchaParams } from '../../api/authentication/recaptcha';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport { _isHttpOrHttps } from '../../core/util/location';\nimport { ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport { _isWorker } from '../util/worker';\nimport { Recaptcha } from './recaptcha';\nimport {\n  MockReCaptchaLoaderImpl,\n  ReCaptchaLoader,\n  ReCaptchaLoaderImpl\n} from './recaptcha_loader';\n\nexport const RECAPTCHA_VERIFIER_TYPE = 'recaptcha';\n\nconst DEFAULT_PARAMS: RecaptchaParameters = {\n  theme: 'light',\n  type: 'image'\n};\n\ntype TokenCallback = (token: string) => void;\n\n/**\n * An {@link https://www.google.com/recaptcha/ | reCAPTCHA}-based application verifier.\n *\n * @public\n */\nexport class RecaptchaVerifier implements ApplicationVerifierInternal {\n  /**\n   * The application verifier type.\n   *\n   * @remarks\n   * For a reCAPTCHA verifier, this is 'recaptcha'.\n   */\n  readonly type = RECAPTCHA_VERIFIER_TYPE;\n  private destroyed = false;\n  private widgetId: number | null = null;\n  private readonly container: HTMLElement;\n  private readonly isInvisible: boolean;\n  private readonly tokenChangeListeners = new Set<TokenCallback>();\n  private renderPromise: Promise<number> | null = null;\n  private readonly auth: AuthInternal;\n\n  /** @internal */\n  readonly _recaptchaLoader: ReCaptchaLoader;\n  private recaptcha: Recaptcha | null = null;\n\n  /**\n   *\n   * @param containerOrId - The reCAPTCHA container parameter.\n   *\n   * @remarks\n   * This has different meaning depending on whether the reCAPTCHA is hidden or visible. For a\n   * visible reCAPTCHA the container must be empty. If a string is used, it has to correspond to\n   * an element ID. The corresponding element must also must be in the DOM at the time of\n   * initialization.\n   *\n   * @param parameters - The optional reCAPTCHA parameters.\n   *\n   * @remarks\n   * Check the reCAPTCHA docs for a comprehensive list. All parameters are accepted except for\n   * the sitekey. Firebase Auth backend provisions a reCAPTCHA for each project and will\n   * configure this upon rendering. For an invisible reCAPTCHA, a size key must have the value\n   * 'invisible'.\n   *\n   * @param authExtern - The corresponding Firebase {@link Auth} instance.\n   */\n  constructor(\n    containerOrId: HTMLElement | string,\n    private readonly parameters: RecaptchaParameters = {\n      ...DEFAULT_PARAMS\n    },\n    authExtern: Auth\n  ) {\n    this.auth = _castAuth(authExtern);\n    this.isInvisible = this.parameters.size === 'invisible';\n    _assert(\n      typeof document !== 'undefined',\n      this.auth,\n      AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    const container =\n      typeof containerOrId === 'string'\n        ? document.getElementById(containerOrId)\n        : containerOrId;\n    _assert(container, this.auth, AuthErrorCode.ARGUMENT_ERROR);\n\n    this.container = container;\n    this.parameters.callback = this.makeTokenCallback(this.parameters.callback);\n\n    this._recaptchaLoader = this.auth.settings.appVerificationDisabledForTesting\n      ? new MockReCaptchaLoaderImpl()\n      : new ReCaptchaLoaderImpl();\n\n    this.validateStartingState();\n    // TODO: Figure out if sdk version is needed\n  }\n\n  /**\n   * Waits for the user to solve the reCAPTCHA and resolves with the reCAPTCHA token.\n   *\n   * @returns A Promise for the reCAPTCHA token.\n   */\n  async verify(): Promise<string> {\n    this.assertNotDestroyed();\n    const id = await this.render();\n    const recaptcha = this.getAssertedRecaptcha();\n\n    const response = recaptcha.getResponse(id);\n    if (response) {\n      return response;\n    }\n\n    return new Promise<string>(resolve => {\n      const tokenChange = (token: string): void => {\n        if (!token) {\n          return; // Ignore token expirations.\n        }\n        this.tokenChangeListeners.delete(tokenChange);\n        resolve(token);\n      };\n\n      this.tokenChangeListeners.add(tokenChange);\n      if (this.isInvisible) {\n        recaptcha.execute(id);\n      }\n    });\n  }\n\n  /**\n   * Renders the reCAPTCHA widget on the page.\n   *\n   * @returns A Promise that resolves with the reCAPTCHA widget ID.\n   */\n  render(): Promise<number> {\n    try {\n      this.assertNotDestroyed();\n    } catch (e) {\n      // This method returns a promise. Since it's not async (we want to return the\n      // _same_ promise if rendering is still occurring), the API surface should\n      // reject with the error rather than just throw\n      return Promise.reject(e);\n    }\n\n    if (this.renderPromise) {\n      return this.renderPromise;\n    }\n\n    this.renderPromise = this.makeRenderPromise().catch(e => {\n      this.renderPromise = null;\n      throw e;\n    });\n\n    return this.renderPromise;\n  }\n\n  /** @internal */\n  _reset(): void {\n    this.assertNotDestroyed();\n    if (this.widgetId !== null) {\n      this.getAssertedRecaptcha().reset(this.widgetId);\n    }\n  }\n\n  /**\n   * Clears the reCAPTCHA widget from the page and destroys the instance.\n   */\n  clear(): void {\n    this.assertNotDestroyed();\n    this.destroyed = true;\n    this._recaptchaLoader.clearedOneInstance();\n    if (!this.isInvisible) {\n      this.container.childNodes.forEach(node => {\n        this.container.removeChild(node);\n      });\n    }\n  }\n\n  private validateStartingState(): void {\n    _assert(!this.parameters.sitekey, this.auth, AuthErrorCode.ARGUMENT_ERROR);\n    _assert(\n      this.isInvisible || !this.container.hasChildNodes(),\n      this.auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    _assert(\n      typeof document !== 'undefined',\n      this.auth,\n      AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n  }\n\n  private makeTokenCallback(\n    existing: TokenCallback | string | undefined\n  ): TokenCallback {\n    return token => {\n      this.tokenChangeListeners.forEach(listener => listener(token));\n      if (typeof existing === 'function') {\n        existing(token);\n      } else if (typeof existing === 'string') {\n        const globalFunc = _window()[existing];\n        if (typeof globalFunc === 'function') {\n          globalFunc(token);\n        }\n      }\n    };\n  }\n\n  private assertNotDestroyed(): void {\n    _assert(!this.destroyed, this.auth, AuthErrorCode.INTERNAL_ERROR);\n  }\n\n  private async makeRenderPromise(): Promise<number> {\n    await this.init();\n    if (!this.widgetId) {\n      let container = this.container;\n      if (!this.isInvisible) {\n        const guaranteedEmpty = document.createElement('div');\n        container.appendChild(guaranteedEmpty);\n        container = guaranteedEmpty;\n      }\n\n      this.widgetId = this.getAssertedRecaptcha().render(\n        container,\n        this.parameters\n      );\n    }\n\n    return this.widgetId;\n  }\n\n  private async init(): Promise<void> {\n    _assert(\n      _isHttpOrHttps() && !_isWorker(),\n      this.auth,\n      AuthErrorCode.INTERNAL_ERROR\n    );\n\n    await domReady();\n    this.recaptcha = await this._recaptchaLoader.load(\n      this.auth,\n      this.auth.languageCode || undefined\n    );\n\n    const siteKey = await getRecaptchaParams(this.auth);\n    _assert(siteKey, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    this.parameters.sitekey = siteKey;\n  }\n\n  private getAssertedRecaptcha(): Recaptcha {\n    _assert(this.recaptcha, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return this.recaptcha;\n  }\n}\n\nfunction domReady(): Promise<void> {\n  let resolver: (() => void) | null = null;\n  return new Promise<void>(resolve => {\n    if (document.readyState === 'complete') {\n      resolve();\n      return;\n    }\n\n    // Document not ready, wait for load before resolving.\n    // Save resolver, so we can remove listener in case it was externally\n    // cancelled.\n    resolver = () => resolve();\n    window.addEventListener('load', resolver);\n  }).catch(e => {\n    if (resolver) {\n      window.removeEventListener('load', resolver);\n    }\n\n    throw e;\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ApplicationVerifier,\n  Auth,\n  ConfirmationResult,\n  PhoneInfoOptions,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { startEnrollPhoneMfa } from '../../api/account_management/mfa';\nimport { startSignInPhoneMfa } from '../../api/authentication/mfa';\nimport { sendPhoneVerificationCode } from '../../api/authentication/sms';\nimport { ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { PhoneAuthCredential } from '../../core/credentials/phone';\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assertLinkedStatus, _link } from '../../core/user/link_unlink';\nimport { _assert } from '../../core/util/assert';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  linkWithCredential,\n  reauthenticateWithCredential,\n  signInWithCredential\n} from '../../core/strategies/credential';\nimport {\n  MultiFactorSessionImpl,\n  MultiFactorSessionType\n} from '../../mfa/mfa_session';\nimport { UserInternal } from '../../model/user';\nimport { RECAPTCHA_VERIFIER_TYPE } from '../recaptcha/recaptcha_verifier';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { getModularInstance } from '@firebase/util';\nimport { ProviderId } from '../../model/enums';\n\ninterface OnConfirmationCallback {\n  (credential: PhoneAuthCredential): Promise<UserCredential>;\n}\n\nclass ConfirmationResultImpl implements ConfirmationResult {\n  constructor(\n    readonly verificationId: string,\n    private readonly onConfirmation: OnConfirmationCallback\n  ) {}\n\n  confirm(verificationCode: string): Promise<UserCredential> {\n    const authCredential = PhoneAuthCredential._fromVerification(\n      this.verificationId,\n      verificationCode\n    );\n    return this.onConfirmation(authCredential);\n  }\n}\n\n/**\n * Asynchronously signs in using a phone number.\n *\n * @remarks\n * This method sends a code via SMS to the given\n * phone number, and returns a {@link ConfirmationResult}. After the user\n * provides the code sent to their phone, call {@link ConfirmationResult.confirm}\n * with the code to sign the user in.\n *\n * For abuse prevention, this method also requires a {@link ApplicationVerifier}.\n * This SDK includes a reCAPTCHA-based implementation, {@link RecaptchaVerifier}.\n * This function can work on other platforms that do not support the\n * {@link RecaptchaVerifier} (like React Native), but you need to use a\n * third-party {@link ApplicationVerifier} implementation.\n *\n * @example\n * ```javascript\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\n * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n * // Obtain a verificationCode from the user.\n * const credential = await confirmationResult.confirm(verificationCode);\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function signInWithPhoneNumber(\n  auth: Auth,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const authInternal = _castAuth(auth);\n  const verificationId = await _verifyPhoneNumber(\n    authInternal,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    signInWithCredential(authInternal, cred)\n  );\n}\n\n/**\n * Links the user account with the given phone number.\n *\n * @param user - The user.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function linkWithPhoneNumber(\n  user: User,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  await _assertLinkedStatus(false, userInternal, ProviderId.PHONE);\n  const verificationId = await _verifyPhoneNumber(\n    userInternal.auth,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    linkWithCredential(userInternal, cred)\n  );\n}\n\n/**\n * Re-authenticates a user using a fresh phone credential.\n *\n * @remarks Use before operations such as {@link updatePassword} that require tokens from recent sign-in attempts.\n *\n * @param user - The user.\n * @param phoneNumber - The user's phone number in E.164 format (e.g. +16505550101).\n * @param appVerifier - The {@link ApplicationVerifier}.\n *\n * @public\n */\nexport async function reauthenticateWithPhoneNumber(\n  user: User,\n  phoneNumber: string,\n  appVerifier: ApplicationVerifier\n): Promise<ConfirmationResult> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  const verificationId = await _verifyPhoneNumber(\n    userInternal.auth,\n    phoneNumber,\n    getModularInstance(appVerifier as ApplicationVerifierInternal)\n  );\n  return new ConfirmationResultImpl(verificationId, cred =>\n    reauthenticateWithCredential(userInternal, cred)\n  );\n}\n\n/**\n * Returns a verification ID to be used in conjunction with the SMS code that is sent.\n *\n */\nexport async function _verifyPhoneNumber(\n  auth: AuthInternal,\n  options: PhoneInfoOptions | string,\n  verifier: ApplicationVerifierInternal\n): Promise<string> {\n  const recaptchaToken = await verifier.verify();\n\n  try {\n    _assert(\n      typeof recaptchaToken === 'string',\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n    _assert(\n      verifier.type === RECAPTCHA_VERIFIER_TYPE,\n      auth,\n      AuthErrorCode.ARGUMENT_ERROR\n    );\n\n    let phoneInfoOptions: PhoneInfoOptions;\n\n    if (typeof options === 'string') {\n      phoneInfoOptions = {\n        phoneNumber: options\n      };\n    } else {\n      phoneInfoOptions = options;\n    }\n\n    if ('session' in phoneInfoOptions) {\n      const session = phoneInfoOptions.session as MultiFactorSessionImpl;\n\n      if ('phoneNumber' in phoneInfoOptions) {\n        _assert(\n          session.type === MultiFactorSessionType.ENROLL,\n          auth,\n          AuthErrorCode.INTERNAL_ERROR\n        );\n        const response = await startEnrollPhoneMfa(auth, {\n          idToken: session.credential,\n          phoneEnrollmentInfo: {\n            phoneNumber: phoneInfoOptions.phoneNumber,\n            recaptchaToken\n          }\n        });\n        return response.phoneSessionInfo.sessionInfo;\n      } else {\n        _assert(\n          session.type === MultiFactorSessionType.SIGN_IN,\n          auth,\n          AuthErrorCode.INTERNAL_ERROR\n        );\n        const mfaEnrollmentId =\n          phoneInfoOptions.multiFactorHint?.uid ||\n          phoneInfoOptions.multiFactorUid;\n        _assert(mfaEnrollmentId, auth, AuthErrorCode.MISSING_MFA_INFO);\n        const response = await startSignInPhoneMfa(auth, {\n          mfaPendingCredential: session.credential,\n          mfaEnrollmentId,\n          phoneSignInInfo: {\n            recaptchaToken\n          }\n        });\n        return response.phoneResponseInfo.sessionInfo;\n      }\n    } else {\n      const { sessionInfo } = await sendPhoneVerificationCode(auth, {\n        phoneNumber: phoneInfoOptions.phoneNumber,\n        recaptchaToken\n      });\n      return sessionInfo;\n    }\n  } finally {\n    verifier._reset();\n  }\n}\n\n/**\n * Updates the user's phone number.\n *\n * @example\n * ```\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\n * const provider = new PhoneAuthProvider(auth);\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\n * // Obtain the verificationCode from the user.\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n * await updatePhoneNumber(user, phoneCredential);\n * ```\n *\n * @param user - The user.\n * @param credential - A credential authenticating the new phone number.\n *\n * @public\n */\nexport async function updatePhoneNumber(\n  user: User,\n  credential: PhoneAuthCredential\n): Promise<void> {\n  await _link(getModularInstance(user) as UserInternal, credential);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  PhoneInfoOptions,\n  ApplicationVerifier,\n  UserCredential\n} from '../../model/public_types';\n\nimport { SignInWithPhoneNumberResponse } from '../../api/authentication/sms';\nimport { ApplicationVerifierInternal as ApplicationVerifierInternal } from '../../model/application_verifier';\nimport { AuthInternal as AuthInternal } from '../../model/auth';\nimport { UserCredentialInternal as UserCredentialInternal } from '../../model/user';\nimport { PhoneAuthCredential } from '../../core/credentials/phone';\nimport { _verifyPhoneNumber } from '../strategies/phone';\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthCredential } from '../../core';\nimport { FirebaseError, getModularInstance } from '@firebase/util';\nimport { TaggedWithTokenResponse } from '../../model/id_token';\nimport { ProviderId, SignInMethod } from '../../model/enums';\n\n/**\n * Provider for generating an {@link PhoneAuthCredential}.\n *\n * @example\n * ```javascript\n * // 'recaptcha-container' is the ID of an element in the DOM.\n * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');\n * const provider = new PhoneAuthProvider(auth);\n * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);\n * // Obtain the verificationCode from the user.\n * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n * const userCredential = await signInWithCredential(auth, phoneCredential);\n * ```\n *\n * @public\n */\nexport class PhoneAuthProvider {\n  /** Always set to {@link ProviderId}.PHONE. */\n  static readonly PROVIDER_ID: 'phone' = ProviderId.PHONE;\n  /** Always set to {@link SignInMethod}.PHONE. */\n  static readonly PHONE_SIGN_IN_METHOD: 'phone' = SignInMethod.PHONE;\n\n  /** Always set to {@link ProviderId}.PHONE. */\n  readonly providerId = PhoneAuthProvider.PROVIDER_ID;\n  private readonly auth: AuthInternal;\n\n  /**\n   * @param auth - The Firebase {@link Auth} instance in which sign-ins should occur.\n   *\n   */\n  constructor(auth: Auth) {\n    this.auth = _castAuth(auth);\n  }\n\n  /**\n   *\n   * Starts a phone number authentication flow by sending a verification code to the given phone\n   * number.\n   *\n   * @example\n   * ```javascript\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = await provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n   * const userCredential = await signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * An alternative flow is provided using the `signInWithPhoneNumber` method.\n   * ```javascript\n   * const confirmationResult = signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const userCredential = confirmationResult.confirm(verificationCode);\n   * ```\n   *\n   * @param phoneInfoOptions - The user's {@link PhoneInfoOptions}. The phone number should be in\n   * E.164 format (e.g. +16505550101).\n   * @param applicationVerifier - For abuse prevention, this method also requires a\n   * {@link ApplicationVerifier}. This SDK includes a reCAPTCHA-based implementation,\n   * {@link RecaptchaVerifier}.\n   *\n   * @returns A Promise for a verification ID that can be passed to\n   * {@link PhoneAuthProvider.credential} to identify this flow..\n   */\n  verifyPhoneNumber(\n    phoneOptions: PhoneInfoOptions | string,\n    applicationVerifier: ApplicationVerifier\n  ): Promise<string> {\n    return _verifyPhoneNumber(\n      this.auth,\n      phoneOptions,\n      getModularInstance(applicationVerifier as ApplicationVerifierInternal)\n    );\n  }\n\n  /**\n   * Creates a phone auth credential, given the verification ID from\n   * {@link PhoneAuthProvider.verifyPhoneNumber} and the code that was sent to the user's\n   * mobile device.\n   *\n   * @example\n   * ```javascript\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = provider.verifyPhoneNumber(phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);\n   * const userCredential = signInWithCredential(auth, authCredential);\n   * ```\n   *\n   * @example\n   * An alternative flow is provided using the `signInWithPhoneNumber` method.\n   * ```javascript\n   * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);\n   * // Obtain verificationCode from the user.\n   * const userCredential = await confirmationResult.confirm(verificationCode);\n   * ```\n   *\n   * @param verificationId - The verification ID returned from {@link PhoneAuthProvider.verifyPhoneNumber}.\n   * @param verificationCode - The verification code sent to the user's mobile device.\n   *\n   * @returns The auth provider credential.\n   */\n  static credential(\n    verificationId: string,\n    verificationCode: string\n  ): PhoneAuthCredential {\n    return PhoneAuthCredential._fromVerification(\n      verificationId,\n      verificationCode\n    );\n  }\n\n  /**\n   * Generates an {@link AuthCredential} from a {@link UserCredential}.\n   * @param userCredential - The user credential.\n   */\n  static credentialFromResult(\n    userCredential: UserCredential\n  ): AuthCredential | null {\n    const credential = userCredential as UserCredentialInternal;\n    return PhoneAuthProvider.credentialFromTaggedObject(credential);\n  }\n\n  /**\n   * Returns an {@link AuthCredential} when passed an error.\n   *\n   * @remarks\n   *\n   * This method works for errors like\n   * `auth/account-exists-with-different-credentials`. This is useful for\n   * recovering when attempting to set a user's phone number but the number\n   * in question is already tied to another account. For example, the following\n   * code tries to update the current user's phone number, and if that\n   * fails, links the user with the account associated with that number:\n   *\n   * ```js\n   * const provider = new PhoneAuthProvider(auth);\n   * const verificationId = await provider.verifyPhoneNumber(number, verifier);\n   * try {\n   *   const code = ''; // Prompt the user for the verification code\n   *   await updatePhoneNumber(\n   *       auth.currentUser,\n   *       PhoneAuthProvider.credential(verificationId, code));\n   * } catch (e) {\n   *   if ((e as FirebaseError)?.code === 'auth/account-exists-with-different-credential') {\n   *     const cred = PhoneAuthProvider.credentialFromError(e);\n   *     await linkWithCredential(auth.currentUser, cred);\n   *   }\n   * }\n   *\n   * // At this point, auth.currentUser.phoneNumber === number.\n   * ```\n   *\n   * @param error - The error to generate a credential from.\n   */\n  static credentialFromError(error: FirebaseError): AuthCredential | null {\n    return PhoneAuthProvider.credentialFromTaggedObject(\n      (error.customData || {}) as TaggedWithTokenResponse\n    );\n  }\n\n  private static credentialFromTaggedObject({\n    _tokenResponse: tokenResponse\n  }: TaggedWithTokenResponse): AuthCredential | null {\n    if (!tokenResponse) {\n      return null;\n    }\n    const { phoneNumber, temporaryProof } =\n      tokenResponse as SignInWithPhoneNumberResponse;\n    if (phoneNumber && temporaryProof) {\n      return PhoneAuthCredential._fromTokenResponse(\n        phoneNumber,\n        temporaryProof\n      );\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PopupRedirectResolver } from '../../model/public_types';\nimport { AuthInternal } from '../../model/auth';\nimport { PopupRedirectResolverInternal } from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from './assert';\nimport { _getInstance } from './instantiator';\n\n/**\n * Chooses a popup/redirect resolver to use. This prefers the override (which\n * is directly passed in), and falls back to the property set on the auth\n * object. If neither are available, this function errors w/ an argument error.\n */\nexport function _withDefaultResolver(\n  auth: AuthInternal,\n  resolverOverride: PopupRedirectResolver | undefined\n): PopupRedirectResolverInternal {\n  if (resolverOverride) {\n    return _getInstance(resolverOverride);\n  }\n\n  _assert(auth._popupRedirectResolver, auth, AuthErrorCode.ARGUMENT_ERROR);\n\n  return auth._popupRedirectResolver;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  signInWithIdp,\n  SignInWithIdpRequest\n} from '../../api/authentication/idp';\nimport { PhoneOrOauthTokenResponse } from '../../api/authentication/mfa';\nimport { AuthInternal } from '../../model/auth';\nimport { IdTokenResponse } from '../../model/id_token';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthCredential } from '../credentials';\nimport { _link as _linkUser } from '../user/link_unlink';\nimport { _reauthenticate } from '../user/reauthenticate';\nimport { _assert } from '../util/assert';\nimport { _signInWithCredential } from './credential';\nimport { AuthErrorCode } from '../errors';\nimport { ProviderId } from '../../model/enums';\n\nexport interface IdpTaskParams {\n  auth: AuthInternal;\n  requestUri: string;\n  sessionId?: string;\n  tenantId?: string;\n  postBody?: string;\n  pendingToken?: string;\n  user?: UserInternal;\n  bypassAuthState?: boolean;\n}\n\nexport type IdpTask = (\n  params: IdpTaskParams\n) => Promise<UserCredentialInternal>;\n\nclass IdpCredential extends AuthCredential {\n  constructor(readonly params: IdpTaskParams) {\n    super(ProviderId.CUSTOM, ProviderId.CUSTOM);\n  }\n\n  _getIdTokenResponse(auth: AuthInternal): Promise<PhoneOrOauthTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest());\n  }\n\n  _linkToIdToken(\n    auth: AuthInternal,\n    idToken: string\n  ): Promise<IdTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest(idToken));\n  }\n\n  _getReauthenticationResolver(auth: AuthInternal): Promise<IdTokenResponse> {\n    return signInWithIdp(auth, this._buildIdpRequest());\n  }\n\n  private _buildIdpRequest(idToken?: string): SignInWithIdpRequest {\n    const request: SignInWithIdpRequest = {\n      requestUri: this.params.requestUri,\n      sessionId: this.params.sessionId,\n      postBody: this.params.postBody,\n      tenantId: this.params.tenantId,\n      pendingToken: this.params.pendingToken,\n      returnSecureToken: true,\n      returnIdpCredential: true\n    };\n\n    if (idToken) {\n      request.idToken = idToken;\n    }\n\n    return request;\n  }\n}\n\nexport function _signIn(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  return _signInWithCredential(\n    params.auth,\n    new IdpCredential(params),\n    params.bypassAuthState\n  ) as Promise<UserCredentialInternal>;\n}\n\nexport function _reauth(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  const { auth, user } = params;\n  _assert(user, auth, AuthErrorCode.INTERNAL_ERROR);\n  return _reauthenticate(\n    user,\n    new IdpCredential(params),\n    params.bypassAuthState\n  );\n}\n\nexport async function _link(\n  params: IdpTaskParams\n): Promise<UserCredentialInternal> {\n  const { auth, user } = params;\n  _assert(user, auth, AuthErrorCode.INTERNAL_ERROR);\n  return _linkUser(user, new IdpCredential(params), params.bypassAuthState);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport {\n  AuthEvent,\n  AuthEventConsumer,\n  AuthEventType,\n  EventManager,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserInternal, UserCredentialInternal } from '../../model/user';\nimport { AuthErrorCode } from '../errors';\nimport { debugAssert, _fail } from '../util/assert';\nimport {\n  _link,\n  _reauth,\n  _signIn,\n  IdpTask,\n  IdpTaskParams\n} from '../strategies/idp';\nimport { AuthInternal } from '../../model/auth';\n\ninterface PendingPromise {\n  resolve: (cred: UserCredentialInternal | null) => void;\n  reject: (error: Error) => void;\n}\n\n/**\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\n * events\n */\nexport abstract class AbstractPopupRedirectOperation\n  implements AuthEventConsumer\n{\n  private pendingPromise: PendingPromise | null = null;\n  private eventManager: EventManager | null = null;\n  readonly filter: AuthEventType[];\n\n  abstract eventId: string | null;\n\n  constructor(\n    protected readonly auth: AuthInternal,\n    filter: AuthEventType | AuthEventType[],\n    protected readonly resolver: PopupRedirectResolverInternal,\n    protected user?: UserInternal,\n    protected readonly bypassAuthState = false\n  ) {\n    this.filter = Array.isArray(filter) ? filter : [filter];\n  }\n\n  abstract onExecution(): Promise<void>;\n\n  execute(): Promise<UserCredentialInternal | null> {\n    return new Promise<UserCredentialInternal | null>(\n      async (resolve, reject) => {\n        this.pendingPromise = { resolve, reject };\n\n        try {\n          this.eventManager = await this.resolver._initialize(this.auth);\n          await this.onExecution();\n          this.eventManager.registerConsumer(this);\n        } catch (e) {\n          this.reject(e as Error);\n        }\n      }\n    );\n  }\n\n  async onAuthEvent(event: AuthEvent): Promise<void> {\n    const { urlResponse, sessionId, postBody, tenantId, error, type } = event;\n    if (error) {\n      this.reject(error);\n      return;\n    }\n\n    const params: IdpTaskParams = {\n      auth: this.auth,\n      requestUri: urlResponse!,\n      sessionId: sessionId!,\n      tenantId: tenantId || undefined,\n      postBody: postBody || undefined,\n      user: this.user,\n      bypassAuthState: this.bypassAuthState\n    };\n\n    try {\n      this.resolve(await this.getIdpTask(type)(params));\n    } catch (e) {\n      this.reject(e as Error);\n    }\n  }\n\n  onError(error: FirebaseError): void {\n    this.reject(error);\n  }\n\n  private getIdpTask(type: AuthEventType): IdpTask {\n    switch (type) {\n      case AuthEventType.SIGN_IN_VIA_POPUP:\n      case AuthEventType.SIGN_IN_VIA_REDIRECT:\n        return _signIn;\n      case AuthEventType.LINK_VIA_POPUP:\n      case AuthEventType.LINK_VIA_REDIRECT:\n        return _link;\n      case AuthEventType.REAUTH_VIA_POPUP:\n      case AuthEventType.REAUTH_VIA_REDIRECT:\n        return _reauth;\n      default:\n        _fail(this.auth, AuthErrorCode.INTERNAL_ERROR);\n    }\n  }\n\n  protected resolve(cred: UserCredentialInternal | null): void {\n    debugAssert(this.pendingPromise, 'Pending promise was never set');\n    this.pendingPromise.resolve(cred);\n    this.unregisterAndCleanUp();\n  }\n\n  protected reject(error: Error): void {\n    debugAssert(this.pendingPromise, 'Pending promise was never set');\n    this.pendingPromise.reject(error);\n    this.unregisterAndCleanUp();\n  }\n\n  private unregisterAndCleanUp(): void {\n    if (this.eventManager) {\n      this.eventManager.unregisterConsumer(this);\n    }\n\n    this.pendingPromise = null;\n    this.cleanUp();\n  }\n\n  abstract cleanUp(): void;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  AuthProvider,\n  PopupRedirectResolver,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { AuthErrorCode } from '../../core/errors';\nimport {\n  _assert,\n  debugAssert,\n  _createError,\n  _assertInstanceOf\n} from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { _generateEventId } from '../../core/util/event_id';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  AuthEventType,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport { _withDefaultResolver } from '../../core/util/resolver';\nimport { AuthPopup } from '../util/popup';\nimport { AbstractPopupRedirectOperation } from '../../core/strategies/abstract_popup_redirect_operation';\nimport { FederatedAuthProvider } from '../../core/providers/federated';\nimport { getModularInstance } from '@firebase/util';\n\n/*\n * The event timeout is the same on mobile and desktop, no need for Delay.\n */\nexport const enum _Timeout {\n  AUTH_EVENT = 2000\n}\nexport const _POLL_WINDOW_CLOSE_TIMEOUT = new Delay(2000, 10000);\n\n/**\n * Authenticates a Firebase client using a popup-based OAuth authentication flow.\n *\n * @remarks\n * If succeeds, returns the signed in user along with the provider's credential. If sign in was\n * unsuccessful, returns an error object containing additional information about the error.\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n *\n * // The signed-in user info.\n * const user = result.user;\n * // This gives you a Facebook Access Token.\n * const credential = provider.credentialFromResult(auth, result);\n * const token = credential.accessToken;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n *\n * @public\n */\nexport async function signInWithPopup(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  const authInternal = _castAuth(auth);\n  _assertInstanceOf(auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(authInternal, resolver);\n  const action = new PopupOperation(\n    authInternal,\n    AuthEventType.SIGN_IN_VIA_POPUP,\n    provider,\n    resolverInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a pop-up based\n * OAuth flow.\n *\n * @remarks\n * If the reauthentication is successful, the returned result will contain the user and the\n * provider's credential.\n *\n * @example\n * ```javascript\n * // Sign in using a popup.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithPopup(auth, provider);\n * // Reauthenticate using a popup.\n * await reauthenticateWithPopup(result.user, provider);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function reauthenticateWithPopup(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  const action = new PopupOperation(\n    userInternal.auth,\n    AuthEventType.REAUTH_VIA_POPUP,\n    provider,\n    resolverInternal,\n    userInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Links the authenticated provider to the user account using a pop-up based OAuth flow.\n *\n * @remarks\n * If the linking is successful, the returned result will contain the user and the provider's credential.\n *\n *\n * @example\n * ```javascript\n * // Sign in using some other provider.\n * const result = await signInWithEmailAndPassword(auth, email, password);\n * // Link using a popup.\n * const provider = new FacebookAuthProvider();\n * await linkWithPopup(result.user, provider);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function linkWithPopup(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n\n  const action = new PopupOperation(\n    userInternal.auth,\n    AuthEventType.LINK_VIA_POPUP,\n    provider,\n    resolverInternal,\n    userInternal\n  );\n  return action.executeNotNull();\n}\n\n/**\n * Popup event manager. Handles the popup's entire lifecycle; listens to auth\n * events\n *\n */\nclass PopupOperation extends AbstractPopupRedirectOperation {\n  // Only one popup is ever shown at once. The lifecycle of the current popup\n  // can be managed / cancelled by the constructor.\n  private static currentPopupAction: PopupOperation | null = null;\n  private authWindow: AuthPopup | null = null;\n  private pollId: number | null = null;\n\n  constructor(\n    auth: AuthInternal,\n    filter: AuthEventType,\n    private readonly provider: AuthProvider,\n    resolver: PopupRedirectResolverInternal,\n    user?: UserInternal\n  ) {\n    super(auth, filter, resolver, user);\n    if (PopupOperation.currentPopupAction) {\n      PopupOperation.currentPopupAction.cancel();\n    }\n\n    PopupOperation.currentPopupAction = this;\n  }\n\n  async executeNotNull(): Promise<UserCredential> {\n    const result = await this.execute();\n    _assert(result, this.auth, AuthErrorCode.INTERNAL_ERROR);\n    return result;\n  }\n\n  async onExecution(): Promise<void> {\n    debugAssert(\n      this.filter.length === 1,\n      'Popup operations only handle one event'\n    );\n    const eventId = _generateEventId();\n    this.authWindow = await this.resolver._openPopup(\n      this.auth,\n      this.provider,\n      this.filter[0], // There's always one, see constructor\n      eventId\n    );\n    this.authWindow.associatedEvent = eventId;\n\n    // Check for web storage support and origin validation _after_ the popup is\n    // loaded. These operations are slow (~1 second or so) Rather than\n    // waiting on them before opening the window, optimistically open the popup\n    // and check for storage support at the same time. If storage support is\n    // not available, this will cause the whole thing to reject properly. It\n    // will also close the popup, but since the promise has already rejected,\n    // the popup closed by user poll will reject into the void.\n    this.resolver._originValidation(this.auth).catch(e => {\n      this.reject(e);\n    });\n\n    this.resolver._isIframeWebStorageSupported(this.auth, isSupported => {\n      if (!isSupported) {\n        this.reject(\n          _createError(this.auth, AuthErrorCode.WEB_STORAGE_UNSUPPORTED)\n        );\n      }\n    });\n\n    // Handle user closure. Notice this does *not* use await\n    this.pollUserCancellation();\n  }\n\n  get eventId(): string | null {\n    return this.authWindow?.associatedEvent || null;\n  }\n\n  cancel(): void {\n    this.reject(_createError(this.auth, AuthErrorCode.EXPIRED_POPUP_REQUEST));\n  }\n\n  cleanUp(): void {\n    if (this.authWindow) {\n      this.authWindow.close();\n    }\n\n    if (this.pollId) {\n      window.clearTimeout(this.pollId);\n    }\n\n    this.authWindow = null;\n    this.pollId = null;\n    PopupOperation.currentPopupAction = null;\n  }\n\n  private pollUserCancellation(): void {\n    const poll = (): void => {\n      if (this.authWindow?.window?.closed) {\n        // Make sure that there is sufficient time for whatever action to\n        // complete. The window could have closed but the sign in network\n        // call could still be in flight.\n        this.pollId = window.setTimeout(() => {\n          this.pollId = null;\n          this.reject(\n            _createError(this.auth, AuthErrorCode.POPUP_CLOSED_BY_USER)\n          );\n        }, _Timeout.AUTH_EVENT);\n        return;\n      }\n\n      this.pollId = window.setTimeout(poll, _POLL_WINDOW_CLOSE_TIMEOUT.get());\n    };\n\n    poll();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthInternal } from '../../model/auth';\nimport {\n  AuthEvent,\n  AuthEventType,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { UserCredentialInternal } from '../../model/user';\nimport { PersistenceInternal } from '../persistence';\nimport { _persistenceKeyName } from '../persistence/persistence_user_manager';\nimport { _getInstance } from '../util/instantiator';\nimport { AbstractPopupRedirectOperation } from './abstract_popup_redirect_operation';\n\nconst PENDING_REDIRECT_KEY = 'pendingRedirect';\n\n// We only get one redirect outcome for any one auth, so just store it\n// in here.\nconst redirectOutcomeMap: Map<\n  string,\n  () => Promise<UserCredentialInternal | null>\n> = new Map();\n\nexport class RedirectAction extends AbstractPopupRedirectOperation {\n  eventId = null;\n\n  constructor(\n    auth: AuthInternal,\n    resolver: PopupRedirectResolverInternal,\n    bypassAuthState = false\n  ) {\n    super(\n      auth,\n      [\n        AuthEventType.SIGN_IN_VIA_REDIRECT,\n        AuthEventType.LINK_VIA_REDIRECT,\n        AuthEventType.REAUTH_VIA_REDIRECT,\n        AuthEventType.UNKNOWN\n      ],\n      resolver,\n      undefined,\n      bypassAuthState\n    );\n  }\n\n  /**\n   * Override the execute function; if we already have a redirect result, then\n   * just return it.\n   */\n  async execute(): Promise<UserCredentialInternal | null> {\n    let readyOutcome = redirectOutcomeMap.get(this.auth._key());\n    if (!readyOutcome) {\n      try {\n        const hasPendingRedirect = await _getAndClearPendingRedirectStatus(\n          this.resolver,\n          this.auth\n        );\n        const result = hasPendingRedirect ? await super.execute() : null;\n        readyOutcome = () => Promise.resolve(result);\n      } catch (e) {\n        readyOutcome = () => Promise.reject(e);\n      }\n\n      redirectOutcomeMap.set(this.auth._key(), readyOutcome);\n    }\n\n    // If we're not bypassing auth state, the ready outcome should be set to\n    // null.\n    if (!this.bypassAuthState) {\n      redirectOutcomeMap.set(this.auth._key(), () => Promise.resolve(null));\n    }\n\n    return readyOutcome();\n  }\n\n  async onAuthEvent(event: AuthEvent): Promise<void> {\n    if (event.type === AuthEventType.SIGN_IN_VIA_REDIRECT) {\n      return super.onAuthEvent(event);\n    } else if (event.type === AuthEventType.UNKNOWN) {\n      // This is a sentinel value indicating there's no pending redirect\n      this.resolve(null);\n      return;\n    }\n\n    if (event.eventId) {\n      const user = await this.auth._redirectUserForId(event.eventId);\n      if (user) {\n        this.user = user;\n        return super.onAuthEvent(event);\n      } else {\n        this.resolve(null);\n      }\n    }\n  }\n\n  async onExecution(): Promise<void> {}\n\n  cleanUp(): void {}\n}\n\nexport async function _getAndClearPendingRedirectStatus(\n  resolver: PopupRedirectResolverInternal,\n  auth: AuthInternal\n): Promise<boolean> {\n  const key = pendingRedirectKey(auth);\n  const persistence = resolverPersistence(resolver);\n  if (!(await persistence._isAvailable())) {\n    return false;\n  }\n  const hasPendingRedirect = (await persistence._get(key)) === 'true';\n  await persistence._remove(key);\n  return hasPendingRedirect;\n}\n\nexport async function _setPendingRedirectStatus(\n  resolver: PopupRedirectResolverInternal,\n  auth: AuthInternal\n): Promise<void> {\n  return resolverPersistence(resolver)._set(pendingRedirectKey(auth), 'true');\n}\n\nexport function _clearRedirectOutcomes(): void {\n  redirectOutcomeMap.clear();\n}\n\nexport function _overrideRedirectResult(\n  auth: AuthInternal,\n  result: () => Promise<UserCredentialInternal | null>\n): void {\n  redirectOutcomeMap.set(auth._key(), result);\n}\n\nfunction resolverPersistence(\n  resolver: PopupRedirectResolverInternal\n): PersistenceInternal {\n  return _getInstance(resolver._redirectPersistence);\n}\n\nfunction pendingRedirectKey(auth: AuthInternal): string {\n  return _persistenceKeyName(\n    PENDING_REDIRECT_KEY,\n    auth.config.apiKey,\n    auth.name\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Auth,\n  AuthProvider,\n  PopupRedirectResolver,\n  User,\n  UserCredential\n} from '../../model/public_types';\n\nimport { _castAuth } from '../../core/auth/auth_impl';\nimport { _assertLinkedStatus } from '../../core/user/link_unlink';\nimport { _assertInstanceOf } from '../../core/util/assert';\nimport { _generateEventId } from '../../core/util/event_id';\nimport { AuthEventType } from '../../model/popup_redirect';\nimport { UserInternal } from '../../model/user';\nimport { _withDefaultResolver } from '../../core/util/resolver';\nimport {\n  RedirectAction,\n  _setPendingRedirectStatus\n} from '../../core/strategies/redirect';\nimport { FederatedAuthProvider } from '../../core/providers/federated';\nimport { getModularInstance } from '@firebase/util';\n\n/**\n * Authenticates a Firebase client using a full-page redirect flow.\n *\n * @remarks\n * To handle the results and errors for this operation, refer to {@link getRedirectResult}.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // You can add additional scopes to the provider:\n * provider.addScope('user_birthday');\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * // As this API can be used for sign-in, linking and reauthentication,\n * // check the operationType to determine what triggered this redirect\n * // operation.\n * const operationType = result.operationType;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function signInWithRedirect(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _signInWithRedirect(auth, provider, resolver) as Promise<never>;\n}\n\nexport async function _signInWithRedirect(\n  auth: Auth,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  const authInternal = _castAuth(auth);\n  _assertInstanceOf(auth, provider, FederatedAuthProvider);\n  const resolverInternal = _withDefaultResolver(authInternal, resolver);\n  await _setPendingRedirectStatus(resolverInternal, authInternal);\n\n  return resolverInternal._openRedirect(\n    authInternal,\n    provider,\n    AuthEventType.SIGN_IN_VIA_REDIRECT\n  );\n}\n\n/**\n * Reauthenticates the current user with the specified {@link OAuthProvider} using a full-page redirect flow.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * const result = await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * // Link using a redirect.\n * await linkWithRedirect(result.user, provider);\n * // This will again trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport function reauthenticateWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _reauthenticateWithRedirect(\n    user,\n    provider,\n    resolver\n  ) as Promise<never>;\n}\nexport async function _reauthenticateWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  // Allow the resolver to error before persisting the redirect user\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\n\n  const eventId = await prepareUserForRedirect(userInternal);\n  return resolverInternal._openRedirect(\n    userInternal.auth,\n    provider,\n    AuthEventType.REAUTH_VIA_REDIRECT,\n    eventId\n  );\n}\n\n/**\n * Links the {@link OAuthProvider} to the user account using a full-page redirect flow.\n *\n * @example\n * ```javascript\n * // Sign in using some other provider.\n * const result = await signInWithEmailAndPassword(auth, email, password);\n * // Link using a redirect.\n * const provider = new FacebookAuthProvider();\n * await linkWithRedirect(result.user, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * ```\n *\n * @param user - The user.\n * @param provider - The provider to authenticate. The provider has to be an {@link OAuthProvider}.\n * Non-OAuth providers like {@link EmailAuthProvider} will throw an error.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n *\n * @public\n */\nexport function linkWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<never> {\n  return _linkWithRedirect(user, provider, resolver) as Promise<never>;\n}\nexport async function _linkWithRedirect(\n  user: User,\n  provider: AuthProvider,\n  resolver?: PopupRedirectResolver\n): Promise<void | never> {\n  const userInternal = getModularInstance(user) as UserInternal;\n  _assertInstanceOf(userInternal.auth, provider, FederatedAuthProvider);\n  // Allow the resolver to error before persisting the redirect user\n  const resolverInternal = _withDefaultResolver(userInternal.auth, resolver);\n  await _assertLinkedStatus(false, userInternal, provider.providerId);\n  await _setPendingRedirectStatus(resolverInternal, userInternal.auth);\n\n  const eventId = await prepareUserForRedirect(userInternal);\n  return resolverInternal._openRedirect(\n    userInternal.auth,\n    provider,\n    AuthEventType.LINK_VIA_REDIRECT,\n    eventId\n  );\n}\n\n/**\n * Returns a {@link UserCredential} from the redirect-based sign-in flow.\n *\n * @remarks\n * If sign-in succeeded, returns the signed in user. If sign-in was unsuccessful, fails with an\n * error. If no redirect operation was called, returns `null`.\n *\n * @example\n * ```javascript\n * // Sign in using a redirect.\n * const provider = new FacebookAuthProvider();\n * // You can add additional scopes to the provider:\n * provider.addScope('user_birthday');\n * // Start a sign in process for an unauthenticated user.\n * await signInWithRedirect(auth, provider);\n * // This will trigger a full page redirect away from your app\n *\n * // After returning from the redirect when your app initializes you can obtain the result\n * const result = await getRedirectResult(auth);\n * if (result) {\n *   // This is the signed-in user\n *   const user = result.user;\n *   // This gives you a Facebook Access Token.\n *   const credential = provider.credentialFromResult(auth, result);\n *   const token = credential.accessToken;\n * }\n * // As this API can be used for sign-in, linking and reauthentication,\n * // check the operationType to determine what triggered this redirect\n * // operation.\n * const operationType = result.operationType;\n * ```\n *\n * @param auth - The {@link Auth} instance.\n * @param resolver - An instance of {@link PopupRedirectResolver}, optional\n * if already supplied to {@link initializeAuth} or provided by {@link getAuth}.\n *\n * @public\n */\nexport async function getRedirectResult(\n  auth: Auth,\n  resolver?: PopupRedirectResolver\n): Promise<UserCredential | null> {\n  await _castAuth(auth)._initializationPromise;\n  return _getRedirectResult(auth, resolver, false);\n}\n\nexport async function _getRedirectResult(\n  auth: Auth,\n  resolverExtern?: PopupRedirectResolver,\n  bypassAuthState = false\n): Promise<UserCredential | null> {\n  const authInternal = _castAuth(auth);\n  const resolver = _withDefaultResolver(authInternal, resolverExtern);\n  const action = new RedirectAction(authInternal, resolver, bypassAuthState);\n  const result = await action.execute();\n\n  if (result && !bypassAuthState) {\n    delete result.user._redirectEventId;\n    await authInternal._persistUserIfCurrent(result.user as UserInternal);\n    await authInternal._setRedirectUser(null, resolverExtern);\n  }\n\n  return result;\n}\n\nasync function prepareUserForRedirect(user: UserInternal): Promise<string> {\n  const eventId = _generateEventId(`${user.uid}:::`);\n  user._redirectEventId = eventId;\n  await user.auth._setRedirectUser(user);\n  await user.auth._persistUserIfCurrent(user);\n  return eventId;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AuthEvent,\n  AuthEventConsumer,\n  AuthEventType,\n  EventManager\n} from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { AuthInternal } from '../../model/auth';\nimport { _createError } from '../util/assert';\n\n// The amount of time to store the UIDs of seen events; this is\n// set to 10 min by default\nconst EVENT_DUPLICATION_CACHE_DURATION_MS = 10 * 60 * 1000;\n\nexport class AuthEventManager implements EventManager {\n  private readonly cachedEventUids: Set<string> = new Set();\n  private readonly consumers: Set<AuthEventConsumer> = new Set();\n  protected queuedRedirectEvent: AuthEvent | null = null;\n  protected hasHandledPotentialRedirect = false;\n  private lastProcessedEventTime = Date.now();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  registerConsumer(authEventConsumer: AuthEventConsumer): void {\n    this.consumers.add(authEventConsumer);\n\n    if (\n      this.queuedRedirectEvent &&\n      this.isEventForConsumer(this.queuedRedirectEvent, authEventConsumer)\n    ) {\n      this.sendToConsumer(this.queuedRedirectEvent, authEventConsumer);\n      this.saveEventToCache(this.queuedRedirectEvent);\n      this.queuedRedirectEvent = null;\n    }\n  }\n\n  unregisterConsumer(authEventConsumer: AuthEventConsumer): void {\n    this.consumers.delete(authEventConsumer);\n  }\n\n  onEvent(event: AuthEvent): boolean {\n    // Check if the event has already been handled\n    if (this.hasEventBeenHandled(event)) {\n      return false;\n    }\n\n    let handled = false;\n    this.consumers.forEach(consumer => {\n      if (this.isEventForConsumer(event, consumer)) {\n        handled = true;\n        this.sendToConsumer(event, consumer);\n        this.saveEventToCache(event);\n      }\n    });\n\n    if (this.hasHandledPotentialRedirect || !isRedirectEvent(event)) {\n      // If we've already seen a redirect before, or this is a popup event,\n      // bail now\n      return handled;\n    }\n\n    this.hasHandledPotentialRedirect = true;\n\n    // If the redirect wasn't handled, hang on to it\n    if (!handled) {\n      this.queuedRedirectEvent = event;\n      handled = true;\n    }\n\n    return handled;\n  }\n\n  private sendToConsumer(event: AuthEvent, consumer: AuthEventConsumer): void {\n    if (event.error && !isNullRedirectEvent(event)) {\n      const code =\n        (event.error.code?.split('auth/')[1] as AuthErrorCode) ||\n        AuthErrorCode.INTERNAL_ERROR;\n      consumer.onError(_createError(this.auth, code));\n    } else {\n      consumer.onAuthEvent(event);\n    }\n  }\n\n  private isEventForConsumer(\n    event: AuthEvent,\n    consumer: AuthEventConsumer\n  ): boolean {\n    const eventIdMatches =\n      consumer.eventId === null ||\n      (!!event.eventId && event.eventId === consumer.eventId);\n    return consumer.filter.includes(event.type) && eventIdMatches;\n  }\n\n  private hasEventBeenHandled(event: AuthEvent): boolean {\n    if (\n      Date.now() - this.lastProcessedEventTime >=\n      EVENT_DUPLICATION_CACHE_DURATION_MS\n    ) {\n      this.cachedEventUids.clear();\n    }\n\n    return this.cachedEventUids.has(eventUid(event));\n  }\n\n  private saveEventToCache(event: AuthEvent): void {\n    this.cachedEventUids.add(eventUid(event));\n    this.lastProcessedEventTime = Date.now();\n  }\n}\n\nfunction eventUid(e: AuthEvent): string {\n  return [e.type, e.eventId, e.sessionId, e.tenantId].filter(v => v).join('-');\n}\n\nfunction isNullRedirectEvent({ type, error }: AuthEvent): boolean {\n  return (\n    type === AuthEventType.UNKNOWN &&\n    error?.code === `auth/${AuthErrorCode.NO_AUTH_EVENT}`\n  );\n}\n\nfunction isRedirectEvent(event: AuthEvent): boolean {\n  switch (event.type) {\n    case AuthEventType.SIGN_IN_VIA_REDIRECT:\n    case AuthEventType.LINK_VIA_REDIRECT:\n    case AuthEventType.REAUTH_VIA_REDIRECT:\n      return true;\n    case AuthEventType.UNKNOWN:\n      return isNullRedirectEvent(event);\n    default:\n      return false;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _performApiRequest, Endpoint, HttpMethod } from '../index';\nimport { Auth } from '../../model/public_types';\n\nexport interface GetProjectConfigRequest {\n  androidPackageName?: string;\n  iosBundleId?: string;\n}\n\nexport interface GetProjectConfigResponse {\n  authorizedDomains: string[];\n}\n\nexport async function _getProjectConfig(\n  auth: Auth,\n  request: GetProjectConfigRequest = {}\n): Promise<GetProjectConfigResponse> {\n  return _performApiRequest<GetProjectConfigRequest, GetProjectConfigResponse>(\n    auth,\n    HttpMethod.GET,\n    Endpoint.GET_PROJECT_CONFIG,\n    request\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProjectConfig } from '../../api/project_config/get_project_config';\nimport { AuthInternal } from '../../model/auth';\nimport { AuthErrorCode } from '../errors';\nimport { _fail } from './assert';\nimport { _getCurrentUrl } from './location';\n\nconst IP_ADDRESS_REGEX = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\nconst HTTP_REGEX = /^https?/;\n\nexport async function _validateOrigin(auth: AuthInternal): Promise<void> {\n  // Skip origin validation if we are in an emulated environment\n  if (auth.config.emulator) {\n    return;\n  }\n\n  const { authorizedDomains } = await _getProjectConfig(auth);\n\n  for (const domain of authorizedDomains) {\n    try {\n      if (matchDomain(domain)) {\n        return;\n      }\n    } catch {\n      // Do nothing if there's a URL error; just continue searching\n    }\n  }\n\n  // In the old SDK, this error also provides helpful messages.\n  _fail(auth, AuthErrorCode.INVALID_ORIGIN);\n}\n\nfunction matchDomain(expected: string): boolean {\n  const currentUrl = _getCurrentUrl();\n  const { protocol, hostname } = new URL(currentUrl);\n  if (expected.startsWith('chrome-extension://')) {\n    const ceUrl = new URL(expected);\n\n    if (ceUrl.hostname === '' && hostname === '') {\n      // For some reason we're not parsing chrome URLs properly\n      return (\n        protocol === 'chrome-extension:' &&\n        expected.replace('chrome-extension://', '') ===\n          currentUrl.replace('chrome-extension://', '')\n      );\n    }\n\n    return protocol === 'chrome-extension:' && ceUrl.hostname === hostname;\n  }\n\n  if (!HTTP_REGEX.test(protocol)) {\n    return false;\n  }\n\n  if (IP_ADDRESS_REGEX.test(expected)) {\n    // The domain has to be exactly equal to the pattern, as an IP domain will\n    // only contain the IP, no extra character.\n    return hostname === expected;\n  }\n\n  // Dots in pattern should be escaped.\n  const escapedDomainPattern = expected.replace(/\\./g, '\\\\.');\n  // Non ip address domains.\n  // domain.com = *.domain.com OR domain.com\n  const re = new RegExp(\n    '^(.+\\\\.' + escapedDomainPattern + '|' + escapedDomainPattern + ')$',\n    'i'\n  );\n  return re.test(hostname);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as js from '../load_js';\n\nconst NETWORK_TIMEOUT = new Delay(30000, 60000);\n\n/**\n * Reset unlaoded GApi modules. If gapi.load fails due to a network error,\n * it will stop working after a retrial. This is a hack to fix this issue.\n */\nfunction resetUnloadedGapiModules(): void {\n  // Clear last failed gapi.load state to force next gapi.load to first\n  // load the failed gapi.iframes module.\n  // Get gapix.beacon context.\n  const beacon = _window().___jsl;\n  // Get current hint.\n  if (beacon?.H) {\n    // Get gapi hint.\n    for (const hint of Object.keys(beacon.H)) {\n      // Requested modules.\n      beacon.H[hint].r = beacon.H[hint].r || [];\n      // Loaded modules.\n      beacon.H[hint].L = beacon.H[hint].L || [];\n      // Set requested modules to a copy of the loaded modules.\n      beacon.H[hint].r = [...beacon.H[hint].L];\n      // Clear pending callbacks.\n      if (beacon.CP) {\n        for (let i = 0; i < beacon.CP.length; i++) {\n          // Remove all failed pending callbacks.\n          beacon.CP[i] = null;\n        }\n      }\n    }\n  }\n}\n\nfunction loadGapi(auth: AuthInternal): Promise<gapi.iframes.Context> {\n  return new Promise<gapi.iframes.Context>((resolve, reject) => {\n    // Function to run when gapi.load is ready.\n    function loadGapiIframe(): void {\n      // The developer may have tried to previously run gapi.load and failed.\n      // Run this to fix that.\n      resetUnloadedGapiModules();\n      gapi.load('gapi.iframes', {\n        callback: () => {\n          resolve(gapi.iframes.getContext());\n        },\n        ontimeout: () => {\n          // The above reset may be sufficient, but having this reset after\n          // failure ensures that if the developer calls gapi.load after the\n          // connection is re-established and before another attempt to embed\n          // the iframe, it would work and would not be broken because of our\n          // failed attempt.\n          // Timeout when gapi.iframes.Iframe not loaded.\n          resetUnloadedGapiModules();\n          reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n        },\n        timeout: NETWORK_TIMEOUT.get()\n      });\n    }\n\n    if (_window().gapi?.iframes?.Iframe) {\n      // If gapi.iframes.Iframe available, resolve.\n      resolve(gapi.iframes.getContext());\n    } else if (!!_window().gapi?.load) {\n      // Gapi loader ready, load gapi.iframes.\n      loadGapiIframe();\n    } else {\n      // Create a new iframe callback when this is called so as not to overwrite\n      // any previous defined callback. This happens if this method is called\n      // multiple times in parallel and could result in the later callback\n      // overwriting the previous one. This would end up with a iframe\n      // timeout.\n      const cbName = js._generateCallbackName('iframefcb');\n      // GApi loader not available, dynamically load platform.js.\n      _window()[cbName] = () => {\n        // GApi loader should be ready.\n        if (!!gapi.load) {\n          loadGapiIframe();\n        } else {\n          // Gapi loader failed, throw error.\n          reject(_createError(auth, AuthErrorCode.NETWORK_REQUEST_FAILED));\n        }\n      };\n      // Load GApi loader.\n      return js\n        ._loadJS(`https://apis.google.com/js/api.js?onload=${cbName}`)\n        .catch(e => reject(e));\n    }\n  }).catch(error => {\n    // Reset cached promise to allow for retrial.\n    cachedGApiLoader = null;\n    throw error;\n  });\n}\n\nlet cachedGApiLoader: Promise<gapi.iframes.Context> | null = null;\nexport function _loadGapi(auth: AuthInternal): Promise<gapi.iframes.Context> {\n  cachedGApiLoader = cachedGApiLoader || loadGapi(auth);\n  return cachedGApiLoader;\n}\n\nexport function _resetLoader(): void {\n  cachedGApiLoader = null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { querystring } from '@firebase/util';\nimport { DefaultConfig } from '../../../internal';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert, _createError } from '../../core/util/assert';\nimport { Delay } from '../../core/util/delay';\nimport { _emulatorUrl } from '../../core/util/emulator';\nimport { AuthInternal } from '../../model/auth';\nimport { _window } from '../auth_window';\nimport * as gapiLoader from './gapi';\n\nconst PING_TIMEOUT = new Delay(5000, 15000);\nconst IFRAME_PATH = '__/auth/iframe';\nconst EMULATED_IFRAME_PATH = 'emulator/auth/iframe';\n\nconst IFRAME_ATTRIBUTES = {\n  style: {\n    position: 'absolute',\n    top: '-100px',\n    width: '1px',\n    height: '1px'\n  },\n  'aria-hidden': 'true',\n  tabindex: '-1'\n};\n\n// Map from apiHost to endpoint ID for passing into iframe. In current SDK, apiHost can be set to\n// anything (not from a list of endpoints with IDs as in legacy), so this is the closest we can get.\nconst EID_FROM_APIHOST = new Map([\n  [DefaultConfig.API_HOST, 'p'], // production\n  ['staging-identitytoolkit.sandbox.googleapis.com', 's'], // staging\n  ['test-identitytoolkit.sandbox.googleapis.com', 't'] // test\n]);\n\nfunction getIframeUrl(auth: AuthInternal): string {\n  const config = auth.config;\n  _assert(config.authDomain, auth, AuthErrorCode.MISSING_AUTH_DOMAIN);\n  const url = config.emulator\n    ? _emulatorUrl(config, EMULATED_IFRAME_PATH)\n    : `https://${auth.config.authDomain}/${IFRAME_PATH}`;\n\n  const params: Record<string, string> = {\n    apiKey: config.apiKey,\n    appName: auth.name,\n    v: SDK_VERSION\n  };\n  const eid = EID_FROM_APIHOST.get(auth.config.apiHost);\n  if (eid) {\n    params.eid = eid;\n  }\n  const frameworks = auth._getFrameworks();\n  if (frameworks.length) {\n    params.fw = frameworks.join(',');\n  }\n  return `${url}?${querystring(params).slice(1)}`;\n}\n\nexport async function _openIframe(\n  auth: AuthInternal\n): Promise<gapi.iframes.Iframe> {\n  const context = await gapiLoader._loadGapi(auth);\n  const gapi = _window().gapi;\n  _assert(gapi, auth, AuthErrorCode.INTERNAL_ERROR);\n  return context.open(\n    {\n      where: document.body,\n      url: getIframeUrl(auth),\n      messageHandlersFilter: gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER,\n      attributes: IFRAME_ATTRIBUTES,\n      dontclear: true\n    },\n    (iframe: gapi.iframes.Iframe) =>\n      new Promise(async (resolve, reject) => {\n        await iframe.restyle({\n          // Prevent iframe from closing on mouse out.\n          setHideOnLeave: false\n        });\n\n        const networkError = _createError(\n          auth,\n          AuthErrorCode.NETWORK_REQUEST_FAILED\n        );\n        // Confirm iframe is correctly loaded.\n        // To fallback on failure, set a timeout.\n        const networkErrorTimer = _window().setTimeout(() => {\n          reject(networkError);\n        }, PING_TIMEOUT.get());\n        // Clear timer and resolve pending iframe ready promise.\n        function clearTimerAndResolve(): void {\n          _window().clearTimeout(networkErrorTimer);\n          resolve(iframe);\n        }\n        // This returns an IThenable. However the reject part does not call\n        // when the iframe is not loaded.\n        iframe.ping(clearTimerAndResolve).then(clearTimerAndResolve, () => {\n          reject(networkError);\n        });\n      })\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getUA } from '@firebase/util';\n\nimport { AuthErrorCode } from '../../core/errors';\nimport { _assert } from '../../core/util/assert';\nimport {\n  _isChromeIOS,\n  _isFirefox,\n  _isIOSStandalone\n} from '../../core/util/browser';\nimport { AuthInternal } from '../../model/auth';\n\nconst BASE_POPUP_OPTIONS = {\n  location: 'yes',\n  resizable: 'yes',\n  statusbar: 'yes',\n  toolbar: 'no'\n};\n\nconst DEFAULT_WIDTH = 500;\nconst DEFAULT_HEIGHT = 600;\nconst TARGET_BLANK = '_blank';\n\nconst FIREFOX_EMPTY_URL = 'http://localhost';\n\nexport class AuthPopup {\n  associatedEvent: string | null = null;\n\n  constructor(readonly window: Window | null) {}\n\n  close(): void {\n    if (this.window) {\n      try {\n        this.window.close();\n      } catch (e) {}\n    }\n  }\n}\n\nexport function _open(\n  auth: AuthInternal,\n  url?: string,\n  name?: string,\n  width = DEFAULT_WIDTH,\n  height = DEFAULT_HEIGHT\n): AuthPopup {\n  const top = Math.max((window.screen.availHeight - height) / 2, 0).toString();\n  const left = Math.max((window.screen.availWidth - width) / 2, 0).toString();\n  let target = '';\n\n  const options: { [key: string]: string } = {\n    ...BASE_POPUP_OPTIONS,\n    width: width.toString(),\n    height: height.toString(),\n    top,\n    left\n  };\n\n  // Chrome iOS 7 and 8 is returning an undefined popup win when target is\n  // specified, even though the popup is not necessarily blocked.\n  const ua = getUA().toLowerCase();\n\n  if (name) {\n    target = _isChromeIOS(ua) ? TARGET_BLANK : name;\n  }\n\n  if (_isFirefox(ua)) {\n    // Firefox complains when invalid URLs are popped out. Hacky way to bypass.\n    url = url || FIREFOX_EMPTY_URL;\n    // Firefox disables by default scrolling on popup windows, which can create\n    // issues when the user has many Google accounts, for instance.\n    options.scrollbars = 'yes';\n  }\n\n  const optionsString = Object.entries(options).reduce(\n    (accum, [key, value]) => `${accum}${key}=${value},`,\n    ''\n  );\n\n  if (_isIOSStandalone(ua) && target !== '_self') {\n    openAsNewWindowIOS(url || '', target);\n    return new AuthPopup(null);\n  }\n\n  // about:blank getting sanitized causing browsers like IE/Edge to display\n  // brief error message before redirecting to handler.\n  const newWin = window.open(url || '', target, optionsString);\n  _assert(newWin, auth, AuthErrorCode.POPUP_BLOCKED);\n\n  // Flaky on IE edge, encapsulate with a try and catch.\n  try {\n    newWin.focus();\n  } catch (e) {}\n\n  return new AuthPopup(newWin);\n}\n\nfunction openAsNewWindowIOS(url: string, target: string): void {\n  const el = document.createElement('a');\n  el.href = url;\n  el.target = target;\n  const click = document.createEvent('MouseEvent');\n  click.initMouseEvent(\n    'click',\n    true,\n    true,\n    window,\n    1,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    1,\n    null\n  );\n  el.dispatchEvent(click);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '@firebase/app';\nimport { AuthProvider } from '../../model/public_types';\nimport { ApiKey, AppName, AuthInternal } from '../../model/auth';\nimport { AuthEventType } from '../../model/popup_redirect';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from './assert';\nimport { isEmpty, querystring } from '@firebase/util';\nimport { _emulatorUrl } from './emulator';\nimport { FederatedAuthProvider } from '../providers/federated';\nimport { BaseOAuthProvider } from '../providers/oauth';\n\n/**\n * URL for Authentication widget which will initiate the OAuth handshake\n *\n * @internal\n */\nconst WIDGET_PATH = '__/auth/handler';\n\n/**\n * URL for emulated environment\n *\n * @internal\n */\nconst EMULATOR_WIDGET_PATH = 'emulator/auth/handler';\n\n// eslint-disable-next-line @typescript-eslint/consistent-type-definitions\ntype WidgetParams = {\n  apiKey: ApiKey;\n  appName: AppName;\n  authType: AuthEventType;\n  redirectUrl?: string;\n  v: string;\n  providerId?: string;\n  scopes?: string;\n  customParameters?: string;\n  eventId?: string;\n  tid?: string;\n} & { [key: string]: string | undefined };\n\nexport function _getRedirectUrl(\n  auth: AuthInternal,\n  provider: AuthProvider,\n  authType: AuthEventType,\n  redirectUrl?: string,\n  eventId?: string,\n  additionalParams?: Record<string, string>\n): string {\n  _assert(auth.config.authDomain, auth, AuthErrorCode.MISSING_AUTH_DOMAIN);\n  _assert(auth.config.apiKey, auth, AuthErrorCode.INVALID_API_KEY);\n\n  const params: WidgetParams = {\n    apiKey: auth.config.apiKey,\n    appName: auth.name,\n    authType,\n    redirectUrl,\n    v: SDK_VERSION,\n    eventId\n  };\n\n  if (provider instanceof FederatedAuthProvider) {\n    provider.setDefaultLanguage(auth.languageCode);\n    params.providerId = provider.providerId || '';\n    if (!isEmpty(provider.getCustomParameters())) {\n      params.customParameters = JSON.stringify(provider.getCustomParameters());\n    }\n\n    // TODO set additionalParams from the provider as well?\n    for (const [key, value] of Object.entries(additionalParams || {})) {\n      params[key] = value;\n    }\n  }\n\n  if (provider instanceof BaseOAuthProvider) {\n    const scopes = provider.getScopes().filter(scope => scope !== '');\n    if (scopes.length > 0) {\n      params.scopes = scopes.join(',');\n    }\n  }\n\n  if (auth.tenantId) {\n    params.tid = auth.tenantId;\n  }\n\n  // TODO: maybe set eid as endipointId\n  // TODO: maybe set fw as Frameworks.join(\",\")\n\n  const paramsDict = params as Record<string, string | number>;\n  for (const key of Object.keys(paramsDict)) {\n    if (paramsDict[key] === undefined) {\n      delete paramsDict[key];\n    }\n  }\n  return `${getHandlerBase(auth)}?${querystring(paramsDict).slice(1)}`;\n}\n\nfunction getHandlerBase({ config }: AuthInternal): string {\n  if (!config.emulator) {\n    return `https://${config.authDomain}/${WIDGET_PATH}`;\n  }\n\n  return _emulatorUrl(config, EMULATOR_WIDGET_PATH);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, PopupRedirectResolver } from '../model/public_types';\n\nimport { AuthEventManager } from '../core/auth/auth_event_manager';\nimport { AuthErrorCode } from '../core/errors';\nimport { _assert, debugAssert, _fail } from '../core/util/assert';\nimport { _generateEventId } from '../core/util/event_id';\nimport { _getCurrentUrl } from '../core/util/location';\nimport { _validateOrigin } from '../core/util/validate_origin';\nimport { AuthInternal } from '../model/auth';\nimport {\n  AuthEventType,\n  EventManager,\n  GapiAuthEvent,\n  GapiOutcome,\n  PopupRedirectResolverInternal\n} from '../model/popup_redirect';\nimport { _setWindowLocation } from './auth_window';\nimport { _openIframe } from './iframe/iframe';\nimport { browserSessionPersistence } from './persistence/session_storage';\nimport { _open, AuthPopup } from './util/popup';\nimport { _getRedirectResult } from './strategies/redirect';\nimport { _getRedirectUrl } from '../core/util/handler';\nimport { _isIOS, _isMobileBrowser, _isSafari } from '../core/util/browser';\nimport { _overrideRedirectResult } from '../core/strategies/redirect';\n\n/**\n * The special web storage event\n *\n */\nconst WEB_STORAGE_SUPPORT_KEY = 'webStorageSupport';\n\ninterface WebStorageSupportMessage extends gapi.iframes.Message {\n  [index: number]: Record<string, boolean>;\n}\n\ninterface ManagerOrPromise {\n  manager?: EventManager;\n  promise?: Promise<EventManager>;\n}\n\nclass BrowserPopupRedirectResolver implements PopupRedirectResolverInternal {\n  private readonly eventManagers: Record<string, ManagerOrPromise> = {};\n  private readonly iframes: Record<string, gapi.iframes.Iframe> = {};\n  private readonly originValidationPromises: Record<string, Promise<void>> = {};\n\n  readonly _redirectPersistence = browserSessionPersistence;\n\n  // Wrapping in async even though we don't await anywhere in order\n  // to make sure errors are raised as promise rejections\n  async _openPopup(\n    auth: AuthInternal,\n    provider: AuthProvider,\n    authType: AuthEventType,\n    eventId?: string\n  ): Promise<AuthPopup> {\n    debugAssert(\n      this.eventManagers[auth._key()]?.manager,\n      '_initialize() not called before _openPopup()'\n    );\n\n    const url = _getRedirectUrl(\n      auth,\n      provider,\n      authType,\n      _getCurrentUrl(),\n      eventId\n    );\n    return _open(auth, url, _generateEventId());\n  }\n\n  async _openRedirect(\n    auth: AuthInternal,\n    provider: AuthProvider,\n    authType: AuthEventType,\n    eventId?: string\n  ): Promise<never> {\n    await this._originValidation(auth);\n    _setWindowLocation(\n      _getRedirectUrl(auth, provider, authType, _getCurrentUrl(), eventId)\n    );\n    return new Promise(() => {});\n  }\n\n  _initialize(auth: AuthInternal): Promise<EventManager> {\n    const key = auth._key();\n    if (this.eventManagers[key]) {\n      const { manager, promise } = this.eventManagers[key];\n      if (manager) {\n        return Promise.resolve(manager);\n      } else {\n        debugAssert(promise, 'If manager is not set, promise should be');\n        return promise;\n      }\n    }\n\n    const promise = this.initAndGetManager(auth);\n    this.eventManagers[key] = { promise };\n\n    // If the promise is rejected, the key should be removed so that the\n    // operation can be retried later.\n    promise.catch(() => {\n      delete this.eventManagers[key];\n    });\n\n    return promise;\n  }\n\n  private async initAndGetManager(auth: AuthInternal): Promise<EventManager> {\n    const iframe = await _openIframe(auth);\n    const manager = new AuthEventManager(auth);\n    iframe.register<GapiAuthEvent>(\n      'authEvent',\n      (iframeEvent: GapiAuthEvent | null) => {\n        _assert(iframeEvent?.authEvent, auth, AuthErrorCode.INVALID_AUTH_EVENT);\n        // TODO: Consider splitting redirect and popup events earlier on\n\n        const handled = manager.onEvent(iframeEvent.authEvent);\n        return { status: handled ? GapiOutcome.ACK : GapiOutcome.ERROR };\n      },\n      gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\n    );\n\n    this.eventManagers[auth._key()] = { manager };\n    this.iframes[auth._key()] = iframe;\n    return manager;\n  }\n\n  _isIframeWebStorageSupported(\n    auth: AuthInternal,\n    cb: (supported: boolean) => unknown\n  ): void {\n    const iframe = this.iframes[auth._key()];\n    iframe.send<gapi.iframes.Message, WebStorageSupportMessage>(\n      WEB_STORAGE_SUPPORT_KEY,\n      { type: WEB_STORAGE_SUPPORT_KEY },\n      result => {\n        const isSupported = result?.[0]?.[WEB_STORAGE_SUPPORT_KEY];\n        if (isSupported !== undefined) {\n          cb(!!isSupported);\n        }\n\n        _fail(auth, AuthErrorCode.INTERNAL_ERROR);\n      },\n      gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER\n    );\n  }\n\n  _originValidation(auth: AuthInternal): Promise<void> {\n    const key = auth._key();\n    if (!this.originValidationPromises[key]) {\n      this.originValidationPromises[key] = _validateOrigin(auth);\n    }\n\n    return this.originValidationPromises[key];\n  }\n\n  get _shouldInitProactively(): boolean {\n    // Mobile browsers and Safari need to optimistically initialize\n    return _isMobileBrowser() || _isSafari() || _isIOS();\n  }\n\n  _completeRedirectFn = _getRedirectResult;\n\n  _overrideRedirectResult = _overrideRedirectResult;\n}\n\n/**\n * An implementation of {@link PopupRedirectResolver} suitable for browser\n * based applications.\n *\n * @public\n */\nexport const browserPopupRedirectResolver: PopupRedirectResolver =\n  BrowserPopupRedirectResolver;\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  FactorId,\n  PhoneMultiFactorAssertion\n} from '../../../model/public_types';\n\nimport { MultiFactorAssertionImpl } from '../../../mfa/mfa_assertion';\nimport { AuthInternal } from '../../../model/auth';\nimport { finalizeEnrollPhoneMfa } from '../../../api/account_management/mfa';\nimport { PhoneAuthCredential } from '../../../core/credentials/phone';\nimport {\n  finalizeSignInPhoneMfa,\n  FinalizeMfaResponse\n} from '../../../api/authentication/mfa';\n\n/**\n * {@inheritdoc PhoneMultiFactorAssertion}\n *\n * @public\n */\nexport class PhoneMultiFactorAssertionImpl\n  extends MultiFactorAssertionImpl\n  implements PhoneMultiFactorAssertion\n{\n  private constructor(private readonly credential: PhoneAuthCredential) {\n    super(FactorId.PHONE);\n  }\n\n  /** @internal */\n  static _fromCredential(\n    credential: PhoneAuthCredential\n  ): PhoneMultiFactorAssertionImpl {\n    return new PhoneMultiFactorAssertionImpl(credential);\n  }\n\n  /** @internal */\n  _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    return finalizeEnrollPhoneMfa(auth, {\n      idToken,\n      displayName,\n      phoneVerificationInfo: this.credential._makeVerificationRequest()\n    });\n  }\n\n  /** @internal */\n  _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse> {\n    return finalizeSignInPhoneMfa(auth, {\n      mfaPendingCredential,\n      phoneVerificationInfo: this.credential._makeVerificationRequest()\n    });\n  }\n}\n\n/**\n * Provider for generating a {@link PhoneMultiFactorAssertion}.\n *\n * @public\n */\nexport class PhoneMultiFactorGenerator {\n  private constructor() {}\n\n  /**\n   * Provides a {@link PhoneMultiFactorAssertion} to confirm ownership of the phone second factor.\n   *\n   * @param phoneAuthCredential - A credential provided by {@link PhoneAuthProvider.credential}.\n   * @returns A {@link PhoneMultiFactorAssertion} which can be used with\n   * {@link MultiFactorResolver.resolveSignIn}\n   */\n  static assertion(credential: PhoneAuthCredential): PhoneMultiFactorAssertion {\n    return PhoneMultiFactorAssertionImpl._fromCredential(credential);\n  }\n\n  /**\n   * The identifier of the phone second factor: `phone`.\n   */\n  static FACTOR_ID = 'phone';\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { FactorId, MultiFactorAssertion } from '../model/public_types';\nimport { debugFail } from '../core/util/assert';\nimport { MultiFactorSessionImpl, MultiFactorSessionType } from './mfa_session';\nimport { FinalizeMfaResponse } from '../api/authentication/mfa';\nimport { AuthInternal } from '../model/auth';\n\nexport abstract class MultiFactorAssertionImpl implements MultiFactorAssertion {\n  protected constructor(readonly factorId: FactorId) {}\n\n  _process(\n    auth: AuthInternal,\n    session: MultiFactorSessionImpl,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse> {\n    switch (session.type) {\n      case MultiFactorSessionType.ENROLL:\n        return this._finalizeEnroll(auth, session.credential, displayName);\n      case MultiFactorSessionType.SIGN_IN:\n        return this._finalizeSignIn(auth, session.credential);\n      default:\n        return debugFail('unexpected MultiFactorSessionType');\n    }\n  }\n\n  abstract _finalizeEnroll(\n    auth: AuthInternal,\n    idToken: string,\n    displayName?: string | null\n  ): Promise<FinalizeMfaResponse>;\n  abstract _finalizeSignIn(\n    auth: AuthInternal,\n    mfaPendingCredential: string\n  ): Promise<FinalizeMfaResponse>;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Unsubscribe } from '@firebase/util';\nimport { FirebaseAuthInternal } from '@firebase/auth-interop-types';\n\nimport { AuthInternal } from '../../model/auth';\nimport { UserInternal } from '../../model/user';\nimport { _assert } from '../util/assert';\nimport { AuthErrorCode } from '../errors';\n\ninterface TokenListener {\n  (tok: string | null): unknown;\n}\n\nexport class AuthInterop implements FirebaseAuthInternal {\n  private readonly internalListeners: Map<TokenListener, Unsubscribe> =\n    new Map();\n\n  constructor(private readonly auth: AuthInternal) {}\n\n  getUid(): string | null {\n    this.assertAuthConfigured();\n    return this.auth.currentUser?.uid || null;\n  }\n\n  async getToken(\n    forceRefresh?: boolean\n  ): Promise<{ accessToken: string } | null> {\n    this.assertAuthConfigured();\n    await this.auth._initializationPromise;\n    if (!this.auth.currentUser) {\n      return null;\n    }\n\n    const accessToken = await this.auth.currentUser.getIdToken(forceRefresh);\n    return { accessToken };\n  }\n\n  addAuthTokenListener(listener: TokenListener): void {\n    this.assertAuthConfigured();\n    if (this.internalListeners.has(listener)) {\n      return;\n    }\n\n    const unsubscribe = this.auth.onIdTokenChanged(user => {\n      listener(\n        (user as UserInternal | null)?.stsTokenManager.accessToken || null\n      );\n    });\n    this.internalListeners.set(listener, unsubscribe);\n    this.updateProactiveRefresh();\n  }\n\n  removeAuthTokenListener(listener: TokenListener): void {\n    this.assertAuthConfigured();\n    const unsubscribe = this.internalListeners.get(listener);\n    if (!unsubscribe) {\n      return;\n    }\n\n    this.internalListeners.delete(listener);\n    unsubscribe();\n    this.updateProactiveRefresh();\n  }\n\n  private assertAuthConfigured(): void {\n    _assert(\n      this.auth._initializationPromise,\n      AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH\n    );\n  }\n\n  private updateProactiveRefresh(): void {\n    if (this.internalListeners.size > 0) {\n      this.auth._startProactiveRefresh();\n    } else {\n      this.auth._stopProactiveRefresh();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, getApp, _getProvider } from '@firebase/app';\n\nimport {\n  initializeAuth,\n  beforeAuthStateChanged,\n  onIdTokenChanged,\n  connectAuthEmulator\n} from '..';\nimport { registerAuth } from '../core/auth/register';\nimport { ClientPlatform } from '../core/util/version';\nimport { browserLocalPersistence } from './persistence/local_storage';\nimport { browserSessionPersistence } from './persistence/session_storage';\nimport { indexedDBLocalPersistence } from './persistence/indexed_db';\nimport { browserPopupRedirectResolver } from './popup_redirect';\nimport { Auth, User } from '../model/public_types';\nimport { getDefaultEmulatorHost, getExperimentalSetting } from '@firebase/util';\n\nconst DEFAULT_ID_TOKEN_MAX_AGE = 5 * 60;\nconst authIdTokenMaxAge =\n  getExperimentalSetting('authIdTokenMaxAge') || DEFAULT_ID_TOKEN_MAX_AGE;\n\nlet lastPostedIdToken: string | undefined | null = null;\n\nconst mintCookieFactory = (url: string) => async (user: User | null) => {\n  const idTokenResult = user && (await user.getIdTokenResult());\n  const idTokenAge =\n    idTokenResult &&\n    (new Date().getTime() - Date.parse(idTokenResult.issuedAtTime)) / 1_000;\n  if (idTokenAge && idTokenAge > authIdTokenMaxAge) {\n    return;\n  }\n  // Specifically trip null => undefined when logged out, to delete any existing cookie\n  const idToken = idTokenResult?.token;\n  if (lastPostedIdToken === idToken) {\n    return;\n  }\n  lastPostedIdToken = idToken;\n  await fetch(url, {\n    method: idToken ? 'POST' : 'DELETE',\n    headers: idToken\n      ? {\n          'Authorization': `Bearer ${idToken}`\n        }\n      : {}\n  });\n};\n\n/**\n * Returns the Auth instance associated with the provided {@link @firebase/app#FirebaseApp}.\n * If no instance exists, initializes an Auth instance with platform-specific default dependencies.\n *\n * @param app - The Firebase App.\n *\n * @public\n */\nexport function getAuth(app: FirebaseApp = getApp()): Auth {\n  const provider = _getProvider(app, 'auth');\n\n  if (provider.isInitialized()) {\n    return provider.getImmediate();\n  }\n\n  const auth = initializeAuth(app, {\n    popupRedirectResolver: browserPopupRedirectResolver,\n    persistence: [\n      indexedDBLocalPersistence,\n      browserLocalPersistence,\n      browserSessionPersistence\n    ]\n  });\n\n  const authTokenSyncUrl = getExperimentalSetting('authTokenSyncURL');\n  if (authTokenSyncUrl) {\n    const mintCookie = mintCookieFactory(authTokenSyncUrl);\n    beforeAuthStateChanged(auth, mintCookie, () =>\n      mintCookie(auth.currentUser)\n    );\n    onIdTokenChanged(auth, user => mintCookie(user));\n  }\n\n  const authEmulatorHost = getDefaultEmulatorHost('auth');\n  if (authEmulatorHost) {\n    connectAuthEmulator(auth, `http://${authEmulatorHost}`);\n  }\n\n  return auth;\n}\n\nregisterAuth(ClientPlatform.BROWSER);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport {\n  Component,\n  ComponentType,\n  InstantiationMode\n} from '@firebase/component';\n\nimport { name, version } from '../../../package.json';\nimport { AuthErrorCode } from '../errors';\nimport { _assert } from '../util/assert';\nimport { _getClientVersion, ClientPlatform } from '../util/version';\nimport { _castAuth, AuthImpl, DefaultConfig } from './auth_impl';\nimport { AuthInterop } from './firebase_internal';\nimport { ConfigInternal } from '../../model/auth';\nimport { Dependencies } from '../../model/public_types';\nimport { _initializeAuthInstance } from './initialize';\n\nexport const enum _ComponentName {\n  AUTH = 'auth',\n  AUTH_INTERNAL = 'auth-internal'\n}\n\nfunction getVersionForPlatform(\n  clientPlatform: ClientPlatform\n): string | undefined {\n  switch (clientPlatform) {\n    case ClientPlatform.NODE:\n      return 'node';\n    case ClientPlatform.REACT_NATIVE:\n      return 'rn';\n    case ClientPlatform.WORKER:\n      return 'webworker';\n    case ClientPlatform.CORDOVA:\n      return 'cordova';\n    default:\n      return undefined;\n  }\n}\n\n/** @internal */\nexport function registerAuth(clientPlatform: ClientPlatform): void {\n  _registerComponent(\n    new Component(\n      _ComponentName.AUTH,\n      (container, { options: deps }: { options?: Dependencies }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const heartbeatServiceProvider =\n          container.getProvider<'heartbeat'>('heartbeat');\n        const { apiKey, authDomain } = app.options;\n        return ((app, heartbeatServiceProvider) => {\n          _assert(\n            apiKey && !apiKey.includes(':'),\n            AuthErrorCode.INVALID_API_KEY,\n            { appName: app.name }\n          );\n          // Auth domain is optional if IdP sign in isn't being used\n          _assert(!authDomain?.includes(':'), AuthErrorCode.ARGUMENT_ERROR, {\n            appName: app.name\n          });\n          const config: ConfigInternal = {\n            apiKey,\n            authDomain,\n            clientPlatform,\n            apiHost: DefaultConfig.API_HOST,\n            tokenApiHost: DefaultConfig.TOKEN_API_HOST,\n            apiScheme: DefaultConfig.API_SCHEME,\n            sdkClientVersion: _getClientVersion(clientPlatform)\n          };\n\n          const authInstance = new AuthImpl(\n            app,\n            heartbeatServiceProvider,\n            config\n          );\n          _initializeAuthInstance(authInstance, deps);\n\n          return authInstance;\n        })(app, heartbeatServiceProvider);\n      },\n      ComponentType.PUBLIC\n    )\n      /**\n       * Auth can only be initialized by explicitly calling getAuth() or initializeAuth()\n       * For why we do this, See go/firebase-next-auth-init\n       */\n      .setInstantiationMode(InstantiationMode.EXPLICIT)\n      /**\n       * Because all firebase products that depend on auth depend on auth-internal directly,\n       * we need to initialize auth-internal after auth is initialized to make it available to other firebase products.\n       */\n      .setInstanceCreatedCallback(\n        (container, _instanceIdentifier, _instance) => {\n          const authInternalProvider = container.getProvider(\n            _ComponentName.AUTH_INTERNAL\n          );\n          authInternalProvider.initialize();\n        }\n      )\n  );\n\n  _registerComponent(\n    new Component(\n      _ComponentName.AUTH_INTERNAL,\n      container => {\n        const auth = _castAuth(\n          container.getProvider(_ComponentName.AUTH).getImmediate()!\n        );\n        return (auth => new AuthInterop(auth))(auth);\n      },\n      ComponentType.PRIVATE\n    ).setInstantiationMode(InstantiationMode.EXPLICIT)\n  );\n\n  registerVersion(name, version, getVersionForPlatform(clientPlatform));\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface CordovaWindow extends Window {\n  cordova: {\n    plugins: {\n      browsertab: {\n        isAvailable(cb: (available: boolean) => void): void;\n        openUrl(url: string): void;\n        close(): void;\n      };\n    };\n\n    InAppBrowser: {\n      open(url: string, target: string, options: string): InAppBrowserRef;\n    };\n  };\n\n  universalLinks: {\n    subscribe(\n      n: null,\n      cb: (event: Record<string, string> | null) => void\n    ): void;\n  };\n\n  BuildInfo: {\n    readonly packageName: string;\n    readonly displayName: string;\n  };\n\n  handleOpenURL(url: string): void;\n}\n\nexport interface InAppBrowserRef {\n  close?: () => void;\n}\n\nexport function _cordovaWindow(): CordovaWindow {\n  return window as unknown as CordovaWindow;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProvider, FirebaseApp } from '@firebase/app';\nimport { deepEqual } from '@firebase/util';\nimport { Auth, Dependencies } from '../../model/public_types';\n\nimport { AuthErrorCode } from '../errors';\nimport { PersistenceInternal } from '../persistence';\nimport { _fail } from '../util/assert';\nimport { _getInstance } from '../util/instantiator';\nimport { AuthImpl } from './auth_impl';\n\n/**\n * Initializes an {@link Auth} instance with fine-grained control over\n * {@link Dependencies}.\n *\n * @remarks\n *\n * This function allows more control over the {@link Auth} instance than\n * {@link getAuth}. `getAuth` uses platform-specific defaults to supply\n * the {@link Dependencies}. In general, `getAuth` is the easiest way to\n * initialize Auth and works for most use cases. Use `initializeAuth` if you\n * need control over which persistence layer is used, or to minimize bundle\n * size if you're not using either `signInWithPopup` or `signInWithRedirect`.\n *\n * For example, if your app only uses anonymous accounts and you only want\n * accounts saved for the current session, initialize `Auth` with:\n *\n * ```js\n * const auth = initializeAuth(app, {\n *   persistence: browserSessionPersistence,\n *   popupRedirectResolver: undefined,\n * });\n * ```\n *\n * @public\n */\nexport function initializeAuth(app: FirebaseApp, deps?: Dependencies): Auth {\n  const provider = _getProvider(app, 'auth');\n\n  if (provider.isInitialized()) {\n    const auth = provider.getImmediate() as AuthImpl;\n    const initialOptions = provider.getOptions() as Dependencies;\n    if (deepEqual(initialOptions, deps ?? {})) {\n      return auth;\n    } else {\n      _fail(auth, AuthErrorCode.ALREADY_INITIALIZED);\n    }\n  }\n\n  const auth = provider.initialize({ options: deps }) as AuthImpl;\n\n  return auth;\n}\n\nexport function _initializeAuthInstance(\n  auth: AuthImpl,\n  deps?: Dependencies\n): void {\n  const persistence = deps?.persistence || [];\n  const hierarchy = (\n    Array.isArray(persistence) ? persistence : [persistence]\n  ).map<PersistenceInternal>(_getInstance);\n  if (deps?.errorMap) {\n    auth._updateErrorMap(deps.errorMap);\n  }\n\n  // This promise is intended to float; auth initialization happens in the\n  // background, meanwhile the auth object may be used by the app.\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  auth._initializeWithPersistence(hierarchy, deps?.popupRedirectResolver);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider } from '../../model/public_types';\nimport { AuthErrorCode } from '../../core/errors';\nimport {\n  debugAssert,\n  _assert,\n  _createError,\n  _fail\n} from '../../core/util/assert';\nimport { _isAndroid, _isIOS, _isIOS7Or8 } from '../../core/util/browser';\nimport { _getRedirectUrl } from '../../core/util/handler';\nimport { AuthInternal } from '../../model/auth';\nimport { AuthEvent } from '../../model/popup_redirect';\nimport { InAppBrowserRef, _cordovaWindow } from '../plugins';\nimport {\n  GetProjectConfigRequest,\n  _getProjectConfig\n} from '../../api/project_config/get_project_config';\n\n/**\n * How long to wait after the app comes back into focus before concluding that\n * the user closed the sign in tab.\n */\nconst REDIRECT_TIMEOUT_MS = 2000;\n\n/**\n * Generates the URL for the OAuth handler.\n */\nexport async function _generateHandlerUrl(\n  auth: AuthInternal,\n  event: AuthEvent,\n  provider: AuthProvider\n): Promise<string> {\n  // Get the cordova plugins\n  const { BuildInfo } = _cordovaWindow();\n  debugAssert(event.sessionId, 'AuthEvent did not contain a session ID');\n  const sessionDigest = await computeSha256(event.sessionId);\n\n  const additionalParams: Record<string, string> = {};\n  if (_isIOS()) {\n    // iOS app identifier\n    additionalParams['ibi'] = BuildInfo.packageName;\n  } else if (_isAndroid()) {\n    // Android app identifier\n    additionalParams['apn'] = BuildInfo.packageName;\n  } else {\n    _fail(auth, AuthErrorCode.OPERATION_NOT_SUPPORTED);\n  }\n\n  // Add the display name if available\n  if (BuildInfo.displayName) {\n    additionalParams['appDisplayName'] = BuildInfo.displayName;\n  }\n\n  // Attached the hashed session ID\n  additionalParams['sessionId'] = sessionDigest;\n  return _getRedirectUrl(\n    auth,\n    provider,\n    event.type,\n    undefined,\n    event.eventId ?? undefined,\n    additionalParams\n  );\n}\n\n/**\n * Validates that this app is valid for this project configuration\n */\nexport async function _validateOrigin(auth: AuthInternal): Promise<void> {\n  const { BuildInfo } = _cordovaWindow();\n  const request: GetProjectConfigRequest = {};\n  if (_isIOS()) {\n    request.iosBundleId = BuildInfo.packageName;\n  } else if (_isAndroid()) {\n    request.androidPackageName = BuildInfo.packageName;\n  } else {\n    _fail(auth, AuthErrorCode.OPERATION_NOT_SUPPORTED);\n  }\n\n  // Will fail automatically if package name is not authorized\n  await _getProjectConfig(auth, request);\n}\n\nexport function _performRedirect(\n  handlerUrl: string\n): Promise<InAppBrowserRef | null> {\n  // Get the cordova plugins\n  const { cordova } = _cordovaWindow();\n\n  return new Promise(resolve => {\n    cordova.plugins.browsertab.isAvailable(browserTabIsAvailable => {\n      let iabRef: InAppBrowserRef | null = null;\n      if (browserTabIsAvailable) {\n        cordova.plugins.browsertab.openUrl(handlerUrl);\n      } else {\n        // TODO: Return the inappbrowser ref that's returned from the open call\n        iabRef = cordova.InAppBrowser.open(\n          handlerUrl,\n          _isIOS7Or8() ? '_blank' : '_system',\n          'location=yes'\n        );\n      }\n      resolve(iabRef);\n    });\n  });\n}\n\n// Thin interface wrapper to avoid circular dependency with ./events module\ninterface PassiveAuthEventListener {\n  addPassiveListener(cb: () => void): void;\n  removePassiveListener(cb: () => void): void;\n}\n\n/**\n * This function waits for app activity to be seen before resolving. It does\n * this by attaching listeners to various dom events. Once the app is determined\n * to be visible, this promise resolves. AFTER that resolution, the listeners\n * are detached and any browser tabs left open will be closed.\n */\nexport async function _waitForAppResume(\n  auth: AuthInternal,\n  eventListener: PassiveAuthEventListener,\n  iabRef: InAppBrowserRef | null\n): Promise<void> {\n  // Get the cordova plugins\n  const { cordova } = _cordovaWindow();\n\n  let cleanup = (): void => {};\n  try {\n    await new Promise<void>((resolve, reject) => {\n      let onCloseTimer: number | null = null;\n\n      // DEFINE ALL THE CALLBACKS =====\n      function authEventSeen(): void {\n        // Auth event was detected. Resolve this promise and close the extra\n        // window if it's still open.\n        resolve();\n        const closeBrowserTab = cordova.plugins.browsertab?.close;\n        if (typeof closeBrowserTab === 'function') {\n          closeBrowserTab();\n        }\n        // Close inappbrowser emebedded webview in iOS7 and 8 case if still\n        // open.\n        if (typeof iabRef?.close === 'function') {\n          iabRef.close();\n        }\n      }\n\n      function resumed(): void {\n        if (onCloseTimer) {\n          // This code already ran; do not rerun.\n          return;\n        }\n\n        onCloseTimer = window.setTimeout(() => {\n          // Wait two seeconds after resume then reject.\n          reject(_createError(auth, AuthErrorCode.REDIRECT_CANCELLED_BY_USER));\n        }, REDIRECT_TIMEOUT_MS);\n      }\n\n      function visibilityChanged(): void {\n        if (document?.visibilityState === 'visible') {\n          resumed();\n        }\n      }\n\n      // ATTACH ALL THE LISTENERS =====\n      // Listen for the auth event\n      eventListener.addPassiveListener(authEventSeen);\n\n      // Listen for resume and visibility events\n      document.addEventListener('resume', resumed, false);\n      if (_isAndroid()) {\n        document.addEventListener('visibilitychange', visibilityChanged, false);\n      }\n\n      // SETUP THE CLEANUP FUNCTION =====\n      cleanup = () => {\n        eventListener.removePassiveListener(authEventSeen);\n        document.removeEventListener('resume', resumed, false);\n        document.removeEventListener(\n          'visibilitychange',\n          visibilityChanged,\n          false\n        );\n        if (onCloseTimer) {\n          window.clearTimeout(onCloseTimer);\n        }\n      };\n    });\n  } finally {\n    cleanup();\n  }\n}\n\n/**\n * Checks the configuration of the Cordova environment. This has no side effect\n * if the configuration is correct; otherwise it throws an error with the\n * missing plugin.\n */\nexport function _checkCordovaConfiguration(auth: AuthInternal): void {\n  const win = _cordovaWindow();\n  // Check all dependencies installed.\n  // https://github.com/nordnet/cordova-universal-links-plugin\n  // Note that cordova-universal-links-plugin has been abandoned.\n  // A fork with latest fixes is available at:\n  // https://www.npmjs.com/package/cordova-universal-links-plugin-fix\n  _assert(\n    typeof win?.universalLinks?.subscribe === 'function',\n    auth,\n    AuthErrorCode.INVALID_CORDOVA_CONFIGURATION,\n    {\n      missingPlugin: 'cordova-universal-links-plugin-fix'\n    }\n  );\n\n  // https://www.npmjs.com/package/cordova-plugin-buildinfo\n  _assert(\n    typeof win?.BuildInfo?.packageName !== 'undefined',\n    auth,\n    AuthErrorCode.INVALID_CORDOVA_CONFIGURATION,\n    {\n      missingPlugin: 'cordova-plugin-buildInfo'\n    }\n  );\n\n  // https://github.com/google/cordova-plugin-browsertab\n  _assert(\n    typeof win?.cordova?.plugins?.browsertab?.openUrl === 'function',\n    auth,\n    AuthErrorCode.INVALID_CORDOVA_CONFIGURATION,\n    {\n      missingPlugin: 'cordova-plugin-browsertab'\n    }\n  );\n  _assert(\n    typeof win?.cordova?.plugins?.browsertab?.isAvailable === 'function',\n    auth,\n    AuthErrorCode.INVALID_CORDOVA_CONFIGURATION,\n    {\n      missingPlugin: 'cordova-plugin-browsertab'\n    }\n  );\n\n  // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/\n  _assert(\n    typeof win?.cordova?.InAppBrowser?.open === 'function',\n    auth,\n    AuthErrorCode.INVALID_CORDOVA_CONFIGURATION,\n    {\n      missingPlugin: 'cordova-plugin-inappbrowser'\n    }\n  );\n}\n\n/**\n * Computes the SHA-256 of a session ID. The SubtleCrypto interface is only\n * available in \"secure\" contexts, which covers Cordova (which is served on a file\n * protocol).\n */\nasync function computeSha256(sessionId: string): Promise<string> {\n  const bytes = stringToArrayBuffer(sessionId);\n\n  // TODO: For IE11 crypto has a different name and this operation comes back\n  //       as an object, not a promise. This is the old proposed standard that\n  //       is used by IE11:\n  // https://www.w3.org/TR/2013/WD-WebCryptoAPI-20130108/#cryptooperation-interface\n  const buf = await crypto.subtle.digest('SHA-256', bytes);\n  const arr = Array.from(new Uint8Array(buf));\n  return arr.map(num => num.toString(16).padStart(2, '0')).join('');\n}\n\nfunction stringToArrayBuffer(str: string): Uint8Array {\n  // This function is only meant to deal with an ASCII charset and makes\n  // certain simplifying assumptions.\n  debugAssert(\n    /[0-9a-zA-Z]+/.test(str),\n    'Can only convert alpha-numeric strings'\n  );\n  if (typeof TextEncoder !== 'undefined') {\n    return new TextEncoder().encode(str);\n  }\n\n  const buff = new ArrayBuffer(str.length);\n  const view = new Uint8Array(buff);\n  for (let i = 0; i < str.length; i++) {\n    view[i] = str.charCodeAt(i);\n  }\n  return view;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { querystringDecode } from '@firebase/util';\nimport { AuthEventManager } from '../../core/auth/auth_event_manager';\nimport { AuthErrorCode } from '../../core/errors';\nimport { PersistedBlob, PersistenceInternal } from '../../core/persistence';\nimport {\n  KeyName,\n  _persistenceKeyName\n} from '../../core/persistence/persistence_user_manager';\nimport { _createError } from '../../core/util/assert';\nimport { _getInstance } from '../../core/util/instantiator';\nimport { AuthInternal } from '../../model/auth';\nimport { AuthEvent, AuthEventType } from '../../model/popup_redirect';\nimport { browserLocalPersistence } from '../../platform_browser/persistence/local_storage';\n\nconst SESSION_ID_LENGTH = 20;\n\n/** Custom AuthEventManager that adds passive listeners to events */\nexport class CordovaAuthEventManager extends AuthEventManager {\n  private readonly passiveListeners = new Set<(e: AuthEvent) => void>();\n  private resolveInialized!: () => void;\n  private initPromise = new Promise<void>(resolve => {\n    this.resolveInialized = resolve;\n  });\n\n  addPassiveListener(cb: (e: AuthEvent) => void): void {\n    this.passiveListeners.add(cb);\n  }\n\n  removePassiveListener(cb: (e: AuthEvent) => void): void {\n    this.passiveListeners.delete(cb);\n  }\n\n  // In a Cordova environment, this manager can live through multiple redirect\n  // operations\n  resetRedirect(): void {\n    this.queuedRedirectEvent = null;\n    this.hasHandledPotentialRedirect = false;\n  }\n\n  /** Override the onEvent method */\n  onEvent(event: AuthEvent): boolean {\n    this.resolveInialized();\n    this.passiveListeners.forEach(cb => cb(event));\n    return super.onEvent(event);\n  }\n\n  async initialized(): Promise<void> {\n    await this.initPromise;\n  }\n}\n\n/**\n * Generates a (partial) {@link AuthEvent}.\n */\nexport function _generateNewEvent(\n  auth: AuthInternal,\n  type: AuthEventType,\n  eventId: string | null = null\n): AuthEvent {\n  return {\n    type,\n    eventId,\n    urlResponse: null,\n    sessionId: generateSessionId(),\n    postBody: null,\n    tenantId: auth.tenantId,\n    error: _createError(auth, AuthErrorCode.NO_AUTH_EVENT)\n  };\n}\n\nexport function _savePartialEvent(\n  auth: AuthInternal,\n  event: AuthEvent\n): Promise<void> {\n  return storage()._set(persistenceKey(auth), event as object as PersistedBlob);\n}\n\nexport async function _getAndRemoveEvent(\n  auth: AuthInternal\n): Promise<AuthEvent | null> {\n  const event = (await storage()._get(\n    persistenceKey(auth)\n  )) as AuthEvent | null;\n  if (event) {\n    await storage()._remove(persistenceKey(auth));\n  }\n  return event;\n}\n\nexport function _eventFromPartialAndUrl(\n  partialEvent: AuthEvent,\n  url: string\n): AuthEvent | null {\n  // Parse the deep link within the dynamic link URL.\n  const callbackUrl = _getDeepLinkFromCallback(url);\n  // Confirm it is actually a callback URL.\n  // Currently the universal link will be of this format:\n  // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\n  // This is a fake URL but is not intended to take the user anywhere\n  // and just redirect to the app.\n  if (callbackUrl.includes('/__/auth/callback')) {\n    // Check if there is an error in the URL.\n    // This mechanism is also used to pass errors back to the app:\n    // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\n    const params = searchParamsOrEmpty(callbackUrl);\n    // Get the error object corresponding to the stringified error if found.\n    const errorObject = params['firebaseError']\n      ? parseJsonOrNull(decodeURIComponent(params['firebaseError']))\n      : null;\n    const code = errorObject?.['code']?.split('auth/')?.[1];\n    const error = code ? _createError(code) : null;\n    if (error) {\n      return {\n        type: partialEvent.type,\n        eventId: partialEvent.eventId,\n        tenantId: partialEvent.tenantId,\n        error,\n        urlResponse: null,\n        sessionId: null,\n        postBody: null\n      };\n    } else {\n      return {\n        type: partialEvent.type,\n        eventId: partialEvent.eventId,\n        tenantId: partialEvent.tenantId,\n        sessionId: partialEvent.sessionId,\n        urlResponse: callbackUrl,\n        postBody: null\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction generateSessionId(): string {\n  const chars = [];\n  const allowedChars =\n    '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  for (let i = 0; i < SESSION_ID_LENGTH; i++) {\n    const idx = Math.floor(Math.random() * allowedChars.length);\n    chars.push(allowedChars.charAt(idx));\n  }\n  return chars.join('');\n}\n\nfunction storage(): PersistenceInternal {\n  return _getInstance(browserLocalPersistence);\n}\n\nfunction persistenceKey(auth: AuthInternal): string {\n  return _persistenceKeyName(KeyName.AUTH_EVENT, auth.config.apiKey, auth.name);\n}\n\nfunction parseJsonOrNull(json: string): ReturnType<typeof JSON.parse> | null {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return null;\n  }\n}\n\n// Exported for testing\nexport function _getDeepLinkFromCallback(url: string): string {\n  const params = searchParamsOrEmpty(url);\n  const link = params['link'] ? decodeURIComponent(params['link']) : undefined;\n  // Double link case (automatic redirect)\n  const doubleDeepLink = searchParamsOrEmpty(link)['link'];\n  // iOS custom scheme links.\n  const iOSDeepLink = params['deep_link_id']\n    ? decodeURIComponent(params['deep_link_id'])\n    : undefined;\n  const iOSDoubleDeepLink = searchParamsOrEmpty(iOSDeepLink)['link'];\n  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n}\n\n/**\n * Optimistically tries to get search params from a string, or else returns an\n * empty search params object.\n */\nfunction searchParamsOrEmpty(url: string | undefined): Record<string, string> {\n  if (!url?.includes('?')) {\n    return {};\n  }\n\n  const [_, ...rest] = url.split('?');\n  return querystringDecode(rest.join('?')) as Record<string, string>;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthProvider, PopupRedirectResolver } from '../../model/public_types';\nimport { browserSessionPersistence } from '../../platform_browser/persistence/session_storage';\nimport { AuthInternal } from '../../model/auth';\nimport {\n  AuthEvent,\n  AuthEventType,\n  PopupRedirectResolverInternal\n} from '../../model/popup_redirect';\nimport { AuthPopup } from '../../platform_browser/util/popup';\nimport { _createError, _fail } from '../../core/util/assert';\nimport { AuthErrorCode } from '../../core/errors';\nimport {\n  _checkCordovaConfiguration,\n  _generateHandlerUrl,\n  _performRedirect,\n  _validateOrigin,\n  _waitForAppResume\n} from './utils';\nimport {\n  CordovaAuthEventManager,\n  _eventFromPartialAndUrl,\n  _generateNewEvent,\n  _getAndRemoveEvent,\n  _savePartialEvent\n} from './events';\nimport { AuthEventManager } from '../../core/auth/auth_event_manager';\nimport { _getRedirectResult } from '../../platform_browser/strategies/redirect';\nimport {\n  _clearRedirectOutcomes,\n  _overrideRedirectResult\n} from '../../core/strategies/redirect';\nimport { _cordovaWindow } from '../plugins';\n\n/**\n * How long to wait for the initial auth event before concluding no\n * redirect pending\n */\nconst INITIAL_EVENT_TIMEOUT_MS = 500;\n\nclass CordovaPopupRedirectResolver implements PopupRedirectResolverInternal {\n  readonly _redirectPersistence = browserSessionPersistence;\n  readonly _shouldInitProactively = true; // This is lightweight for Cordova\n  private readonly eventManagers = new Map<string, CordovaAuthEventManager>();\n  private readonly originValidationPromises: Record<string, Promise<void>> = {};\n\n  _completeRedirectFn = _getRedirectResult;\n  _overrideRedirectResult = _overrideRedirectResult;\n\n  async _initialize(auth: AuthInternal): Promise<CordovaAuthEventManager> {\n    const key = auth._key();\n    let manager = this.eventManagers.get(key);\n    if (!manager) {\n      manager = new CordovaAuthEventManager(auth);\n      this.eventManagers.set(key, manager);\n      this.attachCallbackListeners(auth, manager);\n    }\n    return manager;\n  }\n\n  _openPopup(auth: AuthInternal): Promise<AuthPopup> {\n    _fail(auth, AuthErrorCode.OPERATION_NOT_SUPPORTED);\n  }\n\n  async _openRedirect(\n    auth: AuthInternal,\n    provider: AuthProvider,\n    authType: AuthEventType,\n    eventId?: string\n  ): Promise<void> {\n    _checkCordovaConfiguration(auth);\n    const manager = await this._initialize(auth);\n    await manager.initialized();\n\n    // Reset the persisted redirect states. This does not matter on Web where\n    // the redirect always blows away application state entirely. On Cordova,\n    // the app maintains control flow through the redirect.\n    manager.resetRedirect();\n    _clearRedirectOutcomes();\n\n    await this._originValidation(auth);\n\n    const event = _generateNewEvent(auth, authType, eventId);\n    await _savePartialEvent(auth, event);\n    const url = await _generateHandlerUrl(auth, event, provider);\n    const iabRef = await _performRedirect(url);\n    return _waitForAppResume(auth, manager, iabRef);\n  }\n\n  _isIframeWebStorageSupported(\n    _auth: AuthInternal,\n    _cb: (support: boolean) => unknown\n  ): void {\n    throw new Error('Method not implemented.');\n  }\n\n  _originValidation(auth: AuthInternal): Promise<void> {\n    const key = auth._key();\n    if (!this.originValidationPromises[key]) {\n      this.originValidationPromises[key] = _validateOrigin(auth);\n    }\n\n    return this.originValidationPromises[key];\n  }\n\n  private attachCallbackListeners(\n    auth: AuthInternal,\n    manager: AuthEventManager\n  ): void {\n    // Get the global plugins\n    const { universalLinks, handleOpenURL, BuildInfo } = _cordovaWindow();\n\n    const noEventTimeout = setTimeout(async () => {\n      // We didn't see that initial event. Clear any pending object and\n      // dispatch no event\n      await _getAndRemoveEvent(auth);\n      manager.onEvent(generateNoEvent());\n    }, INITIAL_EVENT_TIMEOUT_MS);\n\n    const universalLinksCb = async (\n      eventData: Record<string, string> | null\n    ): Promise<void> => {\n      // We have an event so we can clear the no event timeout\n      clearTimeout(noEventTimeout);\n\n      const partialEvent = await _getAndRemoveEvent(auth);\n      let finalEvent: AuthEvent | null = null;\n      if (partialEvent && eventData?.['url']) {\n        finalEvent = _eventFromPartialAndUrl(partialEvent, eventData['url']);\n      }\n\n      // If finalEvent is never filled, trigger with no event\n      manager.onEvent(finalEvent || generateNoEvent());\n    };\n\n    // Universal links subscriber doesn't exist for iOS, so we need to check\n    if (\n      typeof universalLinks !== 'undefined' &&\n      typeof universalLinks.subscribe === 'function'\n    ) {\n      universalLinks.subscribe(null, universalLinksCb);\n    }\n\n    // iOS 7 or 8 custom URL schemes.\n    // This is also the current default behavior for iOS 9+.\n    // For this to work, cordova-plugin-customurlscheme needs to be installed.\n    // https://github.com/EddyVerbruggen/Custom-URL-scheme\n    // Do not overwrite the existing developer's URL handler.\n    const existingHandleOpenURL = handleOpenURL;\n    const packagePrefix = `${BuildInfo.packageName.toLowerCase()}://`;\n    _cordovaWindow().handleOpenURL = async url => {\n      if (url.toLowerCase().startsWith(packagePrefix)) {\n        // We want this intentionally to float\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        universalLinksCb({ url });\n      }\n      // Call the developer's handler if it is present.\n      if (typeof existingHandleOpenURL === 'function') {\n        try {\n          existingHandleOpenURL(url);\n        } catch (e) {\n          // This is a developer error. Don't stop the flow of the SDK.\n          console.error(e);\n        }\n      }\n    };\n  }\n}\n\n/**\n * An implementation of {@link PopupRedirectResolver} suitable for Cordova\n * based applications.\n *\n * @public\n */\nexport const cordovaPopupRedirectResolver: PopupRedirectResolver =\n  CordovaPopupRedirectResolver;\n\nfunction generateNoEvent(): AuthEvent {\n  return {\n    type: AuthEventType.UNKNOWN,\n    eventId: null,\n    sessionId: null,\n    urlResponse: null,\n    postBody: null,\n    tenantId: null,\n    error: _createError(AuthErrorCode.NO_AUTH_EVENT)\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as impl from '@firebase/auth/internal';\nimport {\n  getUA,\n  isBrowserExtension,\n  isReactNative,\n  isNode,\n  isIE,\n  isIndexedDBAvailable\n} from '@firebase/util';\n\ndeclare global {\n  interface Document {\n    documentMode?: number;\n  }\n}\n\nconst CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\n\nfunction _getCurrentScheme(): string | null {\n  return self?.location?.protocol || null;\n}\n\n/**\n * @return {boolean} Whether the current environment is http or https.\n */\nfunction _isHttpOrHttps(): boolean {\n  return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\n}\n\n/**\n * @param {?string=} ua The user agent.\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\n *     Cordova environment.\n */\nexport function _isAndroidOrIosCordovaScheme(ua: string = getUA()): boolean {\n  return !!(\n    (_getCurrentScheme() === 'file:' ||\n      _getCurrentScheme() === 'ionic:' ||\n      _getCurrentScheme() === 'capacitor:') &&\n    ua.toLowerCase().match(/iphone|ipad|ipod|android/)\n  );\n}\n\n/**\n * @return {boolean} Whether the environment is a native environment, where\n *     CORS checks do not apply.\n */\nfunction _isNativeEnvironment(): boolean {\n  return isReactNative() || isNode();\n}\n\n/**\n * Checks whether the user agent is IE11.\n * @return {boolean} True if it is IE11.\n */\nfunction _isIe11(): boolean {\n  return isIE() && document?.documentMode === 11;\n}\n\n/**\n * Checks whether the user agent is Edge.\n * @param {string} userAgent The browser user agent string.\n * @return {boolean} True if it is Edge.\n */\nfunction _isEdge(ua: string = getUA()): boolean {\n  return /Edge\\/\\d+/.test(ua);\n}\n\n/**\n * @param {?string=} opt_userAgent The navigator user agent.\n * @return {boolean} Whether local storage is not synchronized between an iframe\n *     and a popup of the same domain.\n */\nfunction _isLocalStorageNotSynchronized(ua: string = getUA()): boolean {\n  return _isIe11() || _isEdge(ua);\n}\n\n/** @return {boolean} Whether web storage is supported. */\nexport function _isWebStorageSupported(): boolean {\n  try {\n    const storage = self.localStorage;\n    const key = impl._generateEventId();\n    if (storage) {\n      // setItem will throw an exception if we cannot access WebStorage (e.g.,\n      // Safari in private mode).\n      storage['setItem'](key, '1');\n      storage['removeItem'](key);\n      // For browsers where iframe web storage does not synchronize with a popup\n      // of the same domain, indexedDB is used for persistent storage. These\n      // browsers include IE11 and Edge.\n      // Make sure it is supported (IE11 and Edge private mode does not support\n      // that).\n      if (_isLocalStorageNotSynchronized()) {\n        // In such browsers, if indexedDB is not supported, an iframe cannot be\n        // notified of the popup sign in result.\n        return isIndexedDBAvailable();\n      }\n      return true;\n    }\n  } catch (e) {\n    // localStorage is not available from a worker. Test availability of\n    // indexedDB.\n    return _isWorker() && isIndexedDBAvailable();\n  }\n  return false;\n}\n\n/**\n * @param {?Object=} global The optional global scope.\n * @return {boolean} Whether current environment is a worker.\n */\nexport function _isWorker(): boolean {\n  // WorkerGlobalScope only defined in worker environment.\n  return (\n    typeof global !== 'undefined' &&\n    'WorkerGlobalScope' in global &&\n    'importScripts' in global\n  );\n}\n\nexport function _isPopupRedirectSupported(): boolean {\n  return (\n    (_isHttpOrHttps() ||\n      isBrowserExtension() ||\n      _isAndroidOrIosCordovaScheme()) &&\n    // React Native with remote debugging reports its location.protocol as\n    // http.\n    !_isNativeEnvironment() &&\n    // Local storage has to be supported for browser popup and redirect\n    // operations to work.\n    _isWebStorageSupported() &&\n    // DOM, popups and redirects are not supported within a worker.\n    !_isWorker()\n  );\n}\n\n/** Quick check that indicates the platform *may* be Cordova */\nexport function _isLikelyCordova(): boolean {\n  return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\n}\n\nexport async function _isCordova(): Promise<boolean> {\n  if (!_isLikelyCordova()) {\n    return false;\n  }\n\n  return new Promise(resolve => {\n    const timeoutId = setTimeout(() => {\n      // We've waited long enough; the telltale Cordova event didn't happen\n      resolve(false);\n    }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\n\n    document.addEventListener('deviceready', () => {\n      clearTimeout(timeoutId);\n      resolve(true);\n    });\n  });\n}\n\nexport function _getSelfWindow(): Window | null {\n  return typeof window !== 'undefined' ? window : null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport { isIndexedDBAvailable, isNode, isReactNative } from '@firebase/util';\nimport { _getSelfWindow, _isWebStorageSupported, _isWorker } from './platform';\n\nexport const Persistence = {\n  LOCAL: 'local',\n  NONE: 'none',\n  SESSION: 'session'\n};\n\nconst _assert: typeof exp._assert = exp._assert;\n\nconst PERSISTENCE_KEY = 'persistence';\n\n/**\n * Validates that an argument is a valid persistence value. If an invalid type\n * is specified, an error is thrown synchronously.\n */\nexport function _validatePersistenceArgument(\n  auth: exp.Auth,\n  persistence: string\n): void {\n  _assert(\n    Object.values(Persistence).includes(persistence),\n    auth,\n    exp.AuthErrorCode.INVALID_PERSISTENCE\n  );\n  // Validate if the specified type is supported in the current environment.\n  if (isReactNative()) {\n    // This is only supported in a browser.\n    _assert(\n      persistence !== Persistence.SESSION,\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  if (isNode()) {\n    // Only none is supported in Node.js.\n    _assert(\n      persistence === Persistence.NONE,\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  if (_isWorker()) {\n    // In a worker environment, either LOCAL or NONE are supported.\n    // If indexedDB not supported and LOCAL provided, throw an error\n    _assert(\n      persistence === Persistence.NONE ||\n        (persistence === Persistence.LOCAL && isIndexedDBAvailable()),\n      auth,\n      exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n    );\n    return;\n  }\n  // This is restricted by what the browser supports.\n  _assert(\n    persistence === Persistence.NONE || _isWebStorageSupported(),\n    auth,\n    exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE\n  );\n}\n\nexport async function _savePersistenceForRedirect(\n  auth: exp.AuthInternal\n): Promise<void> {\n  await auth._initializationPromise;\n  const session = getSessionStorageIfAvailable();\n  const key = exp._persistenceKeyName(\n    PERSISTENCE_KEY,\n    auth.config.apiKey,\n    auth.name\n  );\n  if (session) {\n    session.setItem(key, auth._getPersistence());\n  }\n}\n\nexport function _getPersistencesFromRedirect(\n  apiKey: string,\n  appName: string\n): exp.Persistence[] {\n  const session = getSessionStorageIfAvailable();\n  if (!session) {\n    return [];\n  }\n\n  const key = exp._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\n  const persistence = session.getItem(key);\n\n  switch (persistence) {\n    case Persistence.NONE:\n      return [exp.inMemoryPersistence];\n    case Persistence.LOCAL:\n      return [exp.indexedDBLocalPersistence, exp.browserSessionPersistence];\n    case Persistence.SESSION:\n      return [exp.browserSessionPersistence];\n    default:\n      return [];\n  }\n}\n\n/** Returns session storage, or null if the property access errors */\nfunction getSessionStorageIfAvailable(): Storage | null {\n  try {\n    return _getSelfWindow()?.sessionStorage || null;\n  } catch (e) {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport { _isCordova, _isLikelyCordova } from './platform';\n\nconst _assert: typeof exp._assert = exp._assert;\n\n/** Platform-agnostic popup-redirect resolver */\nexport class CompatPopupRedirectResolver\n  implements exp.PopupRedirectResolverInternal\n{\n  // Create both resolvers for dynamic resolution later\n  private readonly browserResolver: exp.PopupRedirectResolverInternal =\n    exp._getInstance(exp.browserPopupRedirectResolver);\n  private readonly cordovaResolver: exp.PopupRedirectResolverInternal =\n    exp._getInstance(exp.cordovaPopupRedirectResolver);\n  // The actual resolver in use: either browserResolver or cordovaResolver.\n  private underlyingResolver: exp.PopupRedirectResolverInternal | null = null;\n  _redirectPersistence = exp.browserSessionPersistence;\n\n  _completeRedirectFn: (\n    auth: exp.Auth,\n    resolver: exp.PopupRedirectResolver,\n    bypassAuthState: boolean\n  ) => Promise<exp.UserCredential | null> = exp._getRedirectResult;\n  _overrideRedirectResult = exp._overrideRedirectResult;\n\n  async _initialize(auth: exp.AuthImpl): Promise<exp.EventManager> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._initialize(auth);\n  }\n\n  async _openPopup(\n    auth: exp.AuthImpl,\n    provider: exp.AuthProvider,\n    authType: exp.AuthEventType,\n    eventId?: string\n  ): Promise<exp.AuthPopup> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._openPopup(\n      auth,\n      provider,\n      authType,\n      eventId\n    );\n  }\n\n  async _openRedirect(\n    auth: exp.AuthImpl,\n    provider: exp.AuthProvider,\n    authType: exp.AuthEventType,\n    eventId?: string\n  ): Promise<void> {\n    await this.selectUnderlyingResolver();\n    return this.assertedUnderlyingResolver._openRedirect(\n      auth,\n      provider,\n      authType,\n      eventId\n    );\n  }\n\n  _isIframeWebStorageSupported(\n    auth: exp.AuthImpl,\n    cb: (support: boolean) => unknown\n  ): void {\n    this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\n  }\n\n  _originValidation(auth: exp.Auth): Promise<void> {\n    return this.assertedUnderlyingResolver._originValidation(auth);\n  }\n\n  get _shouldInitProactively(): boolean {\n    return _isLikelyCordova() || this.browserResolver._shouldInitProactively;\n  }\n\n  private get assertedUnderlyingResolver(): exp.PopupRedirectResolverInternal {\n    _assert(this.underlyingResolver, exp.AuthErrorCode.INTERNAL_ERROR);\n    return this.underlyingResolver;\n  }\n\n  private async selectUnderlyingResolver(): Promise<void> {\n    if (this.underlyingResolver) {\n      return;\n    }\n\n    // We haven't yet determined whether or not we're in Cordova; go ahead\n    // and determine that state now.\n    const isCordova = await _isCordova();\n    this.underlyingResolver = isCordova\n      ? this.cordovaResolver\n      : this.browserResolver;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Forward direction wrapper from Compat --unwrap-> Exp */\nexport interface Wrapper<T> {\n  unwrap(): T;\n}\n\n/** Reverse direction wrapper from Exp --wrapped--> Compat */\nexport interface ReverseWrapper<T> {\n  wrapped(): T;\n}\n\nexport function unwrap<T>(object: unknown): T {\n  return (object as Wrapper<T>).unwrap();\n}\n\nexport function wrapped<T>(object: unknown): T {\n  return (object as ReverseWrapper<T>).wrapped();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { FirebaseError } from '@firebase/util';\nimport { Auth } from './auth';\nimport { User } from './user';\nimport { unwrap, wrapped } from './wrap';\n\nfunction credentialFromResponse(\n  userCredential: exp.UserCredentialInternal\n): exp.AuthCredential | null {\n  return credentialFromObject(userCredential);\n}\n\nfunction attachExtraErrorFields(auth: exp.Auth, e: FirebaseError): void {\n  // The response contains all fields from the server which may or may not\n  // actually match the underlying type\n  const response = (e.customData as exp.TaggedWithTokenResponse | undefined)\n    ?._tokenResponse as unknown as Record<string, string>;\n  if ((e as FirebaseError)?.code === 'auth/multi-factor-auth-required') {\n    const mfaErr = e as compat.MultiFactorError;\n    mfaErr.resolver = new MultiFactorResolver(\n      auth,\n      exp.getMultiFactorResolver(auth, e as exp.MultiFactorError)\n    );\n  } else if (response) {\n    const credential = credentialFromObject(e);\n    const credErr = e as compat.AuthError;\n    if (credential) {\n      credErr.credential = credential;\n      credErr.tenantId = response.tenantId || undefined;\n      credErr.email = response.email || undefined;\n      credErr.phoneNumber = response.phoneNumber || undefined;\n    }\n  }\n}\n\nfunction credentialFromObject(\n  object: FirebaseError | exp.UserCredential\n): exp.AuthCredential | null {\n  const { _tokenResponse } = (\n    object instanceof FirebaseError ? object.customData : object\n  ) as exp.TaggedWithTokenResponse;\n  if (!_tokenResponse) {\n    return null;\n  }\n\n  // Handle phone Auth credential responses, as they have a different format\n  // from other backend responses (i.e. no providerId). This is also only the\n  // case for user credentials (does not work for errors).\n  if (!(object instanceof FirebaseError)) {\n    if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\n      return exp.PhoneAuthProvider.credentialFromResult(object);\n    }\n  }\n\n  const providerId = _tokenResponse.providerId;\n\n  // Email and password is not supported as there is no situation where the\n  // server would return the password to the client.\n  if (!providerId || providerId === exp.ProviderId.PASSWORD) {\n    return null;\n  }\n\n  let provider: Pick<\n    typeof exp.OAuthProvider,\n    'credentialFromResult' | 'credentialFromError'\n  >;\n  switch (providerId) {\n    case exp.ProviderId.GOOGLE:\n      provider = exp.GoogleAuthProvider;\n      break;\n    case exp.ProviderId.FACEBOOK:\n      provider = exp.FacebookAuthProvider;\n      break;\n    case exp.ProviderId.GITHUB:\n      provider = exp.GithubAuthProvider;\n      break;\n    case exp.ProviderId.TWITTER:\n      provider = exp.TwitterAuthProvider;\n      break;\n    default:\n      const {\n        oauthIdToken,\n        oauthAccessToken,\n        oauthTokenSecret,\n        pendingToken,\n        nonce\n      } = _tokenResponse as exp.SignInWithIdpResponse;\n      if (\n        !oauthAccessToken &&\n        !oauthTokenSecret &&\n        !oauthIdToken &&\n        !pendingToken\n      ) {\n        return null;\n      }\n      // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\n      if (pendingToken) {\n        if (providerId.startsWith('saml.')) {\n          return exp.SAMLAuthCredential._create(providerId, pendingToken);\n        } else {\n          // OIDC and non-default providers excluding Twitter.\n          return exp.OAuthCredential._fromParams({\n            providerId,\n            signInMethod: providerId,\n            pendingToken,\n            idToken: oauthIdToken,\n            accessToken: oauthAccessToken\n          });\n        }\n      }\n      return new exp.OAuthProvider(providerId).credential({\n        idToken: oauthIdToken,\n        accessToken: oauthAccessToken,\n        rawNonce: nonce\n      });\n  }\n\n  return object instanceof FirebaseError\n    ? provider.credentialFromError(object)\n    : provider.credentialFromResult(object);\n}\n\nexport function convertCredential(\n  auth: exp.Auth,\n  credentialPromise: Promise<exp.UserCredential>\n): Promise<compat.UserCredential> {\n  return credentialPromise\n    .catch(e => {\n      if (e instanceof FirebaseError) {\n        attachExtraErrorFields(auth, e);\n      }\n      throw e;\n    })\n    .then(credential => {\n      const operationType = credential.operationType;\n      const user = credential.user;\n\n      return {\n        operationType,\n        credential: credentialFromResponse(\n          credential as exp.UserCredentialInternal\n        ),\n        additionalUserInfo: exp.getAdditionalUserInfo(\n          credential as exp.UserCredential\n        ),\n        user: User.getOrCreate(user)\n      };\n    });\n}\n\nexport async function convertConfirmationResult(\n  auth: exp.Auth,\n  confirmationResultPromise: Promise<exp.ConfirmationResult>\n): Promise<compat.ConfirmationResult> {\n  const confirmationResultExp = await confirmationResultPromise;\n  return {\n    verificationId: confirmationResultExp.verificationId,\n    confirm: (verificationCode: string) =>\n      convertCredential(auth, confirmationResultExp.confirm(verificationCode))\n  };\n}\n\nclass MultiFactorResolver implements compat.MultiFactorResolver {\n  readonly auth: Auth;\n  constructor(\n    auth: exp.Auth,\n    private readonly resolver: exp.MultiFactorResolver\n  ) {\n    this.auth = wrapped(auth);\n  }\n\n  get session(): compat.MultiFactorSession {\n    return this.resolver.session;\n  }\n\n  get hints(): compat.MultiFactorInfo[] {\n    return this.resolver.hints;\n  }\n\n  resolveSignIn(\n    assertion: compat.MultiFactorAssertion\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      unwrap(this.auth),\n      this.resolver.resolveSignIn(assertion as exp.MultiFactorAssertion)\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Compat } from '@firebase/util';\nimport { _savePersistenceForRedirect } from './persistence';\nimport { CompatPopupRedirectResolver } from './popup_redirect';\nimport {\n  convertConfirmationResult,\n  convertCredential\n} from './user_credential';\n\nexport class User implements compat.User, Compat<exp.User> {\n  // Maintain a map so that there's always a 1:1 mapping between new User and\n  // legacy compat users\n  private static readonly USER_MAP = new WeakMap<exp.User, User>();\n\n  readonly multiFactor: compat.MultiFactorUser;\n\n  private constructor(readonly _delegate: exp.User) {\n    this.multiFactor = exp.multiFactor(_delegate);\n  }\n\n  static getOrCreate(user: exp.User): User {\n    if (!User.USER_MAP.has(user)) {\n      User.USER_MAP.set(user, new User(user));\n    }\n\n    return User.USER_MAP.get(user)!;\n  }\n\n  delete(): Promise<void> {\n    return this._delegate.delete();\n  }\n  reload(): Promise<void> {\n    return this._delegate.reload();\n  }\n  toJSON(): object {\n    return this._delegate.toJSON();\n  }\n  getIdTokenResult(forceRefresh?: boolean): Promise<compat.IdTokenResult> {\n    return this._delegate.getIdTokenResult(forceRefresh);\n  }\n  getIdToken(forceRefresh?: boolean): Promise<string> {\n    return this._delegate.getIdToken(forceRefresh);\n  }\n  linkAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.linkWithCredential(credential);\n  }\n  async linkWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.linkWithCredential(this._delegate, credential as exp.AuthCredential)\n    );\n  }\n  async linkWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this.auth,\n      exp.linkWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier)\n    );\n  }\n  async linkWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.linkWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async linkWithRedirect(provider: compat.AuthProvider): Promise<void> {\n    await _savePersistenceForRedirect(exp._castAuth(this.auth));\n    return exp.linkWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  reauthenticateAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.reauthenticateWithCredential(credential);\n  }\n  async reauthenticateWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth as unknown as exp.Auth,\n      exp.reauthenticateWithCredential(\n        this._delegate,\n        credential as exp.AuthCredential\n      )\n    );\n  }\n  reauthenticateWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this.auth,\n      exp.reauthenticateWithPhoneNumber(\n        this._delegate,\n        phoneNumber,\n        applicationVerifier\n      )\n    );\n  }\n  reauthenticateWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this.auth,\n      exp.reauthenticateWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async reauthenticateWithRedirect(\n    provider: compat.AuthProvider\n  ): Promise<void> {\n    await _savePersistenceForRedirect(exp._castAuth(this.auth));\n    return exp.reauthenticateWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  sendEmailVerification(\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.sendEmailVerification(this._delegate, actionCodeSettings);\n  }\n  async unlink(providerId: string): Promise<compat.User> {\n    await exp.unlink(this._delegate, providerId);\n    return this;\n  }\n  updateEmail(newEmail: string): Promise<void> {\n    return exp.updateEmail(this._delegate, newEmail);\n  }\n  updatePassword(newPassword: string): Promise<void> {\n    return exp.updatePassword(this._delegate, newPassword);\n  }\n  updatePhoneNumber(phoneCredential: compat.AuthCredential): Promise<void> {\n    return exp.updatePhoneNumber(\n      this._delegate,\n      phoneCredential as exp.PhoneAuthCredential\n    );\n  }\n  updateProfile(profile: {\n    displayName?: string | null;\n    photoURL?: string | null;\n  }): Promise<void> {\n    return exp.updateProfile(this._delegate, profile);\n  }\n  verifyBeforeUpdateEmail(\n    newEmail: string,\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.verifyBeforeUpdateEmail(\n      this._delegate,\n      newEmail,\n      actionCodeSettings\n    );\n  }\n  get emailVerified(): boolean {\n    return this._delegate.emailVerified;\n  }\n  get isAnonymous(): boolean {\n    return this._delegate.isAnonymous;\n  }\n  get metadata(): compat.UserMetadata {\n    return this._delegate.metadata;\n  }\n  get phoneNumber(): string | null {\n    return this._delegate.phoneNumber;\n  }\n  get providerData(): Array<compat.UserInfo | null> {\n    return this._delegate.providerData;\n  }\n  get refreshToken(): string {\n    return this._delegate.refreshToken;\n  }\n  get tenantId(): string | null {\n    return this._delegate.tenantId;\n  }\n  get displayName(): string | null {\n    return this._delegate.displayName;\n  }\n  get email(): string | null {\n    return this._delegate.email;\n  }\n  get photoURL(): string | null {\n    return this._delegate.photoURL;\n  }\n  get providerId(): string {\n    return this._delegate.providerId;\n  }\n  get uid(): string {\n    return this._delegate.uid;\n  }\n  private get auth(): exp.Auth {\n    return (this._delegate as exp.UserImpl).auth as unknown as exp.Auth;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Provider } from '@firebase/component';\nimport { ErrorFn, Observer, Unsubscribe } from '@firebase/util';\n\nimport {\n  _validatePersistenceArgument,\n  Persistence,\n  _getPersistencesFromRedirect,\n  _savePersistenceForRedirect\n} from './persistence';\nimport { _isPopupRedirectSupported } from './platform';\nimport { CompatPopupRedirectResolver } from './popup_redirect';\nimport { User } from './user';\nimport {\n  convertConfirmationResult,\n  convertCredential\n} from './user_credential';\nimport { ReverseWrapper, Wrapper } from './wrap';\n\nconst _assert: typeof exp._assert = exp._assert;\n\nexport class Auth\n  implements compat.FirebaseAuth, Wrapper<exp.Auth>, _FirebaseService\n{\n  static Persistence = Persistence;\n  readonly _delegate: exp.AuthImpl;\n\n  constructor(readonly app: FirebaseApp, provider: Provider<'auth'>) {\n    if (provider.isInitialized()) {\n      this._delegate = provider.getImmediate() as exp.AuthImpl;\n      this.linkUnderlyingAuth();\n      return;\n    }\n\n    const { apiKey } = app.options;\n    // TODO: platform needs to be determined using heuristics\n    _assert(apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n\n    // TODO: platform needs to be determined using heuristics\n    _assert(apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n\n    // Only use a popup/redirect resolver in browser environments\n    const resolver =\n      typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\n    this._delegate = provider.initialize({\n      options: {\n        persistence: buildPersistenceHierarchy(apiKey, app.name),\n        popupRedirectResolver: resolver\n      }\n    }) as exp.AuthImpl;\n\n    this._delegate._updateErrorMap(exp.debugErrorMap);\n    this.linkUnderlyingAuth();\n  }\n\n  get emulatorConfig(): compat.EmulatorConfig | null {\n    return this._delegate.emulatorConfig;\n  }\n\n  get currentUser(): compat.User | null {\n    if (!this._delegate.currentUser) {\n      return null;\n    }\n\n    return User.getOrCreate(this._delegate.currentUser);\n  }\n  get languageCode(): string | null {\n    return this._delegate.languageCode;\n  }\n  set languageCode(languageCode: string | null) {\n    this._delegate.languageCode = languageCode;\n  }\n  get settings(): compat.AuthSettings {\n    return this._delegate.settings;\n  }\n  get tenantId(): string | null {\n    return this._delegate.tenantId;\n  }\n  set tenantId(tid: string | null) {\n    this._delegate.tenantId = tid;\n  }\n  useDeviceLanguage(): void {\n    this._delegate.useDeviceLanguage();\n  }\n  signOut(): Promise<void> {\n    return this._delegate.signOut();\n  }\n  useEmulator(url: string, options?: { disableWarnings: boolean }): void {\n    exp.connectAuthEmulator(this._delegate, url, options);\n  }\n  applyActionCode(code: string): Promise<void> {\n    return exp.applyActionCode(this._delegate, code);\n  }\n\n  checkActionCode(code: string): Promise<compat.ActionCodeInfo> {\n    return exp.checkActionCode(this._delegate, code);\n  }\n\n  confirmPasswordReset(code: string, newPassword: string): Promise<void> {\n    return exp.confirmPasswordReset(this._delegate, code, newPassword);\n  }\n\n  async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.createUserWithEmailAndPassword(this._delegate, email, password)\n    );\n  }\n  fetchProvidersForEmail(email: string): Promise<string[]> {\n    return this.fetchSignInMethodsForEmail(email);\n  }\n  fetchSignInMethodsForEmail(email: string): Promise<string[]> {\n    return exp.fetchSignInMethodsForEmail(this._delegate, email);\n  }\n  isSignInWithEmailLink(emailLink: string): boolean {\n    return exp.isSignInWithEmailLink(this._delegate, emailLink);\n  }\n  async getRedirectResult(): Promise<compat.UserCredential> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    const credential = await exp.getRedirectResult(\n      this._delegate,\n      CompatPopupRedirectResolver\n    );\n    if (!credential) {\n      return {\n        credential: null,\n        user: null\n      };\n    }\n    return convertCredential(this._delegate, Promise.resolve(credential));\n  }\n\n  // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n  // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\n  // out of autogenerated documentation pages to reduce accidental misuse.\n  addFrameworkForLogging(framework: string): void {\n    exp.addFrameworkForLogging(this._delegate, framework);\n  }\n\n  onAuthStateChanged(\n    nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n    errorFn?: (error: compat.Error) => unknown,\n    completed?: Unsubscribe\n  ): Unsubscribe {\n    const { next, error, complete } = wrapObservers(\n      nextOrObserver,\n      errorFn,\n      completed\n    );\n    return this._delegate.onAuthStateChanged(next!, error, complete);\n  }\n  onIdTokenChanged(\n    nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n    errorFn?: (error: compat.Error) => unknown,\n    completed?: Unsubscribe\n  ): Unsubscribe {\n    const { next, error, complete } = wrapObservers(\n      nextOrObserver,\n      errorFn,\n      completed\n    );\n    return this._delegate.onIdTokenChanged(next!, error, complete);\n  }\n  sendSignInLinkToEmail(\n    email: string,\n    actionCodeSettings: compat.ActionCodeSettings\n  ): Promise<void> {\n    return exp.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\n  }\n  sendPasswordResetEmail(\n    email: string,\n    actionCodeSettings?: compat.ActionCodeSettings | null\n  ): Promise<void> {\n    return exp.sendPasswordResetEmail(\n      this._delegate,\n      email,\n      actionCodeSettings || undefined\n    );\n  }\n  async setPersistence(persistence: string): Promise<void> {\n    _validatePersistenceArgument(this._delegate, persistence);\n    let converted;\n    switch (persistence) {\n      case Persistence.SESSION:\n        converted = exp.browserSessionPersistence;\n        break;\n      case Persistence.LOCAL:\n        // Not using isIndexedDBAvailable() since it only checks if indexedDB is defined.\n        const isIndexedDBFullySupported = await exp\n          ._getInstance<exp.PersistenceInternal>(exp.indexedDBLocalPersistence)\n          ._isAvailable();\n        converted = isIndexedDBFullySupported\n          ? exp.indexedDBLocalPersistence\n          : exp.browserLocalPersistence;\n        break;\n      case Persistence.NONE:\n        converted = exp.inMemoryPersistence;\n        break;\n      default:\n        return exp._fail(exp.AuthErrorCode.ARGUMENT_ERROR, {\n          appName: this._delegate.name\n        });\n    }\n\n    return this._delegate.setPersistence(converted);\n  }\n\n  signInAndRetrieveDataWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return this.signInWithCredential(credential);\n  }\n  signInAnonymously(): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInAnonymously(this._delegate)\n    );\n  }\n  signInWithCredential(\n    credential: compat.AuthCredential\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithCredential(this._delegate, credential as exp.AuthCredential)\n    );\n  }\n  signInWithCustomToken(token: string): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithCustomToken(this._delegate, token)\n    );\n  }\n  signInWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithEmailAndPassword(this._delegate, email, password)\n    );\n  }\n  signInWithEmailLink(\n    email: string,\n    emailLink?: string\n  ): Promise<compat.UserCredential> {\n    return convertCredential(\n      this._delegate,\n      exp.signInWithEmailLink(this._delegate, email, emailLink)\n    );\n  }\n  signInWithPhoneNumber(\n    phoneNumber: string,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<compat.ConfirmationResult> {\n    return convertConfirmationResult(\n      this._delegate,\n      exp.signInWithPhoneNumber(\n        this._delegate,\n        phoneNumber,\n        applicationVerifier\n      )\n    );\n  }\n  async signInWithPopup(\n    provider: compat.AuthProvider\n  ): Promise<compat.UserCredential> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n    return convertCredential(\n      this._delegate,\n      exp.signInWithPopup(\n        this._delegate,\n        provider as exp.AuthProvider,\n        CompatPopupRedirectResolver\n      )\n    );\n  }\n  async signInWithRedirect(provider: compat.AuthProvider): Promise<void> {\n    _assert(\n      _isPopupRedirectSupported(),\n      this._delegate,\n      exp.AuthErrorCode.OPERATION_NOT_SUPPORTED\n    );\n\n    await _savePersistenceForRedirect(this._delegate);\n    return exp.signInWithRedirect(\n      this._delegate,\n      provider as exp.AuthProvider,\n      CompatPopupRedirectResolver\n    );\n  }\n  updateCurrentUser(user: compat.User | null): Promise<void> {\n    // remove ts-ignore once overloads are defined for exp functions to accept compat objects\n    // @ts-ignore\n    return this._delegate.updateCurrentUser(user);\n  }\n  verifyPasswordResetCode(code: string): Promise<string> {\n    return exp.verifyPasswordResetCode(this._delegate, code);\n  }\n  unwrap(): exp.Auth {\n    return this._delegate;\n  }\n  _delete(): Promise<void> {\n    return this._delegate._delete();\n  }\n  private linkUnderlyingAuth(): void {\n    (this._delegate as unknown as ReverseWrapper<Auth>).wrapped = () => this;\n  }\n}\n\nfunction wrapObservers(\n  nextOrObserver: Observer<unknown> | ((a: compat.User | null) => unknown),\n  error?: (error: compat.Error) => unknown,\n  complete?: Unsubscribe\n): Partial<Observer<exp.User | null>> {\n  let next = nextOrObserver;\n  if (typeof nextOrObserver !== 'function') {\n    ({ next, error, complete } = nextOrObserver);\n  }\n\n  // We know 'next' is now a function\n  const oldNext = next as (a: compat.User | null) => unknown;\n\n  const newNext = (user: exp.User | null): unknown =>\n    oldNext(user && User.getOrCreate(user as exp.User));\n  return {\n    next: newNext,\n    error: error as ErrorFn,\n    complete\n  };\n}\n\nfunction buildPersistenceHierarchy(\n  apiKey: string,\n  appName: string\n): exp.Persistence[] {\n  // Note this is slightly different behavior: in this case, the stored\n  // persistence is checked *first* rather than last. This is because we want\n  // to prefer stored persistence type in the hierarchy. This is an empty\n  // array if window is not available or there is no pending redirect\n  const persistences = _getPersistencesFromRedirect(apiKey, appName);\n\n  // If \"self\" is available, add indexedDB\n  if (\n    typeof self !== 'undefined' &&\n    !persistences.includes(exp.indexedDBLocalPersistence)\n  ) {\n    persistences.push(exp.indexedDBLocalPersistence);\n  }\n\n  // If \"window\" is available, add HTML Storage persistences\n  if (typeof window !== 'undefined') {\n    for (const persistence of [\n      exp.browserLocalPersistence,\n      exp.browserSessionPersistence\n    ]) {\n      if (!persistences.includes(persistence)) {\n        persistences.push(persistence);\n      }\n    }\n  }\n\n  // Add in-memory as a final fallback\n  if (!persistences.includes(exp.inMemoryPersistence)) {\n    persistences.push(exp.inMemoryPersistence);\n  }\n\n  return persistences;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _castAuth } from '../src/core/auth/auth_impl';\nimport { Auth } from '../src/model/public_types';\n\n/**\n * This interface is intended only for use by @firebase/auth-compat, do not use directly\n */\nexport * from '../index';\n\nexport { SignInWithIdpResponse } from '../src/api/authentication/idp';\nexport { AuthErrorCode } from '../src/core/errors';\nexport { PersistenceInternal } from '../src/core/persistence';\nexport { _persistenceKeyName } from '../src/core/persistence/persistence_user_manager';\nexport { UserImpl } from '../src/core/user/user_impl';\nexport { _getInstance } from '../src/core/util/instantiator';\nexport {\n  PopupRedirectResolverInternal,\n  EventManager,\n  AuthEventType\n} from '../src/model/popup_redirect';\nexport { UserCredentialInternal, UserParameters } from '../src/model/user';\nexport { AuthInternal, ConfigInternal } from '../src/model/auth';\nexport { DefaultConfig, AuthImpl, _castAuth } from '../src/core/auth/auth_impl';\n\nexport { ClientPlatform, _getClientVersion } from '../src/core/util/version';\n\nexport { _generateEventId } from '../src/core/util/event_id';\nexport { TaggedWithTokenResponse } from '../src/model/id_token';\nexport { _fail, _assert } from '../src/core/util/assert';\nexport { AuthPopup } from '../src/platform_browser/util/popup';\nexport { _getRedirectResult } from '../src/platform_browser/strategies/redirect';\nexport { _overrideRedirectResult } from '../src/core/strategies/redirect';\nexport { cordovaPopupRedirectResolver } from '../src/platform_cordova/popup_redirect/popup_redirect';\nexport { FetchProvider } from '../src/core/util/fetch_provider';\nexport { SAMLAuthCredential } from '../src/core/credentials/saml';\n\n// This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n// It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it out\n// of autogenerated documentation pages to reduce accidental misuse.\nexport function addFrameworkForLogging(auth: Auth, framework: string): void {\n  _castAuth(auth)._logFramework(framework);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport firebase from '@firebase/app-compat';\nimport { Compat } from '@firebase/util';\nimport { unwrap } from './wrap';\n\nexport class PhoneAuthProvider\n  implements compat.PhoneAuthProvider, Compat<exp.PhoneAuthProvider>\n{\n  providerId = 'phone';\n  readonly _delegate: exp.PhoneAuthProvider;\n\n  static PHONE_SIGN_IN_METHOD = exp.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\n  static PROVIDER_ID = exp.PhoneAuthProvider.PROVIDER_ID;\n\n  static credential(\n    verificationId: string,\n    verificationCode: string\n  ): compat.AuthCredential {\n    return exp.PhoneAuthProvider.credential(verificationId, verificationCode);\n  }\n\n  constructor() {\n    // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n    // @ts-ignore\n    this._delegate = new exp.PhoneAuthProvider(unwrap(firebase.auth!()));\n  }\n\n  verifyPhoneNumber(\n    phoneInfoOptions:\n      | string\n      | compat.PhoneSingleFactorInfoOptions\n      | compat.PhoneMultiFactorEnrollInfoOptions\n      | compat.PhoneMultiFactorSignInInfoOptions,\n    applicationVerifier: compat.ApplicationVerifier\n  ): Promise<string> {\n    return this._delegate.verifyPhoneNumber(\n      // The implementation matches but the types are subtly incompatible\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      phoneInfoOptions as any,\n      applicationVerifier\n    );\n  }\n\n  unwrap(): exp.PhoneAuthProvider {\n    return this._delegate;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase, { FirebaseApp } from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport * as compat from '@firebase/auth-types';\nimport { Compat } from '@firebase/util';\n\nconst _assert: typeof exp._assert = exp._assert;\n\nexport class RecaptchaVerifier\n  implements compat.RecaptchaVerifier, Compat<exp.ApplicationVerifier>\n{\n  readonly _delegate: exp.RecaptchaVerifier;\n  type: string;\n  constructor(\n    container: HTMLElement | string,\n    parameters?: object | null,\n    app: FirebaseApp = firebase.app()\n  ) {\n    // API key is required for web client RPC calls.\n    _assert(app.options?.apiKey, exp.AuthErrorCode.INVALID_API_KEY, {\n      appName: app.name\n    });\n    this._delegate = new exp.RecaptchaVerifier(\n      container,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parameters as any,\n\n      // TODO: remove ts-ignore when moving types from auth-types to auth-compat\n      // @ts-ignore\n      app.auth!()\n    );\n    this.type = this._delegate.type;\n  }\n  clear(): void {\n    this._delegate.clear();\n  }\n  render(): Promise<number> {\n    return this._delegate.render();\n  }\n  verify(): Promise<string> {\n    return this._delegate.verify();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable camelcase */\n\nimport firebase, { _FirebaseNamespace } from '@firebase/app-compat';\nimport * as impl from '@firebase/auth/internal';\nimport {\n  Component,\n  ComponentType,\n  InstantiationMode\n} from '@firebase/component';\nimport { FirebaseError } from '@firebase/util';\n\nimport * as types from '@firebase/auth-types';\nimport { name, version } from './package.json';\nimport { Auth } from './src/auth';\nimport { PhoneAuthProvider as CompatAuthProvider } from './src/phone_auth_provider';\nimport { RecaptchaVerifier as CompatRecaptchaVerifier } from './src/recaptcha_verifier';\n\nconst AUTH_TYPE = 'auth-compat';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'auth-compat': types.FirebaseAuth;\n  }\n}\n\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    auth: {\n      (app?: FirebaseApp): types.FirebaseAuth;\n      Auth: typeof types.FirebaseAuth;\n      EmailAuthProvider: typeof types.EmailAuthProvider;\n      EmailAuthProvider_Instance: typeof types.EmailAuthProvider_Instance;\n      FacebookAuthProvider: typeof types.FacebookAuthProvider;\n      FacebookAuthProvider_Instance: typeof types.FacebookAuthProvider_Instance;\n      GithubAuthProvider: typeof types.GithubAuthProvider;\n      GithubAuthProvider_Instance: typeof types.GithubAuthProvider_Instance;\n      GoogleAuthProvider: typeof types.GoogleAuthProvider;\n      GoogleAuthProvider_Instance: typeof types.GoogleAuthProvider_Instance;\n      OAuthProvider: typeof types.OAuthProvider;\n      SAMLAuthProvider: typeof types.SAMLAuthProvider;\n      PhoneAuthProvider: typeof types.PhoneAuthProvider;\n      PhoneAuthProvider_Instance: typeof types.PhoneAuthProvider_Instance;\n      PhoneMultiFactorGenerator: typeof types.PhoneMultiFactorGenerator;\n      RecaptchaVerifier: typeof types.RecaptchaVerifier;\n      RecaptchaVerifier_Instance: typeof types.RecaptchaVerifier_Instance;\n      TwitterAuthProvider: typeof types.TwitterAuthProvider;\n      TwitterAuthProvider_Instance: typeof types.TwitterAuthProvider_Instance;\n    };\n  }\n  interface FirebaseApp {\n    auth?(): types.FirebaseAuth;\n  }\n}\n\n// Create auth components to register with firebase.\n// Provides Auth public APIs.\nfunction registerAuthCompat(instance: _FirebaseNamespace): void {\n  instance.INTERNAL.registerComponent(\n    new Component(\n      AUTH_TYPE,\n      container => {\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app-compat').getImmediate();\n        const authProvider = container.getProvider('auth');\n        return new Auth(app, authProvider);\n      },\n      ComponentType.PUBLIC\n    )\n      .setServiceProps({\n        ActionCodeInfo: {\n          Operation: {\n            EMAIL_SIGNIN: impl.ActionCodeOperation.EMAIL_SIGNIN,\n            PASSWORD_RESET: impl.ActionCodeOperation.PASSWORD_RESET,\n            RECOVER_EMAIL: impl.ActionCodeOperation.RECOVER_EMAIL,\n            REVERT_SECOND_FACTOR_ADDITION:\n              impl.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\n            VERIFY_AND_CHANGE_EMAIL:\n              impl.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\n            VERIFY_EMAIL: impl.ActionCodeOperation.VERIFY_EMAIL\n          }\n        },\n        EmailAuthProvider: impl.EmailAuthProvider,\n        FacebookAuthProvider: impl.FacebookAuthProvider,\n        GithubAuthProvider: impl.GithubAuthProvider,\n        GoogleAuthProvider: impl.GoogleAuthProvider,\n        OAuthProvider: impl.OAuthProvider,\n        SAMLAuthProvider: impl.SAMLAuthProvider,\n        PhoneAuthProvider: CompatAuthProvider,\n        PhoneMultiFactorGenerator: impl.PhoneMultiFactorGenerator,\n        RecaptchaVerifier: CompatRecaptchaVerifier,\n        TwitterAuthProvider: impl.TwitterAuthProvider,\n        Auth,\n        AuthCredential: impl.AuthCredential,\n        Error: FirebaseError\n      })\n      .setInstantiationMode(InstantiationMode.LAZY)\n      .setMultipleInstances(false)\n  );\n\n  instance.registerVersion(name, version);\n}\n\nregisterAuthCompat(firebase as _FirebaseNamespace);\n"],"names":["stringToByteArray","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","this","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","base64Decode","e","console","error","deepExtend","target","source","Object","constructor","Date","getTime","undefined","prop","hasOwnProperty","getUA","navigator","isMobileCordova","window","test","isNode","prototype","toString","call","global","process","isBrowser","self","isBrowserExtension","runtime","chrome","browser","id","isReactNative","isIE","ua","indexOf","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","Promise","resolve","reject","preExist","DB_CHECK_NAME","request","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","message","getDefaultsFromGlobal","getGlobal","__FIREBASE_DEFAULTS__","getDefaults","defaultsJsonString","JSON","parse","getDefaultsFromEnvVariable","document","match","cookie","decoded","getDefaultsFromCookie","info","getDefaultAppConfig","config","getExperimentalSetting","name","Deferred","promise","callback","value","catch","FirebaseError","code","customData","setPrototypeOf","captureStackTrace","ErrorFactory","create","service","serviceName","errors","fullCode","template","replaceTemplate","fullMessage","data","PATTERN","_","key","contains","obj","isEmpty","deepEqual","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","isObject","thing","querystring","querystringParams","params","forEach","arrayVal","encodeURIComponent","entries","querystringDecode","split","token","decodeURIComponent","extractQuerystring","url","queryStart","fragmentStart","substring","createSubscribe","executor","onNoObservers","proxy","ObserverProxy","subscribe","bind","task","then","forEachObserver","observer","next","complete","nextOrObserver","methods","method","implementsAnyMethods","noop","unsub","unsubscribeOne","observers","finalized","finalError","observerCount","fn","sendOne","err","getModularInstance","_delegate","asyncGeneratorStep","gen","_next","_throw","arg","done","_asyncToGenerator","args","arguments","apply","_regeneratorRuntime","exports","Op","hasOwn","defineProperty","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","record","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","__proto__","awrap","async","iter","val","object","reverse","pop","skipTempReset","prev","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","finish","thrown","delegateYield","FirebaseAppImpl","firebase","_addComponent","Component","container","automaticDataCollectionEnabled","options","checkDestroyed","INTERNAL","removeApp","deleteApp","instanceIdentifier","_DEFAULT_ENTRY_NAME","provider","getProvider","isInitialized","getComponent","instantiationMode","initialize","getImmediate","identifier","clearInstance","component","_addOrOverwriteComponent","ERRORS","ERROR_FACTORY","createFirebaseNamespace","namespace","firebaseAppImpl","apps","__esModule","initializeApp","rawConfig","app","modularAPIs","appCompat","registerVersion","setLogLevel","onLog","SDK_VERSION","registerComponent","componentName","componentNameWithoutCompat","serviceNamespace","appArg","appName","serviceProps","serviceFxn","_getService","multipleInstances","useAsService","get","map","createFirebaseNamespaceCore","extendNamespace","props","logger","Logger","warn","sdkVersion","variant","firebaseNamespace","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","receiver","IDBTransaction","objectStoreNames","objectStore","set","has","wrapFunction","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","unwrap","storeNames","tx","sort","transformCachableValue","unlisten","removeEventListener","DOMException","addEventListener","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","some","Proxy","IDBRequest","success","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","useIndex","isWrite","storeName","store","index","shift","all","oldTraps","PlatformLoggerServiceImpl","getProviders","isVersionServiceProvider","library","version","filter","logString","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_apps","_components","addComponent","debug","addOrOverwriteComponent","_registerComponent","_getProvider","heartbeatController","optional","triggerHeartbeat","_removeServiceInstance","_clearComponents","clear","_options","_config","_name","_automaticDataCollectionEnabled","_container","_isDeleted","isDeleted","existingApp","ComponentContainer","newApp","getApp","getApps","from","delete","libraryKeyOrName","libraryMismatch","versionMismatch","warning","logCallback","setUserLogHandler","logLevel","setLogLevelImpl","STORE_NAME","dbPromise","getDbPromise","blocked","upgrade","blocking","terminated","openPromise","event","oldVersion","newVersion","db","openDB","createObjectStore","originalErrorMessage","readHeartbeatsFromIndexedDB","computeKey","idbGetError","writeHeartbeatsToIndexedDB","heartbeatObject","put","appId","HeartbeatServiceImpl","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","_heartbeatsCache","platformLogger","agent","getPlatformInfoString","date","getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","valueOf","now","overwrite","extractHeartbeatsForHeader","heartbeatsToSend","unsentEntries","headerString","stringify","toISOString","heartbeatsCache","maxSize","heartbeatEntry","find","hb","dates","countBytes","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","instanceFactory","mode","onInstanceCreated","Provider","instances","instancesDeferred","instancesOptions","onInitCallbacks","normalizedIdentifier","normalizeInstanceIdentifier","deferred","shouldAutoInitialize","instance","getOrInitializeService","isComponentEager","instanceDeferred","services","_delete","opts","isComponentSet","normalizedDeferredIdentifier","existingCallbacks","Set","add","existingInstance","callbacks","_a","invokeOnInitCallbacks","providers","setComponent","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","_logLevel","_logHandler","_userLogHandler","level","inst","customLogLevel","userLogHandler","ignored","toLowerCase","_superPropBase","property","Reflect","base","getOwnPropertyDescriptor","__rest","s","t","getOwnPropertySymbols","propertyIsEnumerable","ProviderId","ActionCodeOperation","_prodErrorMap","debugErrorMap","prodErrorMap","_DEFAULT_AUTH_ERROR_FACTORY","logClient","_logError","msg","_fail","authOrCode","rest","createErrorInternal","_createError","_errorWithCustomMessage","auth","errorMap","_assertInstanceOf","fullParams","_errorFactory","_assert","assertion","debugFail","failure","debugAssert","instanceCache","_getInstance","cls","Function","_getCurrentUrl","location","href","_isHttpOrHttps","_getCurrentScheme","protocol","Delay","shortDelay","longDelay","isMobile","onLine","Math","min","_emulatorUrl","path","emulator","startsWith","FetchProvider","fetchImpl","headersImpl","responseImpl","fetch","Headers","Response","SERVER_ERROR_MAP","DEFAULT_API_TIMEOUT_MS","_addTidIfNecessary","tenantId","_performApiRequest","customErrorMap","_performFetchWithErrorHandling","body","query","apiKey","_getAdditionalHeaders","headers","languageCode","_getFinalTarget","apiHost","referrerPolicy","fetchFn","_canInitEmulator","networkTimeout","NetworkTimeout","race","response","clearNetworkTimeout","json","_makeTaggedError","ok","errorMessage","serverErrorCode","serverErrorMessage","authError","_performSignInRequest","serverResponse","_serverResponse","host","apiScheme","timer","setTimeout","clearTimeout","errorParams","email","phoneNumber","_tokenResponse","deleteAccount","deleteLinkedAccounts","getAccountInfo","utcTimestampToDateString","utcTimestamp","Number","toUTCString","user","forceRefresh","userInternal","getIdToken","claims","_parseToken","exp","auth_time","iat","signInProvider","authTime","secondsStringToMilliseconds","issuedAtTime","expirationTime","signInSecondFactor","seconds","algorithm","payload","signature","_logoutIfInvalidated","isUserInvalidated","currentUser","signOut","ProactiveRefresh","errorBackoff","isRunning","schedule","timerId","wasError","interval","stsTokenManager","max","getInterval","iteration","UserMetadata","createdAt","lastLoginAt","_initializeTime","lastSignInTime","creationTime","metadata","_reloadWithoutSaving","idToken","users","coreAccount","_notifyReloadListener","newProviderData","providerUserInfo","extractProviderData","providerData","mergeProviderData","oldIsAnonymous","isAnonymous","newIsAnonymous","passwordHash","updates","uid","localId","photoURL","photoUrl","emailVerified","assign","_persistUserIfCurrent","_notifyListenersIfCurrent","original","newData","deduped","o","n","providerId","rawId","requestStsToken","refreshToken","tokenApiHost","accessToken","access_token","expiresIn","expires_in","refresh_token","StsTokenManager","parsedToken","_tokenExpiresIn","updateTokensAndExpiration","isExpired","refresh","oldToken","expiresInSec","toJSON","manager","assertStringOrUndefined","UserImpl","opt","proactiveRefresh","getToken","getIdTokenResult","reload","userInfo","_copy","_assign","_clone","reloadListener","reloadUserInfo","_start","_stop","tokensRefreshed","updateFromServerResponse","clearRefreshToken","_redirectEventId","plainObjectTokenManager","fromJSON","idTokenResponse","InMemoryPersistence","storage","_key","_listener","inMemoryPersistence","_persistenceKeyName","PersistenceUserManager","persistence","userKey","fullUserKey","fullPersistenceKey","boundEventHandler","_onStorageEvent","_addListener","_set","_get","blob","_fromJSON","_remove","newPersistence","getCurrentUser","removeCurrentUser","setCurrentUser","_removeListener","persistenceHierarchy","_isAvailable","availablePersistences","selectedPersistence","userToMigrate","migrationHierarchy","_shouldAllowMigration","_getBrowserName","userAgent","_isIEMobile","_isFirefox","_isBlackBerry","_isWebOS","_isSafari","_isChromeIOS","_isAndroid","matches","_isIOS","_isIOSStandalone","standalone","_isIE10","documentMode","_isMobileBrowser","_getClientVersion","clientPlatform","reportedPlatform","frameworks","reportedFrameworks","AuthMiddlewareQueue","onAbort","wrappedCallback","queue","nextUser","onAbortStack","beforeStateCallback","originalMessage","AuthImpl","heartbeatServiceProvider","operations","authStateSubscription","Subscription","idTokenSubscription","beforeStateQueue","settings","appVerificationDisabledForTesting","clientVersion","sdkClientVersion","popupRedirectResolver","_popupRedirectResolver","_initializationPromise","_deleted","persistenceManager","_shouldInitProactively","_initialize","initializeCurrentUser","lastNotifiedUid","_isInitialized","assertedPersistence","_currentUser","_updateCurrentUser","previouslyStoredUser","futureCurrentUser","needsTocheckMiddleware","authDomain","getOrInitRedirectPersistenceManager","redirectUserEventId","redirectUser","storedUserEventId","tryRedirectSignIn","directlySetCurrentUser","runMiddleware","_overrideRedirectResult","reloadAndSetCurrentUserOrClear","redirectResolver","_completeRedirectFn","_setRedirectUser","navigatorLanguage","languages","language","_getUserLanguage","userExtern","skipBeforeStateCallbacks","notifyAuthListeners","redirectPersistenceManager","setPersistence","completed","registerStateListener","pushCallback","redirectManager","resolver","_redirectPersistence","isProactiveRefreshEnabled","_startProactiveRefresh","_stopProactiveRefresh","currentUid","subscription","cb","addObserver","action","framework","_getFrameworks","getHeartbeatsHeader","heartbeatsHeader","_castAuth","connectAuthEmulator","authInternal","disableWarnings","extractProtocol","authority","exec","substr","port","hostAndPort","bracketedIPv6","parsePort","extractHostAndPort","portStr","emulatorConfig","freeze","attachBanner","el","createElement","sty","style","innerText","position","width","backgroundColor","border","color","bottom","left","margin","zIndex","textAlign","classList","appendChild","readyState","emitEmulatorWarning","protocolEnd","AuthCredential","signInMethod","_auth","_idToken","resetPassword","updateEmailPassword","applyActionCode","signInWithPassword","sendOobCode","sendEmailVerification","sendPasswordResetEmail","sendSignInLinkToEmail","verifyAndChangeEmail","signInWithEmailLink","signInWithEmailLinkForLinking","EmailAuthCredential","_email","_password","_tenantId","password","returnSecureToken","oobCode","_getIdTokenResponse","_fromEmailAndPassword","_fromEmailAndCode","signInWithIdp","OAuthCredential","pendingToken","secret","nonce","buildRequest","autoCreate","requestUri","postBody","cred","oauthToken","oauthTokenSecret","sendPhoneVerificationCode","temporaryProof","VERIFY_PHONE_NUMBER_FOR_EXISTING_ERROR_MAP_","apiRequest","operation","PhoneAuthCredential","signInWithPhoneNumber","_makeVerificationRequest","linkWithPhoneNumber","verifyPhoneNumberForExisting","verificationId","verificationCode","sessionInfo","ActionCodeURL","actionLink","searchParams","parseMode","continueUrl","link","doubleDeepLink","iOSDeepLink","parseDeepLink","EmailAuthProvider","PROVIDER_ID","emailLink","actionCodeUrl","parseLink","FederatedAuthProvider","defaultLanguageCode","customOAuthParameters","customParameters","BaseOAuthProvider","scopes","scope","OAuthProvider","_credential","rawNonce","_fromParams","userCredential","oauthCredentialFromTaggedObject","tokenResponse","oauthIdToken","oauthAccessToken","FacebookAuthProvider","FACEBOOK_SIGN_IN_METHOD","credentialFromTaggedObject","credential","GoogleAuthProvider","addScope","GOOGLE_SIGN_IN_METHOD","GithubAuthProvider","GITHUB_SIGN_IN_METHOD","SAMLAuthCredential","SAMLAuthProvider","samlCredentialFromTaggedObject","_create","TwitterAuthProvider","TWITTER_SIGN_IN_METHOD","signUp","UserCredentialImpl","operationType","_fromIdTokenResponse","providerIdForResponse","userCred","_updateTokensIfNecessary","MultiFactorError","_processCredentialSavingMfaContextIfNecessary","_getReauthenticationResolver","_fromErrorAndOperation","providerDataAsNames","pid","unlink","_assertLinkedStatus","deleteProvider","providersLeft","pd","_link","bypassAuthState","_linkToIdToken","_forOperation","expected","providerIds","_reauthenticate","parsed","sub","_signInWithCredential","signInWithCredential","linkWithCredential","reauthenticateWithCredential","signInWithCustomToken","customToken","getIdTokenResponse","MultiFactorInfoImpl","factorId","mfaEnrollmentId","enrollmentTime","enrolledAt","enrollment","PhoneMultiFactorInfoImpl","_fromServerResponse","phoneInfo","_setActionCodeSettingsOnRequest","actionCodeSettings","dynamicLinkDomain","canHandleCodeInApp","handleCodeInApp","iOS","bundleId","iOSBundleId","android","packageName","androidInstallApp","installApp","androidMinimumVersionCode","minimumVersion","androidPackageName","authModular","requestType","authentication.sendPasswordResetEmail","newPassword","account.resetPassword","account.applyActionCode","checkActionCode","newEmail","mfaInfo","multiFactorInfo","previousEmail","createUserWithEmailAndPassword","api.sendSignInLinkToEmail","credentialWithLink","createAuthUri","continueUri","signinMethods","api.sendEmailVerification","api.verifyAndChangeEmail","updateProfile","profileRequest","apiUpdateProfile","passwordProvider","updateEmailOrPassword","apiUpdateEmailPassword","GenericAdditionalUserInfo","isNewUser","profile","FederatedAdditionalUserInfoWithUsername","username","FacebookAdditionalUserInfo","GithubAdditionalUserInfo","login","GoogleAdditionalUserInfo","TwitterAdditionalUserInfo","screenName","getAdditionalUserInfo","rawUserInfo","kind","MultiFactorSessionImpl","multiFactorSession","mfaPendingCredential","pendingCredential","_fromMfaPendingCredential","_fromIdtoken","MultiFactorResolverImpl","session","hints","signInResolver","assertionExtern","authExtern","_process","mfaResponse","startEnrollPhoneMfa","MultiFactorUserImpl","_onReload","enrolledFactors","getSession","finalizeMfaResponse","infoOrUid","multiFactorUserCache","STORAGE_AVAILABLE_KEY","BrowserPersistenceClass","storageRetriever","setItem","removeItem","getItem","BrowserLocalPersistence","localStorage","poll","onStorageEvent","listeners","localCache","pollTimer","safariLocalStorageNotSynced","_iframeCannotSyncWebStorage","top","_isIframe","fallbackToPolling","oldValue","detachListener","stopPolling","storedValue","triggerListeners","notifyListeners","forAllChangedKeys","_oldValue","listener","setInterval","StorageEvent","clearInterval","startPolling","attachListener","size","browserLocalPersistence","BrowserSessionPersistence","sessionStorage","browserSessionPersistence","_allSettled","promises","fulfilled","reason","Receiver","eventTarget","handleEvent","messageEvent","eventId","eventType","handlers","handlersMap","ports","postMessage","status","handler","origin","eventHandler","receivers","isListeningto","newInstance","_generateEventId","prefix","digits","random","floor","Sender","messageChannel","port1","onMessage","timeout","MessageChannel","start","ackTimer","completionTimer","port2","finally","removeMessageHandler","_window","_isWorker","_getActiveServiceWorker","serviceWorker","ready","registration","active","_getServiceWorkerController","controller","DB_NAME","DB_OBJECTSTORE_NAME","DB_DATA_KEYPATH","DBPromise","getObjectStore","isReadWrite","_deleteDatabase","toPromise","_openDatabase","keyPath","_putObject","getObject","_deleteObject","IndexedDBLocalPersistence","_workerInitializationPromise","initializeServiceWorkerMessaging","op","numAttempts","_openDb","initializeReceiver","initializeSender","_subscribe","_origin","_poll","keyProcessed","_data","activeServiceWorker","sender","_send","results","serviceWorkerReceiverAvailable","write","pendingWrites","_withPendingWrite","_withRetries","notifyServiceWorker","getAllRequest","getAll","keysInResult","fbase_key","localKey","indexedDBLocalPersistence","startSignInPhoneMfa","getRecaptchaParams","recaptchaSiteKey","_loadJS","setAttribute","onload","charset","getElementsByTagName","getScriptParentElement","_generateCallbackName","_WIDGET_ID_START","MockReCaptcha","_widgets","parameters","counter","MockWidget","optWidgetId","getResponse","execute","containerOrId","getElementById","isVisible","clickHandler","checkIfDeleted","responseToken","deleted","len","chars","allowedChars","generateRandomAlphaNumericString","expiredCallback","_JSLOAD_CALLBACK","jsHelpers._generateCallbackName","NETWORK_TIMEOUT_DELAY","RECAPTCHA_BASE","ReCaptchaLoaderImpl","librarySeparatelyLoaded","grecaptcha","render","hl","isHostLanguageValid","shouldResolveImmediately","recaptcha","widgetId","hostLanguage","jsHelpers._loadJS","MockReCaptchaLoaderImpl","RECAPTCHA_VERIFIER_TYPE","DEFAULT_PARAMS","theme","RecaptchaVerifier","tokenChangeListeners","isInvisible","makeTokenCallback","_recaptchaLoader","validateStartingState","assertNotDestroyed","getAssertedRecaptcha","tokenChange","renderPromise","makeRenderPromise","destroyed","clearedOneInstance","childNodes","node","removeChild","sitekey","hasChildNodes","existing","globalFunc","init","guaranteedEmpty","domReady","load","siteKey","ConfirmationResultImpl","onConfirmation","authCredential","_fromVerification","appVerifier","_verifyPhoneNumber","verifier","verify","recaptchaToken","phoneInfoOptions","phoneEnrollmentInfo","phoneSessionInfo","multiFactorHint","multiFactorUid","phoneSignInInfo","phoneResponseInfo","_reset","PhoneAuthProvider","phoneOptions","applicationVerifier","_fromTokenResponse","_withDefaultResolver","resolverOverride","IdpCredential","_buildIdpRequest","sessionId","returnIdpCredential","_signIn","_reauth","_linkUser","AbstractPopupRedirectOperation","pendingPromise","eventManager","onExecution","registerConsumer","urlResponse","getIdpTask","unregisterAndCleanUp","unregisterConsumer","cleanUp","_POLL_WINDOW_CLOSE_TIMEOUT","signInWithPopup","resolverInternal","PopupOperation","executeNotNull","linkWithPopup","authWindow","pollId","currentPopupAction","cancel","_openPopup","associatedEvent","_originValidation","_isIframeWebStorageSupported","isSupported","pollUserCancellation","closed","redirectOutcomeMap","RedirectAction","readyOutcome","_getAndClearPendingRedirectStatus","_redirectUserForId","pendingRedirectKey","resolverPersistence","hasPendingRedirect","_setPendingRedirectStatus","signInWithRedirect","_signInWithRedirect","_openRedirect","reauthenticateWithRedirect","_reauthenticateWithRedirect","prepareUserForRedirect","linkWithRedirect","_linkWithRedirect","getRedirectResult","_getRedirectResult","resolverExtern","AuthEventManager","cachedEventUids","consumers","lastProcessedEventTime","authEventConsumer","queuedRedirectEvent","isEventForConsumer","sendToConsumer","saveEventToCache","hasEventBeenHandled","handled","consumer","hasHandledPotentialRedirect","isNullRedirectEvent","isRedirectEvent","onError","onAuthEvent","eventIdMatches","eventUid","v","_getProjectConfig","IP_ADDRESS_REGEX","HTTP_REGEX","authorizedDomains","domain","matchDomain","currentUrl","URL","hostname","ceUrl","escapedDomainPattern","RegExp","NETWORK_TIMEOUT","resetUnloadedGapiModules","beacon","___jsl","H","hint","r","L","CP","cachedGApiLoader","_loadGapi","loadGapiIframe","gapi","iframes","getContext","ontimeout","Iframe","cbName","js._generateCallbackName","js\r\n                ._loadJS","loadGapi","PING_TIMEOUT","IFRAME_ATTRIBUTES","height","tabindex","EID_FROM_APIHOST","getIframeUrl","eid","fw","_openIframe","gapiLoader._loadGapi","where","messageHandlersFilter","CROSS_ORIGIN_IFRAMES_FILTER","attributes","dontclear","iframe","clearTimerAndResolve","networkErrorTimer","restyle","setHideOnLeave","networkError","ping","BASE_POPUP_OPTIONS","resizable","statusbar","toolbar","TARGET_BLANK","FIREFOX_EMPTY_URL","AuthPopup","_open","screen","availHeight","availWidth","scrollbars","optionsString","reduce","accum","openAsNewWindowIOS","newWin","focus","click","createEvent","initMouseEvent","dispatchEvent","WIDGET_PATH","EMULATOR_WIDGET_PATH","_getRedirectUrl","authType","redirectUrl","additionalParams","setDefaultLanguage","getCustomParameters","getScopes","tid","paramsDict","getHandlerBase","WEB_STORAGE_SUPPORT_KEY","BrowserPopupRedirectResolver","eventManagers","initAndGetManager","register","iframeEvent","authEvent","onEvent","send","originValidationPromises","_validateOrigin","browserPopupRedirectResolver","PhoneMultiFactorAssertionImpl","finalizeEnrollPhoneMfa","phoneVerificationInfo","finalizeSignInPhoneMfa","_finalizeEnroll","_finalizeSignIn","PhoneMultiFactorGenerator","_fromCredential","AuthInterop","internalListeners","assertAuthConfigured","unsubscribe","onIdTokenChanged","updateProactiveRefresh","_cordovaWindow","deps","authInstance","hierarchy","_updateErrorMap","_initializeWithPersistence","_initializeAuthInstance","setInstantiationMode","setInstanceCreatedCallback","_instanceIdentifier","_instance","getVersionForPlatform","_generateHandlerUrl","BuildInfo","computeSha256","sessionDigest","iosBundleId","_performRedirect","handlerUrl","cordova","plugins","browsertab","isAvailable","browserTabIsAvailable","iabRef","openUrl","InAppBrowser","_isIOS7Or8","_waitForAppResume","eventListener","cleanup","onCloseTimer","authEventSeen","closeBrowserTab","resumed","visibilityChanged","visibilityState","addPassiveListener","removePassiveListener","_checkCordovaConfiguration","win","universalLinks","missingPlugin","stringToArrayBuffer","crypto","subtle","digest","buf","arr","Uint8Array","num","padStart","TextEncoder","encode","buff","ArrayBuffer","view","CordovaAuthEventManager","passiveListeners","initPromise","resolveInialized","_generateNewEvent","generateSessionId","_savePartialEvent","persistenceKey","_getAndRemoveEvent","_eventFromPartialAndUrl","partialEvent","callbackUrl","searchParamsOrEmpty","_getDeepLinkFromCallback","errorObject","parseJsonOrNull","idx","CordovaPopupRedirectResolver","attachCallbackListeners","initialized","resetRedirect","_cb","handleOpenURL","noEventTimeout","generateNoEvent","universalLinksCb","eventData","finalEvent","existingHandleOpenURL","packagePrefix","cordovaPopupRedirectResolver","_isAndroidOrIosCordovaScheme","_isIe11","_isEdge","_isWebStorageSupported","impl","_isLocalStorageNotSynchronized","_isPopupRedirectSupported","_isLikelyCordova","_isCordova","timeoutId","Persistence","LOCAL","NONE","SESSION","PERSISTENCE_KEY","_validatePersistenceArgument","_savePersistenceForRedirect","getSessionStorageIfAvailable","_getPersistence","CompatPopupRedirectResolver","selectUnderlyingResolver","assertedUnderlyingResolver","browserResolver","underlyingResolver","isCordova","cordovaResolver","attachExtraErrorFields","MultiFactorResolver","errorInternal","_fromError","credentialFromObject","credErr","credentialFromError","credentialFromResult","convertCredential","credentialPromise","additionalUserInfo","User","getOrCreate","convertConfirmationResult","confirmationResultPromise","confirmationResultExp","confirm","wrapped","resolveSignIn","multiFactor","userModular","_fromUser","phoneCredential","USER_MAP","Auth","linkUnderlyingAuth","buildPersistenceHierarchy","useDeviceLanguage","fetchSignInMethodsForEmail","_logFramework","errorFn","wrapObservers","onAuthStateChanged","converted","isIndexedDBFullySupported","updateCurrentUser","oldNext","persistences","_getPersistencesFromRedirect","verifyPhoneNumber","authProvider","setServiceProps","ActionCodeInfo","Operation","EMAIL_SIGNIN","PASSWORD_RESET","RECOVER_EMAIL","REVERT_SECOND_FACTOR_ADDITION","VERIFY_AND_CHANGE_EMAIL","VERIFY_EMAIL","CompatAuthProvider","CompatRecaptchaVerifier","setMultipleInstances"],"sourceRoot":""}