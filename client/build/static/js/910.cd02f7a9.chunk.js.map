{"version":3,"file":"static/js/910.cd02f7a9.chunk.js","mappings":"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","sources":["Routes/Register.js","Routes/firebase.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { WithContext as ReactTags } from \"react-tag-input\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport firebase from \"./firebase\";\r\n//import Select from 'react-select';\r\nconst user = AuthService.getCurrentUser();\r\n\r\nconst KeyCodes = {\r\n  comma: 188,\r\n  enter: 13,\r\n  space: 49\r\n};\r\n\r\nconst delimiters = [KeyCodes.comma, KeyCodes.enter, KeyCodes.space];\r\n\r\nexport default function Register({ t, languages }) {\r\n  useEffect(() => {\r\n    if (!!user) {\r\n      AuthService.logout();\r\n      window.location.reload();\r\n    }\r\n  }, []);\r\n\r\n  const navigate = useNavigate();\r\n  const [Loading, setLoading] = useState(false);\r\n  const [data, setData] = useState({\r\n    phone: \"\",\r\n    password: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    type: \"\",\r\n    farmertype: \"\",\r\n    address: \"\",\r\n  });\r\n\r\n  const [tags, setTags] = React.useState([]);\r\n  const [tag1, setTag] = useState();\r\n  const [error, seterror] = useState(\"\");\r\n\r\n  const handleDelete = (i) => {\r\n    setTags(tags.filter((tag, index) => index !== i));\r\n  };\r\n\r\n  const handleAddition = (tag) => {\r\n    console.log(\"here\", tag1);\r\n    setTags([...tags, tag]);\r\n    setTag('');\r\n  };\r\n\r\n  const handleDrag = (tag, currPos, newPos) => {\r\n    const newTags = tags.slice();\r\n\r\n    newTags.splice(currPos, 1);\r\n    newTags.splice(newPos, 0, tag);\r\n\r\n    // re-render\r\n    setTags(newTags);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData((prev) => {\r\n      return {\r\n        ...prev,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n  const handleSubmit = (event) => {\r\n    console.log(\"inside handleSubmit\")\r\n    seterror(\"\");\r\n    event.preventDefault();\r\n    const { phone, firstname, lastname, farmertype, type } = data;\r\n\r\n    if (!phone.match(\"[0-9]{10}\")) {\r\n      seterror(\"Please provide valid phone number\");\r\n    } else if (firstname.length === 0 && lastname.length === 0) {\r\n      seterror(\"Please provide valid first and last name\");\r\n    } else if (type.length === 0) {\r\n      seterror(\"Please select type\");\r\n    } else if (type === \"farmer\" && farmertype.length === 0) {\r\n      seterror(\"select producer type\");\r\n    } else if (type === \"farmer\" && tags.length === 0) {\r\n      seterror(\"select atleast one commodity and press enter\");\r\n    } else {\r\n      seterror(\"no error\");\r\n      setLoading(true);\r\n      AuthService.register(\r\n        data.phone,\r\n        data.password,\r\n        data.firstname,\r\n        data.lastname,\r\n        data.type,\r\n        data.farmertype,\r\n        data.address,\r\n        tags\r\n      ).then(\r\n        () => {\r\n          toast.success(\"Registration successful!\", {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setTimeout(() => {\r\n            navigate(\"/registeration-successfull\");\r\n            window.location.reload();\r\n          }, 1000);\r\n        },\r\n        (error) => {\r\n          toast.warn(\"User Already Exists\", {\r\n            position: \"top-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"light\",\r\n          });\r\n          setData({\r\n            phone: \"\",\r\n            password: \"\",\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            type: \"\",\r\n            farmertype: \"\",\r\n            address: \"\",\r\n          });\r\n          setTimeout(() => {\r\n            navigate(\"/login\");\r\n            window.location.reload();\r\n          }, 1000);\r\n        }\r\n      );\r\n    }\r\n  };\r\n  const configureCaptcha = () => {\r\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n      \"sign-in-button\",\r\n      {\r\n        size: \"invisible\",\r\n        callback: (response) => {\r\n          // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n          onSignInSubmit();\r\n          console.log(\"Recaptcha Verified\");\r\n        },\r\n        defaultCountry: \"IN\",\r\n      }\r\n    );\r\n  };\r\n\r\n  const onSignInSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"here\")\r\n    configureCaptcha();\r\n\r\n    const phoneNumber = \"+91\" + data.phone;\r\n    // // console.log(values.mobile)\r\n    // // const phone = values.mobile\r\n    // const phoneNumber = \"+91\" + mobile\r\n    console.log(phoneNumber);\r\n\r\n    const appVerifier = window.recaptchaVerifier;\r\n    firebase\r\n      .auth()\r\n      .signInWithPhoneNumber(phoneNumber, appVerifier)\r\n      .then((confirmationResult) => {\r\n        // SMS sent. Prompt user to type the code from the message, then sign the\r\n        // user in with confirmationResult.confirm(code).\r\n        window.confirmationResult = confirmationResult;\r\n        console.log(\"OTP has been sent\");\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        // Error; SMS not sent\r\n        // ...\r\n        console.log(\"SMS not sent\");\r\n      });\r\n  };\r\n  const onSubmitOTP = (e) => {\r\n    e.preventDefault();\r\n    const code = data.password;\r\n    console.log(code);\r\n    window.confirmationResult\r\n      .confirm(code)\r\n      .then((result) => {\r\n        //User signed in successfully.\r\n        const user = result.user;\r\n        console.log(JSON.stringify(user));\r\n        alert(\"User is verified\");\r\n        //window.location.href = \"/newpassword\";\r\n        //handleSubmit()\r\n        // console.log(\"inside handleSubmit\")\r\n        // seterror(\"\");\r\n\r\n        // const { phone, firstname, lastname, farmertype, type } = data;\r\n\r\n        // if (!phone.match(\"[0-9]{10}\")) {\r\n        //   seterror(\"Please provide valid phone number\");\r\n        // } else if (firstname.length === 0 && lastname.length === 0) {\r\n        //   seterror(\"Please provide valid first and last name\");\r\n        // } else if (type.length === 0) {\r\n        //   seterror(\"Please select type\");\r\n        // } else if (type === \"farmer\" && farmertype.length === 0) {\r\n        //   seterror(\"select producer type\");\r\n        // } else if (type === \"farmer\" && tags.length === 0) {\r\n        //   seterror(\"select atleast one commodity and press enter\");\r\n        // } else {\r\n        //   seterror(\"no error\");\r\n        //   setLoading(true);\r\n        //   AuthService.register(\r\n        //     data.phone,\r\n        //     data.password,\r\n        //     data.firstname,\r\n        //     data.lastname,\r\n        //     data.type,\r\n        //     data.farmertype,\r\n        //     data.address,\r\n        //     tags\r\n        //   ).then(\r\n        //     () => {\r\n        //       toast.success(\"Registration successful!\", {\r\n        //         position: \"top-center\",\r\n        //         autoClose: 3000,\r\n        //         hideProgressBar: false,\r\n        //         closeOnClick: true,\r\n        //         pauseOnHover: true,\r\n        //         draggable: true,\r\n        //         progress: undefined,\r\n        //         theme: \"light\",\r\n        //       });\r\n        //       setTimeout(() => {\r\n        //         navigate(\"/registeration-successfull\");\r\n        //         window.location.reload();\r\n        //       }, 1000);\r\n        //     },\r\n        //     (error) => {\r\n        //       toast.warn(\"User Already Exists\", {\r\n        //         position: \"top-center\",\r\n        //         autoClose: 5000,\r\n        //         hideProgressBar: false,\r\n        //         closeOnClick: true,\r\n        //         pauseOnHover: true,\r\n        //         draggable: true,\r\n        //         progress: undefined,\r\n        //         theme: \"light\",\r\n        //       });\r\n        //       setData({\r\n        //         phone: \"\",\r\n        //         password: \"\",\r\n        //         firstname: \"\",\r\n        //         lastname: \"\",\r\n        //         type: \"\",\r\n        //         farmertype: \"\",\r\n        //         address: \"\",\r\n        //       });\r\n        //       setTimeout(() => {\r\n        //         navigate(\"/login\");\r\n        //         window.location.reload();\r\n        //       }, 1000);\r\n        //     }\r\n        //   );\r\n        // }\r\n\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        // User couldn't sign in (bad verification code?)\r\n        // ...\r\n        console.log(\"erroe in sumbitotp\")\r\n      });\r\n  };\r\n  const [isClearable, setIsClearable] = useState(true);\r\n  const [isSearchable, setIsSearchable] = useState(true);\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isRtl, setIsRtl] = useState(false);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n        color=\"success\"\r\n      />\r\n      {/* Same as */}\r\n      <ToastContainer />\r\n      {!Loading ? (\r\n        <div className=\"authbox\">\r\n          <img\r\n            className=\"login_image\"\r\n            src=\"./images/2.png\"\r\n            alt=\"logo\"\r\n          />\r\n          <form\r\n            className=\"register_details\"\r\n            component=\"form\"\r\n            noValidate\r\n            \r\n            onSubmit={handleSubmit}\r\n            sx={{ mt: 3 }}\r\n          >\r\n            <div id=\"sign-in-button\"></div>\r\n            <img className=\"form-logo\" src=\"./logo.png\" alt=\"form-logo\" />\r\n            <Typography className=\"form-heading\" component=\"h1\" variant=\"h5\">\r\n              Welcome to Wingrowagritech\r\n            </Typography>\r\n            <Typography className=\"form-heading\" mt={2} component=\"h1\" variant=\"h5\">\r\n              Signup with us\r\n            </Typography>\r\n            <Grid className=\"input-div-holder\" container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  autoComplete=\"given-name\"\r\n                  name=\"firstname\"\r\n                  value={data.firstname}\r\n                  onChange={handleChange}\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastname\"\r\n                  value={data.lastname}\r\n                  onChange={handleChange}\r\n                  autoComplete=\"family-name\"\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}  >\r\n                <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  required\r\n                  fullWidth\r\n                  id=\"phone\"\r\n                  label=\"Mobile Number\"\r\n                  name=\"phone\"\r\n                  value={data.phone}\r\n                  onChange={handleChange}\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs ={6}>\r\n              <Button\r\n                type=\"button\"\r\n                fullWidth\r\n                onClick={ onSignInSubmit }\r\n                className=\"signup-btn\"\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                size=\"large\"\r\n                sx={{ mt: 2, mb: 2 }}\r\n              >\r\n                Fetch Otp\r\n              </Button>\r\n              </Grid>\r\n\r\n              <Grid item xs={6}  >\r\n              \r\n              <TextField\r\n                inputlabelprops={{\r\n                  style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                }}\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Enter OTP\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                autoComplete=\"new-password\"\r\n                color=\"success\"\r\n                className=\"textfield\"\r\n              />\r\n            \r\n            \r\n              </Grid>\r\n              <Grid item xs ={6}>\r\n              {/* <button \r\n              fullWidth\r\n              className=\"signup-btn\" \r\n              type=\"button\"\r\n              variant=\"contained\"\r\n                color=\"success\"\r\n                size=\"large\"\r\n              >\r\n              Submit OTP & Register\r\n            </button> */}\r\n            <Button\r\n                type=\"button\"\r\n                fullWidth\r\n                onClick={ onSubmitOTP }\r\n                className=\"signup-btn\"\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                size=\"large\"\r\n                sx={{ mt: 2, mb: 2 }}\r\n              >\r\n                Submit OTP\r\n              </Button>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                <FormControl\r\n                  className=\"textfield\"\r\n                  sx={{ width: \"100%\", fontSize: 14 }}\r\n                >\r\n                  <InputLabel\r\n                    inputlabelprops={{\r\n                      style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                    }}\r\n                    id=\"demo-simple-select-helper-label\"\r\n                  >\r\n                    Type\r\n                  </InputLabel>\r\n                  <Select\r\n                    sx={{ fontSize: \"1.2rem\" }}\r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"demo-simple-select-helper\"\r\n                    value={data.type}\r\n                    label=\"Type\"\r\n                    name=\"type\"\r\n                    onChange={handleChange}\r\n                    color=\"success\"\r\n                  >\r\n                    <MenuItem\r\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                      value=\"\"\r\n                    >\r\n                      <em>Select</em>\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                      value={\"farmer\"}\r\n                    >\r\n                      Producer\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                      value={\"customer\"}\r\n                    >\r\n                      Consumer\r\n                    </MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              {data.type === \"farmer\" && (\r\n                <Grid item xs={12}>\r\n                  <FormControl className='textfield' color=\"success\" sx={{ width: \"100%\" }}>\r\n                    <InputLabel id=\"demo-simple-select-helper-label\">\r\n                      Producer Type\r\n                    </InputLabel>\r\n                    <Select\r\n                      sx={{ fontSize: \"1.3rem\" }}\r\n                      labelId=\"demo-simple-select-helper-label\"\r\n                      id=\"demo-simple-select-helper\"\r\n                      value={data.farmertype}\r\n                      label=\"farmertype\"\r\n                      name=\"farmertype\"\r\n                      onChange={handleChange}\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                        value={\"farmers\"}\r\n                      >\r\n                        Farmer\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                        value={\"Organic farmers\"}\r\n                      >\r\n                        Organic Farmer\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                        value={\"FPO/FPC\"}\r\n                      >\r\n                        FPO/FPC\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                        value={\"Retailer\"}\r\n                      >\r\n                        Retailer\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                        value={\"Wholesaler\"}\r\n                      >\r\n                        Wholesaler\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                        value={\"Start-up\"}\r\n                      >\r\n                        Start Up\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\r\n                        value={\"Vocal for local producers\"}\r\n                      >\r\n                        Vocal for Local Producers\r\n                      </MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              )}\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  inputlabelprops={{\r\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                  }}\r\n                  fullWidth\r\n                  name=\"address\"\r\n                  label=\"address (optional)\"\r\n                  type=\"address\"\r\n                  id=\"address\"\r\n                  value={data.address}\r\n                  onChange={handleChange}\r\n                  autoComplete=\"new-address\"\r\n                  color=\"success\"\r\n                  className=\"textfield\"\r\n                />\r\n              </Grid>\r\n              {data.type === \"farmer\" && (\r\n\r\n                <Grid item xs={6}  >\r\n                  <ReactTags\r\n                    InputProps={{ style: { fontSize: 15 } }}\r\n                    inputlabelprops={{ style: { fontSize: 15 } }}\r\n                    tags={tags}\r\n                    delimiters={delimiters}\r\n                    handleDelete={handleDelete}\r\n                    handleAddition={handleAddition}\r\n                    handleDrag={handleDrag}\r\n                    inputFieldPosition=\"bottom\"\r\n                    handleInputChange={console.log(\"hello-----\", tags)}\r\n                    autocomplete\r\n                    color=\"success\"\r\n                    className='textfield'\r\n                    placeholder=\"Add Selling Products Names and press enter\"\r\n                  />\r\n\r\n\r\n                </Grid>\r\n\r\n\r\n              )}\r\n            </Grid>\r\n            {error !== \"no error\" && (\r\n              <h3\r\n                style={{ alignSelf: \"center\", color: \"red\", marginTop: \"10px\" }}\r\n              >\r\n                {error}\r\n              </h3>\r\n            )}\r\n\r\n          \r\n              <Button item xs ={12}\r\n                type=\"submit\"\r\n                fullWidth\r\n                \r\n                className=\"signup-btn\"\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                size=\"large\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n              >\r\n                register\r\n              </Button>\r\n            \r\n\r\n            <Grid container justifyContent=\"center\">\r\n              <Grid item>\r\n                <Link className=\"form-link\" to=\"/login\" variant=\"body2\">\r\n                  Already have an account? <span className=\"login\">Log In</span>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n          {/* <form onSubmit={onSubmitOTP}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                inputlabelprops={{\r\n                  style: { fontSize: 14, fontFamily: \"monospace\" },\r\n                }}\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Enter OTP\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                autoComplete=\"new-password\"\r\n                color=\"success\"\r\n                className=\"textfield\"\r\n              />\r\n            </Grid>\r\n            <button className=\"forgot-btn\" type=\"submit\">\r\n              Submit OTP & Register\r\n            </button>\r\n          </form> */}\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </div>\r\n  );\r\n}","import firebase from 'firebase/compat/app'\r\nimport 'firebase/compat/auth'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAUxdUdNhrl8BSz_4MxKa0d6FwiCfgMtUE\",\r\n    authDomain: \"otp-demo-cc2a7.firebaseapp.com\",\r\n    projectId: \"otp-demo-cc2a7\",\r\n    storageBucket: \"otp-demo-cc2a7.appspot.com\",\r\n    messagingSenderId: \"646152500375\",\r\n    appId: \"1:646152500375:web:389ef29c749b662bd8e5d2\"\r\n  };\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  // var auth = firebase.auth();\r\nexport default firebase"],"names":["user","AuthService","delimiters","Register","t","languages","useEffect","window","location","reload","navigate","useNavigate","useState","Loading","setLoading","phone","password","firstname","lastname","type","farmertype","address","data","setData","React","tags","setTags","tag1","setTag","error","seterror","handleChange","e","target","name","value","prev","configureCaptcha","recaptchaVerifier","firebase","size","callback","response","onSignInSubmit","console","log","defaultCountry","preventDefault","phoneNumber","appVerifier","signInWithPhoneNumber","then","confirmationResult","catch","className","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","color","src","alt","component","noValidate","onSubmit","event","match","length","toast","progress","undefined","setTimeout","sx","mt","id","variant","container","spacing","item","xs","sm","inputlabelprops","style","fontSize","fontFamily","autoComplete","onChange","required","fullWidth","label","autoFocus","onClick","mb","code","confirm","result","JSON","stringify","alert","width","labelId","InputProps","handleDelete","i","filter","tag","index","handleAddition","handleDrag","currPos","newPos","newTags","slice","splice","inputFieldPosition","handleInputChange","autocomplete","placeholder","alignSelf","marginTop","justifyContent","to","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId"],"sourceRoot":""}